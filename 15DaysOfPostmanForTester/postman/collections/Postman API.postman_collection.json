{
	"info": {
		"_postman_id": "e0a0473f-24d2-4216-a323-d4b20c5fe2ea",
		"name": "Postman API",
		"description": "**Version: 1.22.0**\n\nThe Postman API enables you to programmatically access data stored in your Postman account.\n\n> Certain endpoints may be unavailable depending on your region and/or Postman plan. \n  \n\n## Getting started\n\nYou can get started with the Postman API by [forking the Postman API collection](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) to your workspace. You can also select the following button to fork the collection and get started:  \n[<img src=\"https://run.pstmn.io/button.svg\">](https://god.gw.postman.com/run-collection/12959542-c8142d51-e97c-46b6-bd77-52bb66712c9a?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D12959542-c8142d51-e97c-46b6-bd77-52bb66712c9a%26entityType%3Dcollection%26workspaceId%3D405e0480-49cf-463b-8052-6c0d05a8e8f3)Once you've forked the collection, you can use Postman to send requests.\n\n### EU users\n\nFor users in the EU with [<b>Enterprise</b> plans](https://www.postman.com/pricing/), the Postman API uses the `https://api.eu.postman.com` subdomain. Included in this collection is an **euUrl** variable that contains the EU-specific subdomain. To use it, update the **baseUrl** value with the `https://api.eu.postman.com` subdomain.\n\n## About the Postman API\n\n- You must use a valid API Key to send requests to the API endpoints.\n    \n- The API has [rate and usage limits](https://learning.postman.com/docs/developer/postman-api/postman-api-rate-limits/).\n    \n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.\n    \n- The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an error key.\n    \n- The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman. The `POST` method implies you want to save something new to Postman.\n    \n- For all requests, API calls respond with their corresponding [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). In the Postman client, the status code also provides help text that details the possible meaning of the response code.\n    \n- When calling the API Builder endpoints, you must send an `Accept` header with the `application/vnd.api.v10+json` value.\n    \n\n### IDs and UIDs\n\nAll items in Postman, such as collections, workspaces, and APIs, have IDs and UIDs:\n\n- An ID is the unique ID assigned to a Postman item. For example, `ec29121c-5203-409f-9e84-e83ffc10f226`.\n    \n- The UID is the **full** ID of a Postman item. This value is the item's unique ID concatenated with the user ID. For example, in the `12345678-ec29121c-5203-409f-9e84-e83ffc10f226` UID:\n    \n    - `12345678` is the user's ID.\n        \n    - `ec29121c-5203-409f-9e84-e83ffc10f226` is the item's ID.\n        \n\n### Enum values\n\nAny documented enum values should be considered partial lists and may change over time.\n\n### 503 response\n\nAn HTTP `503 Service Unavailable` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).\n\n### 403 response for unavailable features\n\nDepending on your region and/or Postman [plan](https://www.postman.com/pricing/), some endpoints will return an HTTP `403 Forbidden` response with the \"This feature isn't available in your region.\" detail.\n\n## Authentication\n\nPostman uses API keys for authentication. The API key tells the API server that the request came from you. Everything that you have access to in Postman is accessible with your API key. You can [generate](https://learning.postman.com/docs/developer/postman-api/authentication/#generate-a-postman-api-key) a Postman API key in the [<b>API keys</b>](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.\n\nYou must include an API key in each request to the Postman API with the `X-API-Key` request header. In Postman, you can store your API key as a [vault secret](https://learning.postman.com/docs/sending-requests/postman-vault/postman-vault-secrets/) or an [environment variable](https://www.getpostman.com/docs/environments). The Postman API [collection](https://www.getpostman.com/docs/collections) will use it to make API calls.\n\n### SCIM authentication\n\nWhile all other endpoints in this collection require a Postman API key, the SCIM endpoints require a [SCIM API key](https://learning.postman.com/docs/administration/scim-provisioning/scim-provisioning-overview/#generating-scim-api-key).\n\n### Authentication error response\n\nIf an API key is missing, malformed, or invalid, you will receive an HTTP `401 Unauthorized` response code.\n\n## Rate and usage limits\n\nAPI access [rate limits](https://learning.postman.com/docs/developer/postman-api/postman-api-rate-limits/) apply at a per-user basis in unit time. The limit is **300 requests per minute**. Postman Monitors, as well as the GET `/collections`, GET `/workspaces`, and GET `/workspaces/{id}` endpoints have a rate limit of **10 calls in 10 seconds**.\n\nDepending on your [plan](https://www.postman.com/pricing/), you may also have [usage limits](https://learning.postman.com/docs/billing/resource-usage/). Every API response includes headers to help you identify the status of your use limits. For more information, see [Track Postman API call limits](https://learning.postman.com/docs/developer/postman-api/postman-api-rate-limits/).\n\nWhen you reach your rate or usage limits, the API returns the following HTTP `429 Too Many Requests` status code with one of the following error responses:\n\n- `rateLimited` — Rate limits reached. The response returns the time after which you can resume calls to the Postman API. The response header also includes the `X-RateLimit-RetryAfter` and `Retry-After` responses when you go over your limit, which returns the seconds remaining until you can make another request.\n    \n- `serviceLimitExhausted` — Postman API service limits reached. You will need to contact your Postman Team Admin for assistance.\n    \n\n## Support\n\nFor help regarding accessing the Postman API, you can:\n\n- Visit [Postman Support](https://support.postman.com/hc/en-us) or our [Community and Support](https://www.postman.com/community/) sites.\n    \n- Reach out to the [Postman community](https://community.postman.com/).\n    \n- Submit a help request to [Postman support](https://support.postman.com/hc/en-us/requests/new/).\n    \n\n## Policies\n\n- [Postman Terms of Service](http://www.postman.com/legal/terms/)\n    \n- [Postman Privacy Policy](https://www.postman.com/legal/privacy-policy/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29142931",
		"_collection_link": "https://www.postman.com/dtg111/workspace/esmanur-workspace/collection/29142931-e0a0473f-24d2-4216-a323-d4b20c5fe2ea?action=share&source=collection_link&creator=29142931"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "Schema",
					"item": [
						{
							"name": "Create a schema",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"{{schemaType}}\",\n    \"files\": [\n        {\n            \"path\": \"{{filePath1}}\",\n            \"content\": \"{{content1}}\"\n        },\n         {\n            \"path\": \"{{filePath2}}\",\n            \"content\": \"{{content2}}\"\n        },\n         {\n            \"path\": \"{{filePath3}}\",\n            \"content\": \"{{content3}}\"\n        },\n         {\n            \"path\": \"{{filePath4}}\",\n            \"content\": \"{{content4}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas"
									]
								},
								"description": "Creates a schema for an API. Include the following in the the request body:\n\n- `type` — A **string** value that contains the API schema's type. One of:\n    - `openapi:3_1`\n        \n    - `openapi:3`\n        \n    - `openapi:2`\n        \n    - `openapi:1`\n        \n    - `raml:0_8`\n        \n    - `raml:1`\n        \n    - `wsdl:1`\n        \n    - `wsdl:2`\n        \n    - `graphql`\n        \n    - `proto:2`\n        \n    - `proto:3`\n        \n    - `asyncapi:2`\n        \n- `files` — An **array** of schema files that contains the following:\n    - `path` — A **string** value that contains the schema file's path.\n        \n    - `content` — A **string** value that contains the schema file's stringified contents."
							},
							"response": [
								{
									"name": "Create JSON Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"index.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": [\\n\\n      ]\\n    }\\n  ]\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"createdBy\": \"12345678\",\n            \"path\": \"index.json\",\n            \"updatedBy\": \"12345678\",\n            \"updatedAt\": \"2024-07-18T13:17:30.000Z\",\n            \"root\": {\n                \"enabled\": true\n            },\n            \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n            \"name\": \"index.json\",\n            \"createdAt\": \"2024-07-18T13:17:30.000Z\"\n        }\n    ],\n    \"updatedAt\": \"2024-07-18T13:17:30.000Z\",\n    \"createdAt\": \"2024-07-18T13:17:30.000Z\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\"\n}"
								},
								{
									"name": "Create YAML Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"openapi:3_1\",\n    \"files\": [\n        {\n            \"path\": \"index.yaml\",\n            \"content\": \"openapi: \\\"3.1.0\\\"\\ninfo:\\n  version: \\\"1.0.0\\\"\\n  title: \\\"Sample API\\\"\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: \\\"#/components/schemas/SpacecraftId\\\"\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        \\\"200\\\":\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Spacecraft\\\"\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Error\\\"\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Error\\\"\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - name\\n        - type\\n      properties:\\n        id:\\n          $ref: \\\"#/components/schemas/SpacecraftId\\\"\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\\n\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"openapi:3_1\",\n    \"files\": [\n        {\n            \"createdBy\": \"12345678\",\n            \"path\": \"index.yaml\",\n            \"updatedBy\": \"12345678\",\n            \"updatedAt\": \"2024-07-18T13:28:40.000Z\",\n            \"root\": {\n                \"enabled\": true\n            },\n            \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n            \"name\": \"index.yaml\",\n            \"createdAt\": \"2024-07-18T13:28:40.000Z\"\n        }\n    ],\n    \"updatedAt\": \"2024-07-18T13:28:40.000Z\",\n    \"createdAt\": \"2024-07-18T13:28:40.000Z\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\"\n}"
								},
								{
									"name": "Create GraphQL Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"graphql\",\n    \"files\": [\n        {\n            \"path\": \"posts.graphql\",\n            \"content\": \"type Query {\\r\\n  allPosts: [Post]\\r\\n  allUsers: [User]\\r\\n  postById(id: Int!): Post\\r\\n  userById(id: Int!): User\\r\\n}\\r\\n\\r\\ntype Mutation {\\r\\n  createPost(input: CreatePostInput!): CreatePostPayload\\r\\n  createUser(input: CreateUserInput!): CreateUserPayload\\r\\n}\\r\\n\\r\\ntype Post {\\r\\n  id: Int!\\r\\n  title: String\\r\\n  body: String\\r\\n  createdDate: Datetime\\r\\n  authorId: Int!\\r\\n  userByAuthorId: User\\r\\n}\\r\\n\\r\\ntype User {\\r\\n  id: Int!\\r\\n  username: String\\r\\n  createdDate: Datetime\\r\\n  postsByAuthorId: [Post]\\r\\n}\\r\\n\\r\\ntype CreatePostPayload {\\r\\n  clientMutationId: String\\r\\n  post: Post\\r\\n  userByAuthorId: User\\r\\n}\\r\\n\\r\\ninput CreatePostInput {\\r\\n  clientMutationId: String\\r\\n  post: PostInput!\\r\\n}\\r\\n\\r\\ninput PostInput {\\r\\n  id: Int\\r\\n  title: String\\r\\n  body: String\\r\\n  createdDate: Datetime\\r\\n  authorId: Int!\\r\\n}\\r\\n\\r\\ntype CreateUserPayload {\\r\\n  clientMutationId: String\\r\\n  user: User\\r\\n}\\r\\n\\r\\ninput CreateUserInput {\\r\\n  clientMutationId: String\\r\\n  user: UserInput!\\r\\n}\\r\\n\\r\\ninput UserInput {\\r\\n  id: Int\\r\\n  username: String\\r\\n  createdDate: Datetime\\r\\n}\\r\\n\\r\\nscalar Datetime\\r\\n\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"0ccd23df-1b9c-4964-8d3c-62fc69f60c37\",\n    \"createdAt\": \"2024-01-29T16:53:40.000Z\",\n    \"type\": \"graphql\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2024-01-29T16:53:40.000Z\",\n    \"files\": [\n        {\n            \"id\": \"0ccd23df-1b9c-4964-8d3c-62fc69f60c37\",\n            \"createdAt\": \"2024-01-29T16:53:40.000Z\",\n            \"updatedAt\": \"2024-01-29T16:53:40.000Z\",\n            \"path\": \"posts.graphql\",\n            \"updatedBy\": \"12345678\",\n            \"root\": {\n                \"enabled\": true\n            },\n            \"createdBy\": \"12345678\",\n            \"name\": \"posts.graphql\"\n        }\n    ],\n    \"createdBy\": \"12345678\"\n}"
								},
								{
									"name": "Create Schema with Proto",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"content\": \"<file contents>\",\n            \"root\": {\n                \"enabled\": true\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"proto:2\",\n    \"files\": [\n        {\n            \"path\": \"index.proto\",\n            \"createdBy\": \"557089\",\n            \"id\": \"41a3d7fd-bf9a-4053-b20e-37453962b4d6\",\n            \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n            \"name\": \"index.proto\",\n            \"updatedBy\": \"557089\",\n            \"updatedAt\": \"2023-03-21T10:10:54.000Z\",\n            \"root\": { // The root tag is only allowed for protobuf specifications.\n                \"enabled\": true\n            }\n        }\n    ],\n    \"createdBy\": \"557089\",\n    \"createdAt\": \"2023-03-21T10:10:54.000Z\",\n    \"id\": \"b4fc1bdc-6587-4f9b-95c9-f768146089b4\",\n    \"updatedBy\": \"557089\",\n    \"updatedAt\": \"2023-03-21T10:10:54.000Z\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": []\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Schema Already Exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamsError\",\n    \"title\": \"Could not create the resource\",\n    \"detail\": \"Schema already exists for this API\"\n}"
								},
								{
									"name": "Missing files Parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi:3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Missing parameter: 'files'\"\n}"
								},
								{
									"name": "Missing content Parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"index.json\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid request body\",\n    \"detail\": \"Required field 'content' missing in the files array\"\n}"
								},
								{
									"name": "Invalid type Parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi3\",\n     \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"InvalidParamsError\",\n    \"title\": \"Required parameter is invalid\",\n    \"detail\": \"Required property `type` is invalid. Should be one of: proto:2, proto:3, graphql, openapi:3_1, openapi:3, openapi:2, openapi:1, raml:1, raml:0_8, wsdl:2, wsdl:1, asyncapi:2\"\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\" : \"openapi:3\",\n    \"files\": [\n        {\n            \"path\": \"swagger.json\",\n            \"content\": \"{\\n  \\\"swagger\\\": \\\"2.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Swagger Petstore\\\",\\n    \\\"description\\\": \\\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\\",\\n    \\\"termsOfService\\\": \\\"http://swagger.io/terms/\\\",\\n    \\\"contact\\\": {\\n      \\\"name\\\": \\\"Swagger API Team\\\",\\n      \\\"email\\\": \\\"apiteam@swagger.io\\\",\\n      \\\"url\\\": \\\"http://swagger.io\\\"\\n    },\\n    \\\"license\\\": {\\n      \\\"name\\\": \\\"Apache 2.0\\\",\\n      \\\"url\\\": \\\"https://www.apache.org/licenses/LICENSE-2.0.html\\\"\\n    }\\n  },\\n  \\\"host\\\": \\\"petstore.swagger.io\\\",\\n  \\\"basePath\\\": \\\"/api\\\",\\n  \\\"schemes\\\": [\\n    \\\"http\\\"\\n  ],\\n  \\\"consumes\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"produces\\\": [\\n    \\\"application/json\\\"\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/pets\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns all pets from the system that the user has access to\\\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\\\n\\\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\\\n\\\",\\n        \\\"operationId\\\": \\\"findPets\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/tagsParam\\\"\\n          },\\n          {\\n            \\\"$ref\\\": \\\"parameters.json#/limitsParam\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"$ref\\\": \\\"Pet.json\\\"\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"post\\\": {\\n        \\\"description\\\": \\\"Creates a new pet in the store.  Duplicates are allowed\\\",\\n        \\\"operationId\\\": \\\"addPet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"pet\\\",\\n            \\\"in\\\": \\\"body\\\",\\n            \\\"description\\\": \\\"Pet to add to the store\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"NewPet.json\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    \\\"/pets/{id}\\\": {\\n      \\\"get\\\": {\\n        \\\"description\\\": \\\"Returns a user based on a single ID, if the user does not have access to the pet\\\",\\n        \\\"operationId\\\": \\\"find pet by id\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to fetch\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"pet response\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"Pet.json\\\"\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      },\\n      \\\"delete\\\": {\\n        \\\"description\\\": \\\"deletes a single pet based on the ID supplied\\\",\\n        \\\"operationId\\\": \\\"deletePet\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"path\\\",\\n            \\\"description\\\": \\\"ID of pet to delete\\\",\\n            \\\"required\\\": true,\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"204\\\": {\\n            \\\"description\\\": \\\"pet deleted\\\"\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"unexpected error\\\",\\n            \\\"schema\\\": {\\n              \\\"$ref\\\": \\\"../common/Error.json\\\"\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"Pet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        },\n        {\n            \"path\": \"NewPet.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"allOf\\\": [\\n    {\\n      \\\"$ref\\\": \\\"Pet.json\\\"\\n    },\\n    {\\n      \\\"required\\\": [\\n        \\\"name\\\"\\n      ],\\n      \\\"properties\\\": {\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"integer\\\",\\n          \\\"format\\\": \\\"int64\\\"\\n        }\\n      }\\n    }\\n  ]\\n}\"\n        },\n        {\n            \"path\": \"parameters.json\",\n            \"content\": \"{\\n  \\\"tagsParam\\\": {\\n    \\\"name\\\": \\\"tags\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"tags to filter by\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"collectionFormat\\\": \\\"csv\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  },\\n  \\\"limitsParam\\\": {\\n    \\\"name\\\": \\\"limit\\\",\\n    \\\"in\\\": \\\"query\\\",\\n    \\\"description\\\": \\\"maximum number of results to return\\\",\\n    \\\"required\\\": false,\\n    \\\"type\\\": \\\"integer\\\",\\n    \\\"format\\\": \\\"int32\\\"\\n  }\\n}\"\n        },\n        {\n            \"path\": \"common/Error.json\",\n            \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"code\\\",\\n    \\\"message\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"code\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int32\\\"\\n    },\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
								}
							]
						},
						{
							"name": "Create or update a schema file",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"{{fileContent}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas",
										"{{schemaId}}",
										"files",
										"{{filePath}}"
									]
								},
								"description": "Creates or updates an API schema file. Include the following in the request body:\n\n- `content` — A **string** value that contains the schema file's stringified contents.\n    \n\n**Note:**\n\n- If the provided file path exists, the file is updated with the new contents.\n    \n- If the provided file path does <u>not</u> exist, then a new schema file is created.\n    \n- If the file path contains a `/` (forward slash) character, then a folder is created. For example, if the file path is the `dir/schema.json` value, then a `dir` folder is created with the `schema.json` file inside.\n    \n- You can only update the `root` tag for protobuf specifications."
							},
							"response": [
								{
									"name": "JSON Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"openapi\\\": \\\"3.1.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Sample API\\\",\\n    \\\"description\\\": \\\"Buy or rent spacecrafts\\\"\\n  },\\n  \\\"paths\\\": {\\n    \\\"/spacecrafts/{spacecraftId}\\\": {\\n      \\\"parameters\\\": [\\n        {\\n          \\\"name\\\": \\\"spacecraftId\\\",\\n          \\\"description\\\": \\\"The unique identifier of the spacecraft\\\",\\n          \\\"in\\\": \\\"path\\\",\\n          \\\"required\\\": true,\\n          \\\"schema\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          }\\n        }\\n      ],\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Read a spacecraft\\\",\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"The spacecraft corresponding to the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Spacecraft\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"404\\\": {\\n            \\\"description\\\": \\\"No spacecraft found for the provided `spacecraftId`\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"500\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/Error\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"SpacecraftId\\\": {\\n        \\\"description\\\": \\\"The unique identifier of a spacecraft\\\",\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"Spacecraft\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\",\\n          \\\"type\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"$ref\\\": \\\"#/components/schemas/SpacecraftId\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"type\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"enum\\\": [\\n              \\\"capsule\\\",\\n              \\\"probe\\\",\\n              \\\"satellite\\\",\\n              \\\"spaceplane\\\",\\n              \\\"station\\\"\\n            ]\\n          },\\n          \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"message\\\": {\\n            \\\"description\\\": \\\"A human readable error message\\\",\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"securitySchemes\\\": {\\n      \\\"ApiKey\\\": {\\n        \\\"type\\\": \\\"apiKey\\\",\\n        \\\"in\\\": \\\"header\\\",\\n        \\\"name\\\": \\\"X-Api-Key\\\"\\n      }\\n    }\\n  },\\n  \\\"security\\\": [\\n    {\\n      \\\"ApiKey\\\": [\\n\\n      ]\\n    }\\n  ]\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/2fdc8ea1-d02e-4e50-989e-6fa28f42b995/files/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"2fdc8ea1-d02e-4e50-989e-6fa28f42b995",
												"files",
												"index.json"
											]
										},
										"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2024-07-18T13:47:39.000Z\",\n    \"root\": {\n        \"enabled\": true\n    },\n    \"name\": \"index.json\",\n    \"path\": \"index.json\",\n    \"updatedBy\": \"12345678\",\n    \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n    \"updatedAt\": \"2024-07-18T13:48:28.000Z\"\n}"
								},
								{
									"name": "YAML Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"openapi: \\\"3.1.0\\\"\\ninfo:\\n  version: \\\"1.0.0\\\"\\n  title: \\\"Sample API\\\"\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: \\\"#/components/schemas/SpacecraftId\\\"\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        \\\"200\\\":\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Spacecraft\\\"\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Error\\\"\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: \\\"#/components/schemas/Error\\\"\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - name\\n        - type\\n      properties:\\n        id:\\n          $ref: \\\"#/components/schemas/SpacecraftId\\\"\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\\n\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/2fdc8ea1-d02e-4e50-989e-6fa28f42b995/files/index.yaml",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"2fdc8ea1-d02e-4e50-989e-6fa28f42b995",
												"files",
												"index.yaml"
											]
										},
										"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2024-07-18T13:28:40.000Z\",\n    \"root\": {\n        \"enabled\": true\n    },\n    \"updatedAt\": \"2024-07-18T13:30:42.000Z\",\n    \"path\": \"index.yaml\",\n    \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n    \"updatedBy\": \"12345678\",\n    \"name\": \"index.yaml\"\n}"
								},
								{
									"name": "GraphQL Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"type Query {\\r\\n  allPosts: [Post]\\r\\n  allUsers: [User]\\r\\n  postById(id: Int!): Post\\r\\n  userById(id: Int!): User\\r\\n}\\r\\n\\r\\ntype Mutation {\\r\\n  createPost(input: CreatePostInput!): CreatePostPayload\\r\\n  createUser(input: CreateUserInput!): CreateUserPayload\\r\\n}\\r\\n\\r\\ntype Post {\\r\\n  id: Int!\\r\\n  title: String\\r\\n  body: String\\r\\n  createdDate: Datetime\\r\\n  authorId: Int!\\r\\n  userByAuthorId: User\\r\\n}\\r\\n\\r\\ntype User {\\r\\n  id: Int!\\r\\n  username: String\\r\\n  createdDate: Datetime\\r\\n  postsByAuthorId: [Post]\\r\\n}\\r\\n\\r\\ntype CreatePostPayload {\\r\\n  clientMutationId: String\\r\\n  post: Post\\r\\n  userByAuthorId: User\\r\\n}\\r\\n\\r\\ninput CreatePostInput {\\r\\n  clientMutationId: String\\r\\n  post: PostInput!\\r\\n}\\r\\n\\r\\ninput PostInput {\\r\\n  id: Int\\r\\n  title: String\\r\\n  body: String\\r\\n  createdDate: Datetime\\r\\n  authorId: Int!\\r\\n}\\r\\n\\r\\ntype CreateUserPayload {\\r\\n  clientMutationId: String\\r\\n  user: User\\r\\n}\\r\\n\\r\\ninput CreateUserInput {\\r\\n  clientMutationId: String\\r\\n  user: UserInput!\\r\\n}\\r\\n\\r\\ninput UserInput {\\r\\n  id: Int\\r\\n  username: String\\r\\n  createdDate: Datetime\\r\\n}\\r\\n\\r\\nscalar Datetime\\r\\n\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/2fdc8ea1-d02e-4e50-989e-6fa28f42b995/files/posts.graphql",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"2fdc8ea1-d02e-4e50-989e-6fa28f42b995",
												"files",
												"posts.graphql"
											]
										},
										"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"updatedAt\": \"2024-07-18T13:26:22.000Z\",\n    \"path\": \"posts.graphql\",\n    \"updatedBy\": \"20891195\",\n    \"createdBy\": \"20891195\",\n    \"root\": {\n        \"enabled\": true\n    },\n    \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n    \"name\": \"posts.graphql\",\n    \"createdAt\": \"2024-07-18T13:24:55.000Z\"\n}"
								},
								{
									"name": "Update root Tag",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"root\": {\n        \"enabled\": true\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/2fdc8ea1-d02e-4e50-989e-6fa28f42b995/files/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"2fdc8ea1-d02e-4e50-989e-6fa28f42b995",
												"files",
												"index.json"
											]
										},
										"description": "Creates an API definition. The request body must contain a `schema` object with the following properties:\n\n*   `type` — A **string** value that contains the API definition's type. One of:  \n    * `openapi3_1`  \n    * `openapi3`  \n    * `openapi2`  \n    * `openapi1`  \n    * `raml`  \n    * `raml1`  \n    * `wsdl1`  \n    * `wsdl2`  \n    * `graphql`  \n    * `proto2`  \n    * `graphql`  \n    * `proto3`  \n* `language` — A **string** value that contains the API definition's language. One of:  \n    * OpenAPI and RAML — `json` or `yaml`  \n    * GraphQL — `graphql`  \n    * WSDL — `xml`  \n    * Protobuf — `proto`  \n* `schema` — A **string** value that contains the API definition's contents."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2fdc8ea1-d02e-4e50-989e-6fa28f42b995\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"path\": \"index.json\",\n    \"name\": \"index.json\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Schema Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the resource you are looking for\"\n}"
								},
								{
									"name": "Schema Not Linked to API",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for Git linked APIs\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"required\\\": [\\n    \\\"id\\\",\\n    \\\"name\\\"\\n  ],\\n  \\\"properties\\\": {\\n    \\\"id\\\": {\\n      \\\"type\\\": \\\"integer\\\",\\n      \\\"format\\\": \\\"int64\\\"\\n    },\\n    \\\"name\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"tag\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    }\\n  }\\n}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Get a schema",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas/{{schemaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas",
										"{{schemaId}}"
									],
									"query": [
										{
											"key": "versionId",
											"value": "<string>",
											"description": "The API's version ID.",
											"disabled": true
										},
										{
											"key": "bundled",
											"value": "true",
											"description": "If true, return the schema in a bundled format.",
											"disabled": true
										}
									]
								},
								"description": "Gets information about API schema. You can use the `versionId` query parameter to get a schema published in an API version.\n\nYou can use this API to do the following:\n\n- Get a schema's metadata.\n- Get all the files in a schema. This only returns the first file in the schema. The endpoint response contains a link to the next set of response results.\n- Get a schema's contents in multi-file or bundled format.\n    \n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											],
											"query": [
												{
													"key": "versionId",
													"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"files\": {\n        \"meta\": {\n            \"nextPath\": \"/apis/1fdbff7c-036b-4f8a-91bc-17bf3ae74fd2/schemas/cf98c187-17c1-455f-afbf-d4be51f12770/files?cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9\"\n        },\n        \"data\": [\n            {\n                \"createdBy\": \"5000842\",\n                \"path\": \"dir/s1.json\",\n                \"updatedBy\": \"5000842\",\n                \"updatedAt\": \"2023-03-16T19:11:24.000Z\",\n                \"createdAt\": \"2023-03-16T18:38:56.000Z\",\n                \"id\": \"cf98c187-17c1-455f-afbf-d4be51f12770\",\n                \"name\": \"s1.json\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Get Bundled Schema",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af&bundled=true",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											],
											"query": [
												{
													"key": "versionId",
													"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
												},
												{
													"key": "bundled",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"type\": \"openapi:3\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
								},
								{
									"name": "Schema Not Linked to API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Invalid Version ID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											],
											"query": [
												{
													"key": "versionId",
													"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											],
											"query": [
												{
													"key": "versionId",
													"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
								}
							]
						},
						{
							"name": "Get schema files",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas/{{schemaId}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas",
										"{{schemaId}}",
										"files"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. This value defaults to `10`.",
											"disabled": true
										},
										{
											"key": "versionId",
											"value": "<string>",
											"description": "The API's version ID.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										}
									]
								},
								"description": "Gets the files in an API schema. You can use the `versionId` query parameter to get schema files published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files?versionId=66ae9950-0869-4e65-96b0-1e0e47e771af&limit=2&cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											],
											"query": [
												{
													"key": "versionId",
													"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
												},
												{
													"key": "limit",
													"value": "2"
												},
												{
													"key": "cursor",
													"value": "eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJOZXdQZXQuanNvbiJ9\"\n    },\n    \"files\": [\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ed\",\n            \"path\": \"data-model/error.yaml\",\n            \"name\": \"error.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        },\n        {\n            \"id\": \"e8a015e0-f472-4bb3-a523-57ce7c4583ef\",\n            \"path\": \"data-model/error2.yaml\",\n            \"name\": \"error2.yaml\",\n            \"createdAt\": \"2022-03-29T11:37:15Z\",\n            \"updatedAt\": \"2022-03-29T11:37:15Z\",\n            \"createdBy\": 2345,\n            \"updatedBy\": 2345\n        }\n    ]\n}"
								},
								{
									"name": "Schema Not Linked to API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
								},
								{
									"name": "Invalid Version ID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files?versionId=e8a015e0-f472",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											],
											"query": [
												{
													"key": "versionId",
													"value": "e8a015e0-f472"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid version Id provided\",\n    \"detail\": \"Schema not published in this version\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
								}
							]
						},
						{
							"name": "Get schema file contents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas",
										"{{schemaId}}",
										"files",
										"{{filePath}}"
									],
									"query": [
										{
											"key": "versionId",
											"value": "<string>",
											"description": "The API's version ID.",
											"disabled": true
										}
									]
								},
								"description": "Gets an API schema file contents at the defined path. You can use the `versionId` query parameter to get schema file contents published in an API version.\n\n**Note:**\n\nThe `versionId` query parameter is a **required** parameter for API viewers."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
								},
								{
									"name": "Successful Response for Published Version",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json?versionId=ae2b9ab2-28f2-401d-912f-eca09a78e98b",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											],
											"query": [
												{
													"key": "versionId",
													"value": "ae2b9ab2-28f2-401d-912f-eca09a78e98b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\",\n    \"path\": \"s1.json\",\n    \"name\": \"s1\",\n    \"createdBy\": \"2345\",\n    \"updatedBy\": \"2345\",\n    \"createdAt\": \"2022-03-29T11:37:15Z\",\n    \"updatedAt\": \"2022-03-29T11:37:15Z\",\n    \"content\": \"openapi: '3.0.0'\\ninfo:\\n  version: '1.0.0'\\n  title: 'Sample API'\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '#/components/schemas/SpacecraftId'\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '200':\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Spacecraft'\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/Error'\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - names\\n        - type\\n      properties:\\n        id:\\n          $ref: '#/components/schemas/SpacecraftId'\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\\nsecurity:\\n  - ApiKey: []\"\n}"
								},
								{
									"name": "Schema Not Linked to API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Path Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Resource not found\",\n    \"detail\": \"API schema file does not exist\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please ensure that you have required permissions\",\n    \"type\": \"ForbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/s1.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"s1.json"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\",\n    \"detail\": \"This action is not allowed for git linked APIs\"\n}"
								}
							]
						},
						{
							"name": "Delete a schema file",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/schemas/{{schemaId}}/files/{{filePath}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"schemas",
										"{{schemaId}}",
										"files",
										"{{filePath}}"
									]
								},
								"description": "Deletes a file in an API schema. On success, this returns an HTTP `204 No Content` response."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Schema Not Linked to API",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamError\",\n    \"title\": \"Invalid param error\",\n    \"detail\": \"Schema is not linked to the API\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Path Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"File not found: Folder1/nestedFile.json\"\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"Resource not found\",\n    \"detail\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Git-Linked API Errror",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/schemas/5381f010-c4c1-11ed-afa1-0242ac120002/files/data-model/index.json",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"schemas",
												"5381f010-c4c1-11ed-afa1-0242ac120002",
												"files",
												"data-model",
												"index.json"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage your API schema. These endpoints also support multi-file schema."
				},
				{
					"name": "API Version",
					"item": [
						{
							"name": "Create a version",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{apiReleaseName}}\",\n    \"releaseNotes\": \"{{apiReleaseDescription}}\",\n    \"collections\": [\n        {\n            \"id\": \"{{collectionUid}}\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"{{schemaId}}\" \n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									]
								},
								"description": "Creates a new API version asynchronously and immediately returns an HTTP `202 Accepted` response. The response contains a polling link to the task status API in the `Location` header.\n\nThis endpoint is equivalent to publishing a version in Postman app, which is the snapshot of API collections and schema at a given point in time.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n    \n- `collections` — An **array** containing the collection unique IDs to publish.\n    \n- `schemas` — An **array** containing the schema IDs to publish.\n    \n- `branch` — A **string** value that contains the name of the repository branch. This property is required only for Git-linked APIs.\n    \n\nYou can include the following optional properties:\n\n- `releaseNotes` — A **string** value that contains the Markdown-supported version summary."
							},
							"response": [
								{
									"name": "Create Version",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"collections\": [\n        {\n            \"id\": \"12345678-e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c458387\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										},
										"description": "Creates a new API version release. Include the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										},
										{
											"key": "Location",
											"value": "/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"
								},
								{
									"name": "Git-Linked Version with Schema Directory Path",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"v1\",\n    \"branch\": \"develop\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"collections\": [\n        {\n            \"filePath\": \"postman/collections/c1.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schema\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"
								},
								{
									"name": "Git-Linked Version with root File Integration",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"v1\",\n    \"branch\": \"develop\",\n    \"releaseNotes\": \"This is the first release.\",\n    \"schemas\": [\n        {\n            \"filePath\": \"/dir/index.yml\"\n        }\n    ],\n    \"collections\": [\n        {\n            \"filePath\": \"postman/collections/c1.json\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "/apis/{{apiId}}/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n    \"name\": \"v1\",\n    \"releaseNotes\": \"This is the first release.\"\n}"
								},
								{
									"name": "Parameter branch Missing for Git-Linked API",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, branch is missing in the request.\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Auth Token Expired",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"Unauthorized\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"Please use the Postman app to link your OAuth token with the API. Head over here, https://postman.postman.co/api/4ca6c9ae-da02-11ed-afa1-0242ac120002\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"id\": \"12345678-e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c4183ed\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"id\": \"12345678-e8a015e0-f472-4bb3-a523-57ce7c4583ed\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"id\": \"18a015e0-f472-4bb3-a523-57ce7c4183ed\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Repository Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"RepositoryNotFound\",\n    \"title\": \"Repository not found.\",\n    \"detail\": \"We could not find the Git repository you are looking for.\"\n}"
								},
								{
									"name": "Collection Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"CollectionNotFound\",\n    \"title\": \"Collection not found.\",\n    \"detail\": \"We could not find the collection, path/to/collection1.json, in the Git repository. Please ensure that the path is correct.\"\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
								},
								{
									"name": "Branch Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"BranchNotFound\",\n    \"title\": \"Branch not found.\",\n    \"details\": \"We could not find the branch you are looking for.\"\n}"
								},
								{
									"name": "Schema Root Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"SchemaRootNotFound\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Postman app config seems to be corrupted.\"\n}"
								},
								{
									"name": "Invalid Collection Path",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"CollectionPathInvalid\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\",\n    \"title\": \"Collection not found.\"\n}"
								},
								{
									"name": "Inconsistent API State",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\",\n    \"collections\": [\n        {\n            \"filePath\": \"path/to/collection1.json\"\n        },\n        {\n            \"filePath\": \"path/to/collection2.json\"\n        }\n\n    ],\n    \"schemas\": [\n        {\n            \"directoryPath\": \"postman/schemas\"\n        }\n    ],\n    \"branch\": \"develop\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"APIStateInconsistent\",\n    \"title\": \"API state seems to be inconsistent.\",\n    \"detail\": \"Please perform a Git push from the Postman app to sync state between app and repository.\"\n}"
								}
							]
						},
						{
							"name": "Get all versions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. This value defaults to `10`.",
											"disabled": true
										}
									]
								},
								"description": "Gets all the published versions of an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										},
										"description": "Gets information about all of an API version's releases."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"versions\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"releaseNotes\": \"This is the second release of the Test API.\"\n        },\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"releaseNotes\": \"This is the first release of the Test API. For more information, read the documentation.\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"limit\": 2,\n        \"total\": \"100\"\n    }\n}"
								},
								{
									"name": "Success with Cursor Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 2,\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjUyOjAyIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\"\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-15T13:41:43.000Z\",\n            \"name\": \"v1\",\n            \"id\": \"12691e5b-4a6f-4bc7-8335-4ce9b7c5c2ae\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:41:58.000Z\"\n        },\n        {\n            \"createdAt\": \"2023-02-15T13:47:23.000Z\",\n            \"name\": \"v2\",\n            \"id\": \"2665bfbf-888a-48f6-98fa-24c0b7689207\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-15T13:47:27.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Response with cursor Query Parameter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions?cursor=RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=10",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											],
											"query": [
												{
													"key": "cursor",
													"value": "RnJpIEZlYiAxNyAyMDIzIDEwOjM5OjUxIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"versions\": [\n        {\n            \"createdAt\": \"2023-02-17T10:39:51.000Z\",\n            \"name\": \"v4\",\n            \"id\": \"bc792958-ffd5-4a4c-bcf5-1c07cb8f277b\",\n            \"releaseNotes\": \"\",\n            \"updatedAt\": \"2023-02-17T10:39:57.000Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\"\n}"
								},
								{
									"name": "v9 Unsupported",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
								}
							]
						},
						{
							"name": "Get a version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{versionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{versionId}}"
									]
								},
								"description": "Gets information about an API version.\n\n**Note:**\n\n- For API editors, this endpoint returns an HTTP `302 Found` status code when the version status is pending. It also returns the `/apis/{apiId}/tasks/{taskId}` task status response header.\n- For API viewers, this endpoint returns an HTTP `404 Not Found` when the version status is pending."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"13a441a3-6109-4f78-86eb-e0144d0ff275\",\n                \"type\": \"openapi:3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"12345678-aeedb353-494b-4424-82cf-358aece2bd1c\",\n                \"name\": \"collection1\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Version in Pending Status Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										},
										{
											"key": "Location",
											"value": "/apis/5360b75f-447e-467c-9299-12fd6c92450d/tasks/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"description": ""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Successful Response for API Viewers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"releaseNotes\": \"This is the first release.\",\n        \"schemas\": [\n            {\n                \"id\": \"C1\",\n                \"type\": \"openapi:3\"\n            }\n        ],\n        \"collections\": [\n            {\n                \"id\": \"C1\",\n                \"name\": \"collection1\"\n            },\n            {\n                \"id\": \"C2\",\n                \"name\": \"collection2\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Gets information about an API version's release."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
								}
							]
						},
						{
							"name": "Update a version",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{apiVersionName}}\",\n    \"releaseNotes\": \"{{releaseNotes}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{versionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{versionId}}"
									]
								},
								"description": "Updates an API version. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the version name.\n- `releaseNotes` — A **string** value that contains the Markdown-supported release notes.\n    \n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Updates an API version's release. Include at least one of the following properties in the `release` object:\n\n*   `name` — A **string** value that contains the release name.\n*   `visibility` — A **string** value that contains the release's visibility. One of:\n    *   `private` — The release is private.\n    *   `public` — The release is public.\n*   `summary` — A **string** value that contains the release's summary.\n*   `description` — A **string** value that contains the release's description.\n*   `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "VersionNotFound Error When API Version is Pending Publishing",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Release 1.5\",\n    \"releaseNotes\": \"This is the first public release update.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
								}
							]
						},
						{
							"name": "Delete a version",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{versionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{versionId}}"
									]
								},
								"description": "Deletes an API version. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nThis endpoint returns an HTTP `404 Not Found` response when an API version is pending publication."
							},
							"response": [
								{
									"name": "Deleted",
									"originalRequest": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-KEY",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{postman-API-key}}",
													"type": "string"
												},
												{
													"key": "in",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Deletes an API version's release."
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "X-API-KEY",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{postman-API-key}}",
													"type": "string"
												},
												{
													"key": "in",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										},
										"description": "Deletes an API version's release."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have permission to perform this action\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "VersionNotFound Error When API Version is Pending Publishing",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/versions/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"versions",
												"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"VersionNotFound\",\n    \"title\": \"API Version not found.\",\n    \"details\": \"We could not find the API Version you are looking for.\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage your [API's published versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/). Only users with the [API Admin](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#api-roles) or [Workspace Admin](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#workspace-roles) role can publish and manage versions."
				},
				{
					"name": "Collections",
					"item": [
						{
							"name": "Comments",
							"item": [
								{
									"name": "Get a collection's comments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/collections/:collectionId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"collections",
												":collectionId",
												"comments"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "<string>",
													"description": "The API's ID."
												},
												{
													"key": "collectionId",
													"value": "<string>",
													"description": "The collection's unique ID."
												}
											]
										},
										"description": "Gets all comments left by users in an API's collection."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
										},
										{
											"name": "Feature Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "5360b75f-447e-467c-9299-12fd6c92450d"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
										}
									]
								},
								{
									"name": "Create a collection comment",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"{{comment}}\",\n    \"threadId\": {{threadId}},\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/collections/:collectionId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"collections",
												":collectionId",
												"comments"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "<string>",
													"description": "The API's ID."
												},
												{
													"key": "collectionId",
													"value": "<string>",
													"description": "The collection's unique ID."
												}
											]
										},
										"description": "Creates a comment on an API's collection. To create a reply on an existing comment, include the `threadId` property in the request body.\n\nInclude the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
										},
										{
											"name": "Reply to Comment Thread",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
										},
										{
											"name": "Tag User in Comment",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
										},
										{
											"name": "Feature Unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
										}
									]
								},
								{
									"name": "Update a collection's comment",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/collections/:collectionId/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"collections",
												":collectionId",
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "<string>",
													"description": "The API's ID."
												},
												{
													"key": "collectionId",
													"value": "<string>",
													"description": "The collection's unique ID."
												},
												{
													"key": "commentId",
													"value": "<integer>",
													"description": "The comment's ID."
												}
											]
										},
										"description": "Updates a comment on an API's collection. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the updated comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the user value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
										},
										{
											"name": "Tag User in Comment",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
										},
										{
											"name": "Feature Unavailable",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
										}
									]
								},
								{
									"name": "Delete a collection's comment",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/collections/:collectionId/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"collections",
												":collectionId",
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "<string>",
													"description": "The API's ID."
												},
												{
													"key": "collectionId",
													"value": "<string>",
													"description": "The collection's unique ID."
												},
												{
													"key": "commentId",
													"value": "<integer>",
													"description": "The comment's ID."
												}
											]
										},
										"description": "Deletes a comment from an API's collection. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
									},
									"response": [
										{
											"name": "Comment Deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": null
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
										},
										{
											"name": "Feature Unavailable",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/:apiId/collections/:collectionId/comments/:commentId",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														":apiId",
														"collections",
														":collectionId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "90ca9f5a-c4c4-11ed-afa1-0242ac120002"
														},
														{
															"key": "collectionId",
															"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
														},
														{
															"key": "commentId",
															"value": "46814"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
										}
									]
								}
							],
							"description": "These endpoints enable you to manage comments on an [API's collection](https://learning.postman.com/docs/designing-and-developing-your-api/developing-an-api/adding-api-elements/#add-a-collection-to-your-api). You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
						},
						{
							"name": "Get a collection",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/collections/{{collectionUid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"collections",
										"{{collectionUid}}"
									],
									"query": [
										{
											"key": "versionId",
											"value": "<string>",
											"description": "The API's version ID.",
											"disabled": true
										}
									]
								},
								"description": "Gets a collection attached to an API. You can use the `versionId` query parameter to get a collection published in a version.\n\n**Note:**\n\n- You cannot use this endpoint to get a Git-linked API collection. Collections in a Git-linked API are stored in the linked Git repository, not in the Postman cloud. This endpoint only has access to Postman servers.\n    \n- You can get a collection published in an API version with the `versionId` query parameter.\n    \n- The `versionId` query parameter is a **required** parameter for API viewers."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"
								},
								{
									"name": "Successful Response with Version",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"item\": [\n        {\n            \"protocolProfileBehavior\": {\n                \"disableBodyPruning\": true\n            },\n            \"response\": [\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 200,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"OK\",\n                    \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 404,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Not Found\",\n                    \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                },\n                {\n                    \"originalRequest\": {\n                        \"url\": {\n                            \"host\": [\n                                \"https://api.getpostman.com\"\n                            ],\n                            \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                            \"variable\": [\n                                {\n                                    \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                    \"key\": \"spacecraftId\",\n                                    \"value\": \"<string>\"\n                                }\n                            ],\n                            \"path\": [\n                                \"spacecrafts\",\n                                \":spacecraftId\"\n                            ]\n                        },\n                        \"method\": \"GET\",\n                        \"header\": [\n                            {\n                                \"description\": \"Added as a part of security scheme: apikey\",\n                                \"key\": \"X-Api-Key\",\n                                \"value\": \"<API Key>\"\n                            }\n                        ]\n                    },\n                    \"code\": 500,\n                    \"_postman_previewlanguage\": \"json\",\n                    \"responseTime\": null,\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ],\n                    \"name\": \"Unexpected error\",\n                    \"_postman_previewtype\": \"html\",\n                    \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                    \"cookie\": [],\n                    \"status\": \"Internal Server Error\",\n                    \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                }\n            ],\n            \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n            \"request\": {\n                \"url\": {\n                    \"host\": [\n                        \"https://api.getpostman.com\"\n                    ],\n                    \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                    \"variable\": [\n                        {\n                            \"description\": \"(Required) The unique identifier of the spacecraft\",\n                            \"key\": \"spacecraftId\",\n                            \"value\": \"<string>\"\n                        }\n                    ],\n                    \"path\": [\n                        \"spacecrafts\",\n                        \":spacecraftId\"\n                    ]\n                },\n                \"method\": \"GET\",\n                \"header\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/json\"\n                    }\n                ]\n            },\n            \"name\": \"Read a spacecraft\"\n        }\n    ],\n    \"auth\": {\n        \"apikey\": [\n            {\n                \"type\": \"string\",\n                \"key\": \"key\",\n                \"value\": \"X-Api-Key\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"value\",\n                \"value\": \"SCBKCDKCHKDHCK\"\n            },\n            {\n                \"type\": \"string\",\n                \"key\": \"in\",\n                \"value\": \"header\"\n            }\n        ],\n        \"type\": \"apikey\"\n    },\n    \"info\": {\n        \"description\": \"Buy or rent spacecrafts\",\n        \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n        \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n        \"name\": \"Generated\"\n    },\n    \"variable\": [\n        {\n            \"value\": \"/\",\n            \"type\": \"string\",\n            \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n            \"key\": \"baseUrl\"\n        }\n    ]\n}"
								},
								{
									"name": "Version ID Missing",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Invalid request body\",\n    \"type\": \"invalidParamError\",\n    \"detail\": \"Missing field 'versionId' in the request body\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Git-Linked API Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Action not allowed\",\n    \"type\": \"actionNotAllowedError\",\n    \"detail\": \"This action is not allowed for Git linked APIs\"\n}"
								}
							]
						},
						{
							"name": "Add a collection",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operationType\": \"{{operationType}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"collections"
									]
								},
								"description": "Adds a collection to an API. To do this, use the following `operationType` values:\n\n- `COPY_COLLECTION` — Copies a collection from the workspace and adds it to an API.\n    \n- `CREATE_NEW` — Creates a new collection by providing the new collection's content. For a complete list of values, refer to the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n    \n- `GENERATE_FROM_SCHEMA` — Generates the collection from an API schema.\n    \n    - `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI to Postman Collection Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). These properties are case-sensitive.\n        \n\nFor examples of each method, see the collection's response examples."
							},
							"response": [
								{
									"name": "Copy a Collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"12345678-bca9870a-dda0-4e8a-abda-f07b1b868ba0\"\n}"
								},
								{
									"name": "Generate a Collection from Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operationType\": \"GENERATE_FROM_SCHEMA\",\n  \"name\": \"Test Collection\",\n  \"options\": {\n      \"enableOptionalParameters\": true,\n      \"folderStrategy\": \"Tags\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
								},
								{
									"name": "Add a New Collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"operationType\": \"CREATE_NEW\",\n    \"data\": {\n        \"item\": [\n            {\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"response\": [\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 200,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"The spacecraft corresponding to the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"id\\\": \\\"<string>\\\",\\n  \\\"name\\\": \\\"commodo\\\",\\n  \\\"type\\\": \\\"capsule\\\",\\n  \\\"description\\\": \\\"pariatur dolo\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"OK\",\n                        \"id\": \"54467f6e-71d7-43d5-acc0-48f948e38528\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 404,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"No spacecraft found for the provided `spacecraftId`\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Not Found\",\n                        \"id\": \"1231609a-7a3d-444d-aa0c-579703e618f4\"\n                    },\n                    {\n                        \"originalRequest\": {\n                            \"url\": {\n                                \"host\": [\n                                    \"https://api.getpostman.com\"\n                                ],\n                                \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                                \"variable\": [\n                                    {\n                                        \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                        \"key\": \"spacecraftId\",\n                                        \"value\": \"<string>\"\n                                    }\n                                ],\n                                \"path\": [\n                                    \"spacecrafts\",\n                                    \":spacecraftId\"\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"description\": \"Added as a part of security scheme: apikey\",\n                                    \"key\": \"X-Api-Key\",\n                                    \"value\": \"<API Key>\"\n                                }\n                            ]\n                        },\n                        \"code\": 500,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"responseTime\": null,\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\"\n                            }\n                        ],\n                        \"name\": \"Unexpected error\",\n                        \"_postman_previewtype\": \"html\",\n                        \"body\": \"{\\n  \\\"message\\\": \\\"dolore Excepteur\\\"\\n}\",\n                        \"cookie\": [],\n                        \"status\": \"Internal Server Error\",\n                        \"id\": \"db674465-8cec-4208-9724-42278ca9b83c\"\n                    }\n                ],\n                \"id\": \"d3779255-5293-4e58-9b65-8954936e1dca\",\n                \"request\": {\n                    \"url\": {\n                        \"host\": [\n                            \"https://api.getpostman.com\"\n                        ],\n                        \"raw\": \"https://api.getpostman.com/spacecrafts/:spacecraftId\",\n                        \"variable\": [\n                            {\n                                \"description\": \"(Required) The unique identifier of the spacecraft\",\n                                \"key\": \"spacecraftId\",\n                                \"value\": \"<string>\"\n                            }\n                        ],\n                        \"path\": [\n                            \"spacecrafts\",\n                            \":spacecraftId\"\n                        ]\n                    },\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Accept\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"name\": \"Read a spacecraft\"\n            }\n        ],\n        \"auth\": {\n            \"apikey\": [\n                {\n                    \"type\": \"string\",\n                    \"key\": \"key\",\n                    \"value\": \"X-Api-Key\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"value\",\n                    \"value\": \"SCBKCDKCHKDHCK\"\n                },\n                {\n                    \"type\": \"string\",\n                    \"key\": \"in\",\n                    \"value\": \"header\"\n                }\n            ],\n            \"type\": \"apikey\"\n        },\n        \"info\": {\n            \"description\": \"Buy or rent spacecrafts\",\n            \"_postman_id\": \"e726de58-f1b3-4edd-a8a7-2579dc799d39\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"name\": \"Generated\"\n        },\n        \"variable\": [\n            {\n                \"value\": \"/\",\n                \"type\": \"string\",\n                \"id\": \"526a20ba-acfb-4549-a841-8edf2d24b929\",\n                \"key\": \"baseUrl\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operationType\": \"COPY_COLLECTION\",\n  \"data\": {\n    \"collectionId\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Sync collection with schema",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/collections/{{collectionUid}}/sync-with-schema-tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"collections",
										"{{collectionUid}}",
										"sync-with-schema-tasks"
									]
								},
								"description": "Syncs a collection attached to an API with the API schema. This is an asynchronous endpoint that returns an HTTP `202 Accepted` response.\n\nThe response contains a polling link to the `/apis/{apiId}/tasks/{taskId}` endpoint in the Location header.\n\n**Note:**\n\nThis endpoint only supports the OpenAPI 3 schema type."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										},
										{
											"key": "Location",
											"value": "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"taskId\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\"\n}"
								},
								{
									"name": "Invalid Parameter",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"invalidParamsError\",\n    \"detail\": \"Parameter, collectionId is in an invalid format.\",\n    \"title\": \"The specified parameter is in an invalid format\"\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "v9 Unsupported",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This endpoint does not support v9 APIs.\",\n    \"title\": \"Unsupported API\",\n    \"type\": \"unsupportedEntityError\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have access to perform this operation.\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"type\": \"forbiddenError\"\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Schema Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"We could not find a schema linked to this API\",\n    \"title\": \"Schema not found\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "Collection Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"We could not find a collection you are looking for\",\n    \"title\": \"Collection not found\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "API Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "Unsupported Schema Type",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Unsupported schema\",\n    \"detail\": \"Collection syncing is not supported for the current schema type of the API\",\n    \"type\": \"unsupportedEntityError\"\n}"
								},
								{
									"name": "Action Not Allowed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/90ca9f5a-c4c4-11ed-afa1-0242ac120002/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/sync-with-schema-tasks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"90ca9f5a-c4c4-11ed-afa1-0242ac120002",
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"sync-with-schema-tasks"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"This action is not allowed for git linked APIs\",\n    \"type\": \"actionNotAllowedError\",\n    \"title\": \"Action not allowed\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage your collections linked to an API."
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "Get an API's tags",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"tags"
									]
								},
								"description": "Gets all the tags associated with an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "No View Permissions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/apis/12345678-90ca9f5a-c4c4-11ed-afa1-0242ac120002\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Resource Not Found\",\n    \"detail\": \"Slug 'needs-review' does not exist\",\n    \"status\": 404,\n    \"instance\": \"/slugs/needs-review/entities\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update an API's tags",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"tags"
									]
								},
								"description": "Gets all the tags associated with an API. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to an API.\n- Tags must be between 2 and 64 characters long.\n    \n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\\\*[a-z0-9]+$` pattern."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"
								},
								{
									"name": "Tag Exceeds Max Size",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"
								},
								{
									"name": "Exceeds Max Number of Tags",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"Tags max length of 5 exceeded\",\n    \"status\": 400\n}"
								},
								{
									"name": "Special Character Present",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Missing tags Object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"
								},
								{
									"name": "Tag Does Not Start with Letter",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/6fd634a3-79ba-451d-8f07-56a953f96667/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"6fd634a3-79ba-451d-8f07-56a953f96667",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage API tags with Postman's [tagging](https://learning.postman.com/docs/designing-and-developing-your-api/managing-apis/#tagging-apis) feature. Tagging is available on Postman [<b>Enterprise</b> plans](https://www.postman.com/pricing/)."
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Get an API's comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"comments"
									]
								},
								"description": "Gets all comments left by users in an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Create an API comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"{{comment}}\",\n    \"threadId\": {{threadId}},\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"comments"
									]
								},
								"description": "Creates a comment on an API. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
								},
								{
									"name": "Reply to Comment Thread",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
								},
								{
									"name": "Tag User in Comment",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update an API's comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"comments",
										"{{commentId}}"
									]
								},
								"description": "Updates a comment on an API. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the updated comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the user value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
								},
								{
									"name": "Tag User in Comment",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Delete an API's comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"comments",
										"{{commentId}}"
									]
								},
								"description": "Deletes a comment from an API. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
							},
							"response": [
								{
									"name": "Comment Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Missing v10 Accept Header",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"5360b75f-447e-467c-9299-12fd6c92450d",
												"comments",
												"46814"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage comments on an API element. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
				},
				{
					"name": "Get all APIs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"description": "The request header required to use the endpoint."
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis?workspaceId={{workspaceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspaceId",
									"value": "{{workspaceId}}",
									"description": "(Required) The workspace ID."
								},
								{
									"key": "createdBy",
									"value": "<integer>",
									"description": "The user ID of the user that created the resource.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "The pointer to the first record of the set of paginated results.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of rows to return in the response.",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "Return only APIs whose description includes the given value. Matching is not case-sensitive.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about all APIs in a workspace.\n\n**Note:**\n\nThis endpoint only returns APIs created or migrated in Postman v10 and higher."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 12 Jul 2022 16:39:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=915b2bd230311a7e"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=108d09101d76e02a"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "400"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "399"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1657644009"
								},
								{
									"key": "ETag",
									"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T05:52:27.000Z\",\n            \"id\": \"b7c54faa-d119-4572-a18d-e2f5c32348ce\",\n            \"updatedAt\": \"2023-02-16T05:52:27.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-16T07:07:16.000Z\",\n            \"id\": \"d535a8ba-ed4b-4c6a-bf1c-13fac95485b8\",\n            \"updatedAt\": \"2023-02-16T07:07:16.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Pagination with Cursor Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&cursor=V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=&limit=2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
										},
										{
											"key": "cursor",
											"value": "V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk="
										},
										{
											"key": "limit",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"nextCursor\": \"VGh1IEZlYiAxNiAyMDIzIDA3OjA3OjE2IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 4,\n        \"limit\": 2\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        },\n        {\n            \"updatedBy\": \"12345678\",\n            \"createdBy\": \"12345678\",\n            \"name\": \"Test API\",\n            \"summary\": \"This is a test API.\",\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T13:07:08.000Z\",\n            \"id\": \"fec65321-5f55-4feb-8525-be95bccae8dd\",\n            \"updatedAt\": \"2023-02-15T13:07:08.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by createdBy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&createdBy=893478",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
										},
										{
											"key": "createdBy",
											"value": "893478"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by description",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)&description=This is an API for testing purposes",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
										},
										{
											"key": "description",
											"value": "This is an API for testing purposes"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"nextCursor\": \"V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=\",\n        \"total\": 1,\n        \"limit\": 10\n    },\n    \"apis\": [\n        {\n            \"updatedBy\": \"893478\",\n            \"createdBy\": \"893478\",\n            \"name\": \"New API\",\n            \"summary\": null,\n            \"description\": \"This is an API for testing purposes.\",\n            \"createdAt\": \"2023-02-15T06:27:16.000Z\",\n            \"id\": \"73e15000-bc7a-4802-b80e-05fff18fd7f8\",\n            \"updatedAt\": \"2023-02-15T06:27:24.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Missing Workspace ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Workspace Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9)"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\"\n}"
						}
					]
				},
				{
					"name": "Get an API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"description": "The request header required to use the endpoint."
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/:apiId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								":apiId"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "A comma-separated list of one or more of the following additional resources to include in the response. Use this parameter to query for element links to the API, such as collections and schemas:\n- `collections` — Query for linked Postman collections.\n- `versions` — Query for linked versions.\n- `schemas` — Query for linked schemas.\n- `gitInfo` — Query for information about the API’s git-linked repository. This query only returns the linked repository  and folder locations of the files. It does **not** return `collections` or `schemas` information.\n\n**Note:**\nAPI viewers can only use the `versions` option.\n        ",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}",
									"description": "The API's ID."
								}
							]
						},
						"description": "Gets information about an API.\n\n**Note:**\n\n- Git-connected APIs will **only** return the `versions` and `gitInfo` query responses. This is because schema and collection information is stored in the connected Git repository. The `gitInfo` object only lists the repository and folder locations of the files.\n- API viewers can only use the `versions` option in the `include` query parameter."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"updatedBy\": \"12345678\",\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\"\n}"
						},
						{
							"name": "With include Parameter",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId?include=schemas,collections,versions,gitInfo",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "include",
											"value": "schemas,collections,versions,gitInfo"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdBy\": \"12345678\",\n    \"name\": \"Test API\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"collections\": [\n        {\n            \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        }\n    ],\n    \"gitInfo\": {},\n    \"schemas\": [\n        {\n            \"id\": \"ae2b9ab2-28f2-401d-912f-eca09a78e98b\"\n        }\n    ],\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"summary\": \"Test API.\"\n}"
						},
						{
							"name": "Git-Linked API with root File",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId?include=schemas,collections,versions,gitInfo",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "include",
											"value": "schemas,collections,versions,gitInfo"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"gitInfo\": {\n        \"schemaFolder\": \"\",\n        \"domain\": \"https://example.com\",\n        \"repository\": \"repo-name\",\n        \"organization\": \"org-name\",\n        \"collectionFolder\": \"collection-folder\"\n    }\n}"
						},
						{
							"name": "Git-Linked API with a Schema Folder",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId?include=schemas,collections,versions,gitInfo",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "include",
											"value": "schemas,collections,versions,gitInfo"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdBy\": \"12345678\",\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedBy\": \"12345678\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"description\": \"This is a test API.\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        }\n    ],\n    \"gitInfo\": {\n        \"schemaFolder\": \"schema-folder\",\n        \"domain\": \"https://example.com\",\n        \"repository\": \"repo-name\",\n        \"organization\": \"org-name\",\n        \"collectionFolder\": \"collection-folder\"\n    }\n}"
						},
						{
							"name": "Response for API Viewers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId?include=versions",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "include",
											"value": "versions"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n    \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API.\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"versions\": [\n        {\n            \"id\": \"18ccb2dc-1746-4945-ba76-8152b37cr123\",\n            \"name\": \"v1.0.0\"\n        },\n        {\n            \"id\": \"5260b75f-447e-467c-9299-12f16c924503\",\n            \"name\": \"v1.0.1\"\n        }\n    ]\n}"
						},
						{
							"name": "Missing v10 Accept Header",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "API Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Gets information about an API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
						},
						{
							"name": "v9 Unsupported",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
						}
					]
				},
				{
					"name": "Delete an API",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/{{apiId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								"{{apiId}}"
							]
						},
						"description": "Deletes an API. On success, this returns an HTTP `204 No Content` response."
					},
					"response": [
						{
							"name": "Deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								},
								"description": "Deletes an API."
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Missing v10 Accept Header",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								},
								"description": "Deletes an API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "API Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								},
								"description": "Deletes an API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
						},
						{
							"name": "v9 Unsupported",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
						}
					]
				},
				{
					"name": "Get status of an asynchronous task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"description": "The request header required to use the endpoint."
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/:apiId/tasks/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								":apiId",
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}",
									"description": "The API's ID."
								},
								{
									"key": "taskId",
									"value": "{{taskId}}",
									"description": "The task's ID."
								}
							]
						},
						"description": "Gets the status of an asynchronous task."
					},
					"response": [
						{
							"name": "Pending Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"pending\"\n}"
						},
						{
							"name": "Completed Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"resources\": [\n            {\n                \"id\": \"collectionID\",\n                \"url\": \"/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39\"\n            }\n        ]\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2023-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"completed\"\n}"
						},
						{
							"name": "Failed Status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"url\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync\",\n        \"action\": \"update\",\n        \"model\": \"collection\"\n    },\n    \"details\": {\n        \"error\": {\n            \"message\": \"The API contains invalid schema\"\n        }\n    },\n    \"id\": \"66ae9950-0869-4e65-96b0-1e0e47e771af\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2023-02-12 19:34:49\",\n    \"status\": \"failed\"\n}"
						},
						{
							"name": "Invalid Parameter",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "12345678-66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalidParamsError\",\n    \"title\": \"The specified parameter is in an invalid format\",\n    \"detail\": \"Parameter, taskId is in an invalid format.\"\n}"
						},
						{
							"name": "Missing v10 Accept Header",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId/tasks/:taskId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId",
										"tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										},
										{
											"key": "taskId",
											"value": "66ae9950-0869-4e65-96b0-1e0e47e771af"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Parameter, taskId is in an invalid format.\",\n    \"title\": \"The specified parameter is in an invalid format\",\n    \"type\": \"invalidParamsError\"\n}"
						}
					]
				},
				{
					"name": "Update an API",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"description": "The request header required to use the endpoint."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apis/:apiId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								":apiId"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}",
									"description": "The API's ID."
								}
							]
						},
						"description": "Updates an API. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n    \n- `summary` — A **string** value that contains a summary of the API.\n    \n- `description` — A **string** value that contains the description of the API. This supports Markdown formatting."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"
						},
						{
							"name": "Missing v10 Accept Header",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "API Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								},
								"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"instanceNotFoundError\",\n    \"title\": \"We could not find the API you are looking for\",\n    \"detail\": \"We could not find the API you are looking for.\"\n}"
						},
						{
							"name": "v9 Unsupported",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API A\",\n    \"summary\": \"Test API A Schema\",\n    \"description\": \"This is Test API A.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis/:apiId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "5360b75f-447e-467c-9299-12fd6c92450d"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"unsupportedEntityError\",\n    \"title\": \"Unsupported API\",\n    \"detail\": \"This endpoint does not support v9 APIs.\"\n}"
						}
					]
				},
				{
					"name": "Create an API",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"description": "The request header required to use the endpoint."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{apiName}}\",\n    \"summary\": \"{{apiSummary}}\",\n    \"description\": \"{{apiDescription}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apis?workspaceId={{workspaceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspaceId",
									"value": "{{workspaceId}}",
									"description": "(Required) The workspace ID."
								}
							]
						},
						"description": "Creates an API. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains a summary of the API.\n    \n- `description` — A **string** value that contains the description of the API."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n    \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\"\n}"
						},
						{
							"name": "Missing Workspace ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"paramMissingError\",\n    \"title\": \"Parameter is missing in the request.\",\n    \"detail\": \"Parameter, workspaceId is missing in the request.\"\n}"
						},
						{
							"name": "Missing v10 Accept Header",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"API not found. For v10 and later APIs, ensure that your request sends the \\\"application/vnd.api.v10+json\\\" Accept header.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"forbiddenError\",\n    \"title\": \"You are not permitted to perform the action.\",\n    \"detail\": \"You do not have access to perform this operation.\"\n}"
						},
						{
							"name": "API Limit Reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"limitReachedError\",\n    \"title\": \"You've reached the API limit\",\n    \"message\": \"You can create up to 3 APIs on your current plan.\",\n    \"detail\": {\n        \"model\": \"api\",\n        \"action\": \"create\",\n        \"message\": \"You can create up to 3 APIs on your current plan.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								},
								"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Workspace Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api.v10+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test API\",\n    \"summary\": \"Test API Schema\",\n    \"description\": \"This is a test API.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/apis?workspaceId=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"We could not find the workspace you are looking for\",\n    \"detail\": \"We could not find the workspace you are looking for.\",\n    \"type\": \"instanceNotFoundError\"\n}"
						}
					]
				}
			],
			"description": "The **API** endpoints enable you to manage your APIs.\n\n### Note\n\nWhen using these endpoints, you must send an `Accept` header with the `application/vnd.api.v10+json` value."
		},
		{
			"name": "API Security",
			"item": [
				{
					"name": "API definition security validation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schema\": {\n        \"type\": \"{{schemaType}}\",\n        \"language\": \"{{schemaLanguage}}\",\n        \"schema\": \"{{schemaBody}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/security/api-validation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security",
								"api-validation"
							]
						},
						"description": "Performs an analysis on the given definition and returns any issues based on your [predefined rulesets](https://learning.postman.com/docs/api-governance/configurable-rules/configurable-rules-overview/). This endpoint can help you understand the violations' impact and offers solutions to help you resolve any errors. You can include this endpoint to your CI/CD process to automate schema validation.\n\nFor more information, see [Track governance and security rule violations in the API definition](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/).\n\nInclude the following properties in the request body:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    \n    - `openapi3`\n        \n    - `openapi2`\n        \n- `language` — A **string** value that contains the API definition's language. One of:\n    \n    - `json`\n        \n    - `yaml`\n        \n- `schema` — A **string** value that contains the API definition's contents.\n    \n\n**Note:**\n\n- The maximum allowed size of the definition is 10 MB.\n    \n- You must [import and enable](https://learning.postman.com/docs/api-governance/configurable-rules/configuring-api-security-rules/) Postman's [OWASP security rules](https://postman.postman.co/api-governance/libraries/postman_owasp/view) for this endpoint to return any security rule violations."
					},
					"response": [
						{
							"name": "No Warnings Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\n    \\\"openapi\\\": \\\"3.0.0\\\",\\n    \\\"info\\\": {\\n        \\\"version\\\": \\\"1.0\\\",\\n        \\\"title\\\": \\\"Sample API\\\",\\n        \\\"description\\\": \\\"This is a sample API.\\\"\\n    },\\n    \\\"servers\\\": [\\n        {\\n            \\\"url\\\": \\\"https://example.com\\\"\\n        }\\n    ],\\n    \\\"paths\\\": {\\n        \\\"/user\\\": {\\n            \\\"get\\\": {\\n                \\\"summary\\\": \\\"Details about a user\\\",\\n                \\\"operationId\\\": \\\"listUser\\\",\\n                \\\"parameters\\\": [\\n                    {\\n                        \\\"$ref\\\": \\\"#/components/parameters/userId\\\"\\n                    }\\n                ],\\n                \\\"responses\\\": {\\n                    \\\"200\\\": {\\n                        \\\"description\\\": \\\"Details about a user\\\",\\n                        \\\"content\\\": {\\n                            \\\"application/json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                                }\\n                            }\\n                        }\\n                    },\\n                    \\\"500\\\": {\\n                        \\\"content\\\": {\\n                            \\\"description\\\": \\\"Internal Server Error\\\",\\n                            \\\"application/problem+json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/500\\\"\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    },\\n    \\\"components\\\": {\\n        \\\"parameters\\\": {\\n            \\\"userId\\\": {\\n                \\\"name\\\": \\\"id\\\",\\n                \\\"in\\\": \\\"query\\\",\\n                \\\"description\\\": \\\"ID of the user\\\",\\n                \\\"required\\\": true,\\n                \\\"schema\\\": {\\n                    \\\"$ref\\\": \\\"#/components/schemas/userId\\\"\\n                }\\n            }\\n        },\\n        \\\"schemas\\\": {\\n            \\\"User\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"id\\\",\\n                    \\\"name\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"id\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int64\\\"\\n                    },\\n                    \\\"name\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    },\\n                    \\\"tag\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            },\\n            \\\"userId\\\": {\\n                \\\"type\\\": \\\"integer\\\",\\n                \\\"format\\\": \\\"int32\\\"\\n            },\\n            \\\"500\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                    \\\"title\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"Internal Server Error\\\",\\n                        \\\"description\\\": \\\"The generic description for the error's class.\\\"\\n                    },\\n                    \\\"detail\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"An error occurred.\\\",\\n                        \\\"description\\\": \\\"Details about the error.\\\"\\n                    },\\n                    \\\"status\\\": {\\n                        \\\"type\\\": \\\"number\\\",\\n                        \\\"example\\\": 500,\\n                        \\\"description\\\": \\\"The HTTP status code.\\\"\\n                    }\\n                }\\n            },\\n            \\\"Error\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"code\\\",\\n                    \\\"message\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"code\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int32\\\"\\n                    },\\n                    \\\"message\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            }\\n        },\\n        \\\"securitySchemes\\\": {\\n            \\\"BasicAuth\\\": {\\n                \\\"type\\\": \\\"http\\\",\\n                \\\"scheme\\\": \\\"\\\"\\n            }\\n        }\\n    },\\n    \\\"security\\\": [\\n        {\\n            \\\"BasicAuth\\\": []\\n        }\\n    ]\\n}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:45:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=df3a673f51ba400d"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=5f5d0aa04106e973"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"164-PBgIpGM9qzmFyny6Y8Rw7l8wfv4\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"warnings\": []\n}"
						},
						{
							"name": "Successful Response with Governance Warnings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"schema\": \"{\\n    \\\"openapi\\\": \\\"3.0.0\\\",\\n    \\\"info\\\": {\\n        \\\"version\\\": \\\"1.0\\\",\\n        \\\"title\\\": \\\"Sample API\\\",\\n        \\\"description\\\": \\\"This is a sample API.\\\"\\n    },\\n    \\\"servers\\\": [\\n        {\\n            \\\"url\\\": \\\"https://example.com\\\"\\n        }\\n    ],\\n    \\\"paths\\\": {\\n        \\\"/user\\\": {\\n            \\\"get\\\": {\\n                \\\"summary\\\": \\\"Details about a user\\\",\\n                \\\"operationId\\\": \\\"listUser\\\",\\n                \\\"parameters\\\": [\\n                    {\\n                        \\\"$ref\\\": \\\"#/components/parameters/userId\\\"\\n                    }\\n                ],\\n                \\\"responses\\\": {\\n                    \\\"200\\\": {\\n                        \\\"description\\\": \\\"Details about a user\\\",\\n                        \\\"content\\\": {\\n                            \\\"application/json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                                }\\n                            }\\n                        }\\n                    },\\n                    \\\"500\\\": {\\n                        \\\"content\\\": {\\n                            \\\"description\\\": \\\"Internal Server Error\\\",\\n                            \\\"application/problem+json\\\": {\\n                                \\\"schema\\\": {\\n                                    \\\"$ref\\\": \\\"#/components/schemas/500\\\"\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    },\\n    \\\"components\\\": {\\n        \\\"parameters\\\": {\\n            \\\"userId\\\": {\\n                \\\"name\\\": \\\"id\\\",\\n                \\\"in\\\": \\\"query\\\",\\n                \\\"description\\\": \\\"ID of the user\\\",\\n                \\\"required\\\": true,\\n                \\\"schema\\\": {\\n                    \\\"type\\\": \\\"integer\\\",\\n                    \\\"format\\\": \\\"int32\\\"\\n                }\\n            }\\n        },\\n        \\\"schemas\\\": {\\n            \\\"User\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"id\\\",\\n                    \\\"name\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"id\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int64\\\"\\n                    },\\n                    \\\"name\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    },\\n                    \\\"tag\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            },\\n            \\\"500\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"properties\\\": {\\n                    \\\"title\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"Internal Server Error\\\",\\n                        \\\"description\\\": \\\"The generic description for the error's class.\\\"\\n                    },\\n                    \\\"detail\\\": {\\n                        \\\"type\\\": \\\"string\\\",\\n                        \\\"example\\\": \\\"An error occurred.\\\",\\n                        \\\"description\\\": \\\"Details about the error.\\\"\\n                    },\\n                    \\\"status\\\": {\\n                        \\\"type\\\": \\\"number\\\",\\n                        \\\"example\\\": 500,\\n                        \\\"description\\\": \\\"The HTTP status code.\\\"\\n                    }\\n                }\\n            },\\n            \\\"Error\\\": {\\n                \\\"type\\\": \\\"object\\\",\\n                \\\"required\\\": [\\n                    \\\"code\\\",\\n                    \\\"message\\\"\\n                ],\\n                \\\"properties\\\": {\\n                    \\\"code\\\": {\\n                        \\\"type\\\": \\\"integer\\\",\\n                        \\\"format\\\": \\\"int32\\\"\\n                    },\\n                    \\\"message\\\": {\\n                        \\\"type\\\": \\\"string\\\"\\n                    }\\n                }\\n            }\\n        },\\n        \\\"securitySchemes\\\": {\\n            \\\"BasicAuth\\\": {\\n                \\\"type\\\": \\\"http\\\",\\n                \\\"scheme\\\": \\\"\\\"\\n            }\\n        }\\n    },\\n    \\\"security\\\": [\\n        {\\n            \\\"BasicAuth\\\": []\\n        }\\n    ]\\n}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:44:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "15"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=ae1633478c228dbd"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=6da9fbb5ccd53a5e"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"warnings\": [\n        {\n            \"slug\": \"OPENAPI_SPECTRAL_6_RULE_1027\",\n            \"severity\": \"WARN\",\n            \"message\": \"A schema property should have a $ref property referencing a reusable schema\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 55,\n                    \"column\": 26\n                },\n                \"end\": {\n                    \"line\": 58,\n                    \"column\": 17\n                }\n            },\n            \"dataPath\": [\n                \"components\",\n                \"parameters\",\n                \"userId\",\n                \"schema\"\n            ],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#a-schema-property-should-reference-a-reusable-schema\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"A schema property should have a $ref property.\",\n                \"slug\": \"OPENAPI_SPECTRAL_6_schema_reference_reusable\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"2fc9df0e8ccbcdb610ab1694651bb68731fc5add4ebb44da0e5f15faf634b035\"\n        }\n    ]\n}"
						},
						{
							"name": "Successful Response with Security Warnings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"yaml\",\n        \"schema\": \"openapi: '\\\"3.1.0'\\\"\\ninfo:\\n  version: '\\\"1.0.0'\\\"\\n  title: '\\\"Sample API'\\\"\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '\\\"200'\\\":\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Spacecraft'\\\"\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - name\\n        - type\\n      properties:\\n        id:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:44:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "15"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=ae1633478c228dbd"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=6da9fbb5ccd53a5e"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"warnings\": [\n        {\n            \"slug\": \"POSTMAN_OWASP_GOVERNANCE_RULE_0005\",\n            \"severity\": \"WARN\",\n            \"message\": \"Security field is not defined\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 1,\n                    \"column\": 0\n                },\n                \"end\": {\n                    \"line\": 75,\n                    \"column\": 21\n                }\n            },\n            \"dataPath\": [],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#security-field-is-not-defined\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"Security field is not defined\",\n                \"slug\": \"POSTMAN_OWASP_GOVERNANCE_VULNERABILITY_0005\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"ff10236473b8bc137ecdb94c282de9375503772beffffd02eb7aa957e1a3e873\"\n        },\n        {\n            \"slug\": \"POSTMAN_OWASP_GOVERNANCE_RULE_0017\",\n            \"severity\": \"WARN\",\n            \"message\": \"Operation does not enforce any security scheme.\",\n            \"location\": {\n                \"start\": {\n                    \"line\": 16,\n                    \"column\": 8\n                },\n                \"end\": {\n                    \"line\": 36,\n                    \"column\": 50\n                }\n            },\n            \"dataPath\": [\n                \"paths\",\n                \"/spacecrafts/{spacecraftId}\",\n                \"get\"\n            ],\n            \"possibleFixUrl\": \"https://go.pstmn.io/openapi3-security-warnings#operation-does-not-enforce-any-security-scheme\",\n            \"category\": {\n                \"name\": \"governance\",\n                \"slug\": \"governance\"\n            },\n            \"vulnerability\": {\n                \"name\": \"Operation does not enforce any security scheme.\",\n                \"slug\": \"POSTMAN_OWASP_GOVERNANCE_VULNERABILITY_0017\"\n            },\n            \"type\": \"governance\",\n            \"checksum\": \"7760d7354c85b925141d708e14ecaef6512ef20a5b89ba8c722d1fc16c1e5b02\"\n        }\n    ]\n}"
						},
						{
							"name": "Invalid Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:39:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=583cc629de922167"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=510c7b003e356f45"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "ETag",
									"value": "W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": {\n            \"name\": \"Invalid schema\",\n            \"reason\": \"Provided schema type is not supported.\"\n        }\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi3\",\n        \"language\": \"yaml\",\n        \"schema\": \"openapi: '\\\"3.1.0'\\\"\\ninfo:\\n  version: '\\\"1.0.0'\\\"\\n  title: '\\\"Sample API'\\\"\\n  description: Buy or rent spacecrafts\\n\\npaths:\\n  /spacecrafts/{spacecraftId}:\\n    parameters:\\n      - name: spacecraftId\\n        description: The unique identifier of the spacecraft\\n        in: path\\n        required: true\\n        schema:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n    get:\\n      summary: Read a spacecraft\\n      responses:\\n        '\\\"200'\\\":\\n          description: The spacecraft corresponding to the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Spacecraft'\\\"\\n        404:\\n          description: No spacecraft found for the provided `spacecraftId`\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\n        500:\\n          description: Unexpected error\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '\\\"#/components/schemas/Error'\\\"\\ncomponents:\\n  schemas:\\n    SpacecraftId:\\n      description: The unique identifier of a spacecraft\\n      type: string\\n    Spacecraft:\\n      type: object\\n      required:\\n        - id\\n        - name\\n        - type\\n      properties:\\n        id:\\n          $ref: '\\\"#/components/schemas/SpacecraftId'\\\"\\n        name:\\n          type: string\\n        type:\\n          type: string\\n          enum:\\n            - capsule\\n            - probe\\n            - satellite\\n            - spaceplane\\n            - station\\n        description:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n        - message\\n      properties:\\n        message:\\n          description: A human readable error message\\n          type: string\\n  securitySchemes:\\n    ApiKey:\\n      type: apiKey\\n      in: header\\n      name: X-Api-Key\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:44:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "15"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=ae1633478c228dbd"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=6da9fbb5ccd53a5e"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439948"
								},
								{
									"key": "ETag",
									"value": "W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"type\": \"openapi1\",\n        \"language\": \"json\",\n        \"schema\": \"{}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/security/api-validation",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"security",
										"api-validation"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 12 Sep 2021 09:39:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=583cc629de922167"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=510c7b003e356f45"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"7d-N5PP6H8rafi0mv9sTvRw40PwI84\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **API Security** endpoints enable you to manage the [security of your API](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/). API security includes ensuring you follow security and format warnings and schema validation."
		},
		{
			"name": "Audit Logs",
			"item": [
				{
					"name": "Get team audit logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/audit/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit",
								"logs"
							],
							"query": [
								{
									"key": "since",
									"value": "<string>",
									"description": "Return logs created after the given time, in YYYY-MM-DD format.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "Return logs created before the given time, in YYYY-MM-DD format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of audit events to return at once. The maximum value is 300.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<integer>",
									"description": "The cursor to get the next set of results.",
									"disabled": true
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "Return the records in ascending (`asc`) or descending (`desc`) order. This value defaults to `desc` order.",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of your team's generated audit events. For a complete list of all audit events, see [Audit logs](https://learning.postman.com/docs/administration/audit-logs/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"trails\": [\n        {\n            \"id\": 12,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": \"PostmanRuntime/7.29.0 Postman/5.5.4 ChromeApp\",\n            \"action\": \"user.login_password_success\",\n            \"timestamp\": \"2022-11-10T18:31:32.000Z\",\n            \"message\": \"taylor-lee successfully logged in using the Postman password.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"Postman-Testing\",\n                    \"id\": 125648\n                }\n            }\n        },\n        {\n            \"id\": 13,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.scim_add_member\",\n            \"timestamp\": \"2022-11-10T17:19:03.000Z\",\n            \"message\": \"Taylor Lee provisioned user Alex Cruz\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                }\n            }\n        },\n        {\n            \"id\": 14,\n            \"ip\": null,\n            \"userAgent\": null,\n            \"action\": \"user.authaccount.linked\",\n            \"timestamp\": \"2022-11-10T17:19:02.000Z\",\n            \"message\": \"Taylor Lee created account linkage for user.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Alex Cruz\",\n                    \"username\": \"alex.cruz\",\n                    \"email\": \"alex.cruz@example.com\",\n                    \"id\": 87654321\n                },\n                \"team\": {\n                    \"name\": \"Test-API\",\n                    \"id\": 1234\n                },\n                \"variables\": {\n                    \"auth_type\": \"okta\",\n                    \"auth_uid\": \"8f868a0353fd46cbadfe8a6ab3853b94\",\n                    \"authaccount_uid\": \"f97535389e8447ae8006b2795a2059e1\"\n                }\n            }\n        },\n        {\n            \"id\": 15,\n            \"ip\": \"192.0.2.0\",\n            \"userAgent\": null,\n            \"action\": \"team.create_group\",\n            \"timestamp\": \"2022-11-10T15:54:47.000Z\",\n            \"message\": \"Taylor Lee created group Test-API.\",\n            \"data\": {\n                \"actor\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678,\n                    \"active\": true\n                },\n                \"user\": {\n                    \"name\": \"Taylor Lee\",\n                    \"username\": \"taylor.lee\",\n                    \"email\": \"taylor.lee@example.com\",\n                    \"id\": 12345678\n                },\n                \"team\": {\n                    \"name\": \"API-Testing\",\n                    \"id\": 11\n                },\n                \"variables\": {\n                    \"groupId\": \"1234\",\n                    \"groupName\": \"Test-API\",\n                    \"groupVisibility\": \"team\"\n                }\n            }\n        }\n    ],\n    \"nextCursor\": 95427049\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"ForbiddenRequest\",\n        \"message\": \"You do not have permissions to view team Audit logs\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/audit/logs",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"audit",
										"logs"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The [<b>Audit Logs</b>](https://learning.postman.com/docs/administration/audit-logs/) endpoints enable you to monitor and analyze your Enterprise Postman teams.\n\n**Note:**\n\nThese endpoints are **only** available to Postman [<b>Enterprise</b> plans](https://www.postman.com/pricing)."
		},
		{
			"name": "Billing",
			"item": [
				{
					"name": "Get accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Gets Postman billing account details for the given team."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/accounts",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": 12345678,\n    \"teamId\": 1234,\n    \"state\": \"PAID\",\n    \"slots\": {\n        \"total\": 10,\n        \"unbilled\": 0,\n        \"consumed\": 2,\n        \"available\": 8\n    },\n    \"salesChannel\": \"SELF_SERVE\",\n    \"billingEmail\": \"taylor.lee@example.com\"\n}"
						},
						{
							"name": "Not Part of Team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"status\": 400,\n    \"detail\": \"You must be part of a team\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						}
					]
				},
				{
					"name": "List account invoices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/invoices?status=PAID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"invoices"
							],
							"query": [
								{
									"key": "status",
									"value": "PAID",
									"description": "(Required) The invoice status. Currently accepts only the `PAID` value."
								}
							]
						},
						"description": "Gets all invoices for a Postman billing account filtered by the status of the invoice."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": \"inv_7UDSYBJPGQU93N7M\",\n            \"status\": \"PAID\",\n            \"issuedAt\": \"2023-10-12\",\n            \"totalAmount\": {\n                \"value\": 440,\n                \"currency\": \"USD\"\n            },\n            \"links\": {\n                \"web\": {\n                    \"href\": \"https://pay.postman.com/invoices/pay?invoice_public_id=inv_7UDSYBJPGQU93N7M\"\n                }\n            }\n        }\n    ]\n}"
						},
						{
							"name": "No Invoices",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"data\": []\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"status\": 400,\n    \"detail\": \"Please provide a valid status to fetch invoices\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"status\": 403,\n    \"detail\": \"You are not authorized to perform this action\"\n}"
						},
						{
							"name": "Invalid Account ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/accounts/123456/invoices?status=PAID",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"accounts",
										"123456",
										"invoices"
									],
									"query": [
										{
											"key": "status",
											"value": "PAID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"status\": 403,\n    \"detail\": \"Could not fetch invoices for the team.\"\n}"
						}
					]
				}
			],
			"description": "The **Billing** endpoints enable you to manage your Postman billing account, such as your team's plan and [billing](https://learning.postman.com/docs/billing/billing/) information."
		},
		{
			"name": "Collections",
			"item": [
				{
					"name": "Items",
					"item": [
						{
							"name": "Folders",
							"item": [
								{
									"name": "Comments",
									"item": [
										{
											"name": "Get a folder's comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/folders/{{folderUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"folders",
														"{{folderUid}}",
														"comments"
													]
												},
												"description": "Gets all comments left by users in a folder."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Create a folder comment",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"threadId\": {{threadId}},\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/folders/{{folderUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"folders",
														"{{folderUid}}",
														"comments"
													]
												},
												"description": "Creates a comment on a folder. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Reply to Comment Thread",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Update a folder's comment",
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/folders/{{folderUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"folders",
														"{{folderUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Updates a comment on a folder. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Delete a folder's comment",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/folders/{{folderUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"folders",
														"{{folderUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Deletes a comment from a folder. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
											},
											"response": [
												{
													"name": "Comment Deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"folders",
																"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										}
									],
									"description": "These endpoints enable you to manage comments on a folder. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
								},
								{
									"name": "Get a folder",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/folders/{{folderId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"folders",
												"{{folderId}}"
											],
											"query": [
												{
													"key": "ids",
													"value": "<boolean>",
													"description": "If true, returns only the folder properties that contain ID values.",
													"disabled": true
												},
												{
													"key": "uid",
													"value": "<boolean>",
													"description": "If true, returns all IDs in UID format (`userId`-`id`).",
													"disabled": true
												},
												{
													"key": "populate",
													"value": "<boolean>",
													"description": "If true, returns all of a folder's contents.",
													"disabled": true
												}
											]
										},
										"description": "Gets information about a folder in a collection."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\"\n    }\n}"
										},
										{
											"name": "Response with populate Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?populate=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													],
													"query": [
														{
															"key": "populate",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": true,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32546182786,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"folders\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32588211132,\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"id\": \"5c341de9-5751-461f-b7bd-af86bbae740c\",\n                \"name\": \"Test Folder\",\n                \"description\": \"This is a test collection folder.\",\n                \"variables\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"order\": [\n                    \"d924b1a5-6cf7-4dcf-a326-37dc9b91e295\",\n                    \"f0dd54db-8ad7-4b32-9e0b-5a0b5b52f78b\"\n                ],\n                \"folders_order\": [],\n                \"createdAt\": \"2023-09-13T21:56:35.000Z\",\n                \"updatedAt\": \"2023-09-15T16:26:54.000Z\"\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32588208043,\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"name\": \"Test Folder 2\",\n                \"description\": \"This is another test collection folder.\",\n                \"variables\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"order\": [\n                    \"6e5b9306-9e22-4d27-8a70-50692c19ad75\"\n                ],\n                \"folders_order\": [],\n                \"createdAt\": \"2023-09-13T21:54:44.000Z\",\n                \"updatedAt\": \"2023-09-15T16:26:42.000Z\"\n            }\n        ],\n        \"requests\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545633807,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"3ac0e7be-86d9-443b-895d-2c2d959942d7\",\n                \"name\": \"Test A\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": null,\n                \"events\": null,\n                \"rawModeData\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": null,\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"PUT\",\n                \"pathVariables\": {},\n                \"url\": \"http://postman-echo.com/v1/request\",\n                \"preRequestScript\": null,\n                \"tests\": null,\n                \"currentHelper\": null,\n                \"helperAttributes\": null,\n                \"queryParams\": [],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"6d9ec96b-1fec-4455-a9cc-f50d6ceb4997\"\n                ],\n                \"createdAt\": \"2022-10-05T13:16:49.000Z\",\n                \"updatedAt\": \"2023-09-13T14:08:04.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545778004,\n                        \"request\": \"3ac0e7be-86d9-443b-895d-2c2d959942d7\",\n                        \"id\": \"6d9ec96b-1fec-4455-a9cc-f50d6ceb4997\",\n                        \"name\": \"Test B\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"PUT\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/v1/request\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"firstName\\\\\\\": \\\\\\\"Test\\\\\\\",\\\\n    \\\\\\\"lastName\\\\\\\": \\\\\\\"User\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-12T15:20:20.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:44.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32546060484,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n                \"name\": \"Test B\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                            \"exec\": [\n                                \"\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": null,\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"POST\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/post\",\n                \"preRequestScript\": null,\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"apikeyAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n                \"queryParams\": [],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"3c36a13f-2785-49ff-a969-1520769b28f5\"\n                ],\n                \"createdAt\": \"2023-09-07T14:03:52.000Z\",\n                \"updatedAt\": \"2023-09-13T14:26:58.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32546199268,\n                        \"request\": \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n                        \"id\": \"3c36a13f-2785-49ff-a969-1520769b28f5\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": null,\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"12ece9e1-2abf-4edc-8e34-de66e74114d2\\\",\\n        \\\"environment\\\": \\\"12ece9e1-2abf-4edc-8e34-de66e74114d2\\\"\\n    }\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"Test API\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"This is a test API.\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-12T15:21:55.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:33:26.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545561759,\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                \"name\": \"Test A\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"bearer\",\n                    \"bearer\": [\n                        {\n                            \"key\": \"token\",\n                            \"value\": \"TEST\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"b12101c5-fe85-4722-adf0-a1e900eab708\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"7b34bf6b-f440-4768-a486-4ce96e997cb7\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": \"\",\n                \"descriptionFormat\": \"markdown\",\n                \"description\": \"This is a test API.\",\n                \"variables\": null,\n                \"headers\": \"Accept: application/vnd.example.v1+json\\n\",\n                \"method\": \"GET\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/request?id={{id}}\",\n                \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"bearerAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"The API's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [\n                    {\n                        \"key\": \"Accept\",\n                        \"value\": \"application/vnd.example.v1+json\",\n                        \"description\": null,\n                        \"type\": \"text\",\n                        \"enabled\": true\n                    }\n                ],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                    \"33745d7c-0cb3-4097-b038-6d9a08886ae1\"\n                ],\n                \"createdAt\": \"2022-10-05T13:09:24.000Z\",\n                \"updatedAt\": \"2023-09-13T14:04:37.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545559961,\n                        \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                        \"id\": \"33745d7c-0cb3-4097-b038-6d9a08886ae1\",\n                        \"name\": \"Not Found\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"name\": \"Not Found\",\n                            \"code\": 404\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:04:32.000Z\"\n                    },\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545561807,\n                        \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                        \"id\": \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"date\",\n                                \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                            },\n                            {\n                                \"key\": \"content-type\",\n                                \"value\": \"application/json; charset=utf-8\"\n                            },\n                            {\n                                \"key\": \"content-length\",\n                                \"value\": \"468\"\n                            },\n                            {\n                                \"key\": \"etag\",\n                                \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                            },\n                            {\n                                \"key\": \"set-cookie\",\n                                \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n                        \"createdAt\": \"2023-09-12T18:34:27.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:04:37.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545799957,\n                \"folder\": \"35cda0a4-23fb-4add-a352-fc1b0f96fbd1\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"b0e4627a-f359-415e-8f2e-4a86b2506fb5\",\n                \"name\": \"Test E\",\n                \"dataMode\": \"raw\",\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"bearer\",\n                    \"bearer\": [\n                        {\n                            \"key\": \"token\",\n                            \"value\": \"TEST\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": null,\n                \"rawModeData\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                \"descriptionFormat\": null,\n                \"description\": \"This is an example PATCH request.\",\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"PATCH\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/get?id={{id}}\",\n                \"preRequestScript\": null,\n                \"tests\": null,\n                \"currentHelper\": \"bearerAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"The user's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"d47ba091-90b3-4f3a-9e33-09000784bc8f\"\n                ],\n                \"createdAt\": \"2023-09-13T14:05:22.000Z\",\n                \"updatedAt\": \"2023-09-13T14:14:41.000Z\",\n                \"dataOptions\": {\n                    \"raw\": {\n                        \"language\": \"json\"\n                    }\n                },\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545769906,\n                        \"request\": \"b0e4627a-f359-415e-8f2e-4a86b2506fb5\",\n                        \"id\": \"d47ba091-90b3-4f3a-9e33-09000784bc8f\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"1234\\\",\\\"equals\\\":true,\\\"description\\\":\\\"Optional. The user's ID.\\\",\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/get?id=1234\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"firstName\\\\\\\": \\\\\\\"Test\\\\\\\",\\\\n    \\\\\\\"lastName\\\\\\\": \\\\\\\"User\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n                        \"createdAt\": \"2023-09-13T14:05:22.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:21.000Z\"\n                    }\n                ]\n            },\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32546157840,\n                \"folder\": \"35cda0a4-23fb-4add-a352-fc1b0f96fbd1\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"id\": \"f9805781-69c1-4332-be32-bda89eb765aa\",\n                \"name\": \"Test D\",\n                \"dataMode\": null,\n                \"data\": null,\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"events\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"120f2410-edbf-45b2-a21e-1e76335a3c71\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"3300c158-1bdd-4d99-a532-191a037a4d4a\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"rawModeData\": null,\n                \"descriptionFormat\": null,\n                \"description\": \"This is an example GET request.\",\n                \"variables\": null,\n                \"headers\": \"\",\n                \"method\": \"GET\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/get?id={{id}}\",\n                \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n                \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n                \"currentHelper\": \"apikeyAuth\",\n                \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n                \"queryParams\": [\n                    {\n                        \"key\": \"id\",\n                        \"value\": \"{{id}}\",\n                        \"equals\": true,\n                        \"description\": \"Optional. The user's ID.\",\n                        \"enabled\": true\n                    }\n                ],\n                \"headerData\": [],\n                \"pathVariableData\": [],\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"dataDisabled\": false,\n                \"responses_order\": [\n                    \"e4eda8a5-eef0-4fb7-b2c6-dd5bd3d67dd3\"\n                ],\n                \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n                \"updatedAt\": \"2023-09-13T14:31:25.000Z\",\n                \"responses\": [\n                    {\n                        \"owner\": \"12345678\",\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"lastRevision\": 32545767296,\n                        \"request\": \"f9805781-69c1-4332-be32-bda89eb765aa\",\n                        \"id\": \"e4eda8a5-eef0-4fb7-b2c6-dd5bd3d67dd3\",\n                        \"name\": \"Successful Response\",\n                        \"status\": null,\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"time\": null,\n                        \"headers\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"name\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookies\": null,\n                        \"mime\": null,\n                        \"text\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                        \"language\": \"json\",\n                        \"rawDataType\": null,\n                        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":null,\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\"}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"1234\\\",\\\"equals\\\":true,\\\"description\\\":\\\"Optional. The user's ID.\\\",\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/get?id=1234\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                        \"createdAt\": \"2023-09-07T14:39:52.000Z\",\n                        \"updatedAt\": \"2023-09-13T14:13:08.000Z\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Response with ids Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?ids=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													],
													"query": [
														{
															"key": "ids",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"find\",\n        \"populate\": false,\n        \"changeset\": false\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994132707,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"folders_order\": [\n            \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ]\n    }\n}"
										},
										{
											"name": "Response with uid Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa?uid=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													],
													"query": [
														{
															"key": "uid",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994132707,\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"folder\": null,\n        \"id\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"variables\": null,\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"events\": null,\n        \"order\": [\n            \"12345678-81b49e05-0b87-4ca4-ac8c-091aaedafea3\",\n            \"12345678-929acf24-4234-45e1-59cf-dc2b27ea7603\",\n            \"12345678-3cfc2ac8-00a9-47d2-415d-049773f23268\"\n        ],\n        \"folders_order\": [\n            \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"12345678-5c341de9-5751-461f-b7bd-af86bbae740c\"\n        ],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\"\n    }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:33:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987964"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977029"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d245c5c6a357a2ae"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=4aad2f8314926f59"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"21e-lNxUZsSAo40FhZOmzxzakA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "51"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "149"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Create a folder",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{folderName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"folders"
											]
										},
										"description": "Creates a folder in a collection. For a complete list of properties, refer to the **Folder** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\nYou can use this endpoint to to import requests and responses into a newly-created folder. To do this, include the `requests` field and the list of request objects in the request body. For more information, see the provided examples.\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a folder with a blank name."
									},
									"response": [
										{
											"name": "Create a Folder",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:17:56 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "988924"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977044"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "263"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "263"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "4"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=fc60a19470f7b10a"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=1192f8fdfba416a4"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"1e9-6QXPHszx60/RU45DZjZ/sA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "398"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "181"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"folders\": [],\n        \"requests\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test collection folder.\",\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24994132707\n}"
										},
										{
											"name": "Create a Child Folder",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Child Folder\",\n    \"description\": \"This is a child folder of Test Folder.\",\n    \"folder\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 26 May 2022 09:23:31 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977887"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "398190"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "281"
												},
												{
													"key": "RateLimit-Reset",
													"value": "30"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "281"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=c3cfeaccd09e6708"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=9c40f272d1a3ccd6"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"e47-qYjFBZxCW7Czr4jj8r5XlQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"name\": \"Child Folder\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a child folder of Test Folder.\",\n        \"folder\": \"4249383d-2af6-4ac6-9a2b-0930e8f639e3\",\n        \"order\": [],\n        \"folders_order\": [],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"createdAt\": \"2023-08-16T13:47:47.474Z\",\n        \"updatedAt\": \"2023-08-16T13:47:47.474Z\",\n        \"requests\": [],\n        \"folders\": []\n    },\n    \"revision\": 32117045490\n}"
										},
										{
											"name": "Create a Folder with Requests and Responses",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"order\": [\n        \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"c0160fa6-c38a-4589-ba74-92dcf59fde03\"\n    ],\n    \"requests\": [\n        {\n            \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"url\": \"https://postman-echo.com/v1/request\",\n            \"data\": [\n                {\n                    \"key\": \"id\",\n                    \"type\": \"text\",\n                    \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                    \"enabled\": true\n                },\n                {\n                    \"key\": \"collection\",\n                    \"type\": \"text\",\n                    \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                    \"enabled\": true\n                }\n            ],\n            \"name\": \"Example POST request\",\n            \"tests\": \"var data = JSON.parse(responseBody);\",\n            \"method\": \"POST\",\n            \"headers\": \"\",\n            \"dataMode\": \"params\",\n            \"responses\": [\n                {\n                    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n                    \"mime\": \"abc\",\n                    \"name\": \"Success\",\n                    \"text\": \"[21,22,23,24]\",\n                    \"time\": 45,\n                    \"state\": \"{\\\"size\\\":\\\"normal\\\"}\",\n                    \"status\": \"xyz\",\n                    \"cookies\": [\n                        {\n                            \"name\": \"undefined\",\n                            \"path\": \"/\",\n                            \"value\": \"0\",\n                            \"domain\": \"localhost\",\n                            \"secure\": false,\n                            \"expires\": \"11/1/2023 18:57:34\",\n                            \"session\": false,\n                            \"storeId\": \"0\",\n                            \"hostOnly\": true,\n                            \"httpOnly\": false,\n                            \"expirationDate\": 1452535054\n                        },\n                        {\n                            \"name\": \"_ga\",\n                            \"path\": \"/\",\n                            \"value\": \"GA1.1.1111420724.142<br/>2561371\",\n                            \"domain\": \"localhost\",\n                            \"secure\": false,\n                            \"expires\": \"28/1/2023 20:56:10\",\n                            \"session\": false,\n                            \"storeId\": \"0\",\n                            \"hostOnly\": true,\n                            \"httpOnly\": false,\n                            \"expirationDate\": 1485633370\n                        }\n                    ],\n                    \"headers\": [\n                        {\n                            \"key\": \"Access-Control-Allow-Credentials\",\n                            \"name\": \"Access-Control-Allow-Credentials\",\n                            \"value\": \"\",\n                            \"description\": \"\"\n                        },\n                        {\n                            \"key\": \"Access-Control-Allow-Headers\",\n                            \"name\": \"Access-Control-Allow-Headers\",\n                            \"value\": \"\",\n                            \"description\": \"\"\n                        }\n                    ],\n                    \"language\": \"html\",\n                    \"previewType\": \"html\",\n                    \"rawDataType\": \"text\",\n                    \"responseCode\": {\n                        \"code\": 200,\n                        \"name\": \"OK\"\n                    },\n                    \"requestObject\": \"{\\\"name\\\": \\\"Postman Signup API\\\", \\\"description\\\":\\\"To sign up for Postman\\\"}\"\n                }\n            ],\n            \"description\": \"This is an example POST request.\",\n            \"preRequestScript\": \"\",\n            \"pathVariables\": {}\n        },\n        {\n            \"id\": \"c0160fa6-c38a-4589-ba74-92dcf59fde03\",\n            \"name\": \"Example GET request\",\n            \"description\": \"This is an example GET request.\",\n            \"headers\": \"\",\n            \"url\": \"https://postman-echo.com/v1/request\",\n            \"data\": [\n                {\n                    \"key\": \"id\",\n                    \"type\": \"text\",\n                    \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                    \"enabled\": true\n                },\n                {\n                    \"key\": \"collection\",\n                    \"type\": \"text\",\n                    \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                    \"enabled\": true\n                }\n            ],\n            \"tests\": \"var data = JSON.parse(responseBody);\",\n            \"method\": \"GET\",\n            \"dataMode\": \"params\",\n            \"pathVariables\": {},\n            \"preRequestScript\": \"\"\n        }\n    ],\n    \"description\": \"This is a test collection folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 26 May 2022 09:23:31 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977887"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "398190"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "281"
												},
												{
													"key": "RateLimit-Reset",
													"value": "30"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "281"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=c3cfeaccd09e6708"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=9c40f272d1a3ccd6"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"e47-qYjFBZxCW7Czr4jj8r5XlQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"order\": [\n            \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"c0160fa6-c38a-4589-ba74-92dcf59fde03\"\n        ],\n        \"name\": \"Test Folder\",\n        \"description\": \"This is a test collection folder.\",\n        \"folder\": null,\n        \"folders_order\": [],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"createdAt\": \"2022-08-29T16:49:19.891Z\",\n        \"updatedAt\": \"2022-08-29T16:49:20.052Z\",\n        \"transactionId\": \"2039363d-2fe4-4c2f-9e06-347242d0e805\",\n        \"requests\": [\n            {\n                \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n                \"method\": \"POST\",\n                \"dataMode\": \"params\",\n                \"tests\": \"var data = JSON.parse(responseBody);\",\n                \"description\": \"This is an example POST request.\",\n                \"headers\": \"\",\n                \"preRequestScript\": null,\n                \"name\": \"Example POST request\",\n                \"pathVariables\": {},\n                \"url\": \"https://postman-echo.com/v1/request\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"responses_order\": [\n                    \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n                ],\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"exec\": [\n                                \"var data = JSON.parse(responseBody);\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"createdAt\": \"2022-08-29T16:49:19.961Z\",\n                \"updatedAt\": \"2022-08-29T16:49:19.961Z\",\n                \"data\": [\n                    {\n                        \"key\": \"id\",\n                        \"type\": \"text\",\n                        \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                        \"enabled\": true\n                    },\n                    {\n                        \"key\": \"collection\",\n                        \"type\": \"text\",\n                        \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                        \"enabled\": true\n                    }\n                ],\n                \"dataOptions\": {\n                    \"params\": null\n                },\n                \"responses\": [\n                    {\n                        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n                        \"data\": [\n                            {\n                                \"key\": \"id\",\n                                \"type\": \"text\",\n                                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                                \"enabled\": true\n                            },\n                            {\n                                \"key\": \"collection\",\n                                \"type\": \"text\",\n                                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                                \"enabled\": true\n                            }\n                        ],\n                        \"mime\": \"abc\",\n                        \"name\": \"Success\",\n                        \"text\": \"[21,22,23,24]\",\n                        \"time\": \"45\",\n                        \"owner\": \"12345678\",\n                        \"status\": \"xyz\",\n                        \"cookies\": [\n                            {\n                                \"hostOnly\": true,\n                                \"httpOnly\": false,\n                                \"domain\": \"localhost\",\n                                \"storeId\": \"0\",\n                                \"secure\": false,\n                                \"name\": \"undefined\",\n                                \"path\": \"/\",\n                                \"session\": false,\n                                \"value\": \"0\",\n                                \"expires\": \"11/1/2023 18:57:34\",\n                                \"expirationDate\": 1452535054\n                            },\n                            {\n                                \"hostOnly\": true,\n                                \"httpOnly\": false,\n                                \"domain\": \"localhost\",\n                                \"storeId\": \"0\",\n                                \"secure\": false,\n                                \"name\": \"_ga\",\n                                \"path\": \"/\",\n                                \"session\": false,\n                                \"value\": \"GA1.1.1111420724.142<br/>2561371\",\n                                \"expires\": \"11/1/2023 18:57:34\",\n                                \"expirationDate\": 1485633370\n                            }\n                        ],\n                        \"headers\": [\n                            {\n                                \"name\": \"Access-Control-Allow-Credentials\",\n                                \"key\": \"Access-Control-Allow-Credentials\",\n                                \"value\": \"\",\n                                \"description\": \"\"\n                            },\n                            {\n                                \"name\": \"Access-Control-Allow-Headers\",\n                                \"key\": \"Access-Control-Allow-Headers\",\n                                \"value\": \"\",\n                                \"description\": \"\"\n                            }\n                        ],\n                        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n                        \"dataMode\": \"params\",\n                        \"language\": \"html\",\n                        \"createdAt\": \"2022-08-29T16:49:20.029Z\",\n                        \"updatedAt\": \"2022-08-29T16:49:20.029Z\",\n                        \"rawDataType\": \"text\",\n                        \"responseCode\": {\n                            \"code\": 200,\n                            \"name\": \"OK\"\n                        },\n                        \"lastUpdatedBy\": \"12345678\",\n                        \"requestObject\": \"{\\\"name\\\": \\\"Postman Signup API\\\", \\\"description\\\":\\\"To sign up for Postman\\\"}\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"c0160fa6-c38a-4589-ba74-92dcf59fde03\",\n                \"url\": \"https://postman-echo.com/v1/request\",\n                \"data\": [\n                    {\n                        \"enabled\": true,\n                        \"key\": \"id\",\n                        \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                        \"type\": \"text\"\n                    },\n                    {\n                        \"enabled\": true,\n                        \"key\": \"collection\",\n                        \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                        \"type\": \"text\"\n                    }\n                ],\n                \"name\": \"Example GET request\",\n                \"owner\": \"12345678\",\n                \"tests\": \"var data = JSON.parse(responseBody);\",\n                \"events\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"var data = JSON.parse(responseBody);\"\n                            ]\n                        }\n                    }\n                ],\n                \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n                \"method\": \"GET\",\n                \"headers\": \"\",\n                \"dataMode\": \"params\",\n                \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n                \"responses\": [],\n                \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n                \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"dataOptions\": {\n                    \"params\": null\n                },\n                \"description\": \"This is an example GET request.\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"pathVariables\": {},\n                \"responses_order\": [],\n                \"preRequestScript\": null\n            }\n        ],\n        \"folders\": []\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"import\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 26532147542\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:34:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "193"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977025"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987912"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "270"
												},
												{
													"key": "RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "270"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=c57243e6c37d6812"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=86743ce9ef99d1b8"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c1-GeXq5XeA1IqXx0LQWIElag\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "47"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "65"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This folder already exists in the database.\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test collection folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:34:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "193"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977025"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987912"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "270"
												},
												{
													"key": "RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "270"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=c57243e6c37d6812"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=86743ce9ef99d1b8"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c1-GeXq5XeA1IqXx0LQWIElag\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "47"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "65"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Update a folder",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{folderName}}\",\n    \"description\": \"{{folderDescription}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/folders/{{folderId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"folders",
												"{{folderId}}"
											]
										},
										"description": "Updates a folder in a collection. For a complete list of properties, refer to the **Folder** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\n**Note:**\n\nThis endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Wed, 18 May 2022 17:48:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "1059094"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "980752"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "282"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "282"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "34"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Referrer-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "332"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "49"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"
										},
										{
											"name": "Sort Requests in Folder",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"order\": [\n        \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n        \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n        \"c089bf09-c679-4116-9654-9a561276634d\",\n        \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Wed, 18 May 2022 17:48:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "1059094"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "980752"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "282"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "282"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "34"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Referrer-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "332"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "49"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"order\": [\n            \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n            \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n            \"c089bf09-c679-4116-9654-9a561276634d\",\n            \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n        ],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",        \n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"folders_order\": [],\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"
										},
										{
											"name": "Sort Folders in Folder",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"folders_order\": [\n        \"b73b4c0c-881b-47e6-8887-6dabab1fd2d1\",\n        \"abcc80b2-8a1c-45e5-ab1b-becc385b4dbd\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Wed, 18 May 2022 17:48:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "1059094"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "980752"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "282"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "282"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "34"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Referrer-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "332"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "49"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"data\": {\n        \"folders_order\": [\n            \"b73b4c0c-881b-47e6-8887-6dabab1fd2d1\",\n            \"abcc80b2-8a1c-45e5-ab1b-becc385b4dbd\"\n        ],\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"auth\": null,\n        \"name\": \"Test Folder\",\n        \"order\": [],\n        \"owner\": \"12345678\",\n        \"events\": null,\n        \"folder\": null,\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"variables\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"description\": \"This is a test folder.\",\n        \"lastRevision\": 24977100955,\n        \"lastUpdatedBy\": \"12345678\"\n    },\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"update\"\n    },\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"revision\": 24977103385\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Wed, 18 May 2022 17:52:54 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "1058826"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "980745"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "265"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "265"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "6"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Referrer-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "87"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "139"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Change Parent Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:28:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "287"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977035"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "988285"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "25"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=f7ca71a7c5f59306"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=8c9a21c1cd288314"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "70"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "284"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"collection\",\n                \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n            },\n            \"request\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12345678-65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\"\n            }\n        }\n    }\n}"
										},
										{
											"name": "Order Update Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"order\": [\n        \"12345678-66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n        \"12345678-3def345e-b4b3-4319-8e2c-65d2630c0345\",\n        \"12345678-c089bf09-c679-4116-9654-9a561276634d\",\n        \"12345678-eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:28:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "287"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977035"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "988285"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "25"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=f7ca71a7c5f59306"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=8c9a21c1cd288314"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "70"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "284"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"orderUpdateError\",\n        \"message\": \"You can only reorder the requests.\",\n        \"details\": {\n            \"order\": [\n                \"66c7fe01-2c7e-4149-9de1-1143592f7bad\",\n                \"3def345e-b4b3-4319-8e2c-65d2630c0345\",\n                \"c089bf09-c679-4116-9654-9a561276634d\",\n                \"eb82f2b7-0478-4068-8e8a-c277e25ba0d3\"\n            ]\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Folder\",\n    \"description\": \"This is a test folder.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:28:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "287"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977035"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "988285"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "25"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=f7ca71a7c5f59306"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=8c9a21c1cd288314"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"11f-5s4LZRbXNeX+zx9FhS3ytg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "70"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "284"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Delete a folder",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/folders/{{folderId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"folders",
												"{{folderId}}"
											]
										},
										"description": "Deletes a folder in a collection."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:35:44 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987856"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977019"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "272"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "272"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "16"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=102d9b8d042c09b7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=96be4607ab8bb1c1"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"ac-2OmLHoyozzUBNczBP5llVw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "418"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "146"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n    \"meta\": {\n        \"model\": \"folder\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24994562696\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:36:05 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977018"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987835"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "296"
												},
												{
													"key": "RateLimit-Reset",
													"value": "55"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "296"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=fa9930632a963cd7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=0321b34a675c30c4"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c9-7hd0I9XFjJqgHyoxDKS/eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "28"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "97"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the folder you are looking for\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/folders/65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"folders",
														"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:36:05 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "977018"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987835"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "296"
												},
												{
													"key": "RateLimit-Reset",
													"value": "55"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "296"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=fa9930632a963cd7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=0321b34a675c30c4"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c9-7hd0I9XFjJqgHyoxDKS/eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "28"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "97"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"folder\",\n            \"model_id\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								}
							],
							"description": "These endpoints enable you to manage collection folders."
						},
						{
							"name": "Requests",
							"item": [
								{
									"name": "Comments",
									"item": [
										{
											"name": "Get a request's comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/requests/{{requestUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"requests",
														"{{requestUid}}",
														"comments"
													]
												},
												"description": "Gets all comments left by users in a request."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Create a request comment",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"threadId\": {{threadId}},\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/requests/{{requestUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"requests",
														"{{requestUid}}",
														"comments"
													]
												},
												"description": "Creates a comment on a request. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Reply to Comment Thread",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Update a request's comment",
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/requests/{{requestUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"requests",
														"{{requestUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Updates a comment on a request. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Delete a request's comment",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/requests/{{requestUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"requests",
														"{{requestUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Deletes a comment from a request. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
											},
											"response": [
												{
													"name": "Comment Deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"requests",
																"12345678-e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										}
									],
									"description": "These endpoints enable you to manage comments on a request. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
								},
								{
									"name": "Get a request",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/requests/{{requestId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"requests",
												"{{requestId}}"
											],
											"query": [
												{
													"key": "ids",
													"value": "<boolean>",
													"description": "If true, returns only the request properties that contain ID values.",
													"disabled": true
												},
												{
													"key": "uid",
													"value": "<boolean>",
													"description": "If true, returns all IDs in UID format (`userId`-`id`).",
													"disabled": true
												},
												{
													"key": "populate",
													"value": "<boolean>",
													"description": "If true, returns all of a request's contents.",
													"disabled": true
												}
											]
										},
										"description": "Gets information about a request in a collection."
									},
									"response": [
										{
											"name": "GET Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32206434799,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example GET Request\",\n        \"dataMode\": null,\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example GET request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/get\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n        \"updatedAt\": \"2023-08-22T12:52:11.000Z\"\n    }\n}"
										},
										{
											"name": "POST Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST request\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": null,\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": null,\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [\n            \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n        ],\n        \"createdAt\": \"2023-09-01T07:29:17.000Z\",\n        \"updatedAt\": \"2023-09-01T07:36:30.000Z\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    }\n}"
										},
										{
											"name": "Request with Inherit Parent Auth",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": {\n            \"type\": \"bearer\",\n            \"bearer\": [\n                {\n                    \"key\": \"token\",\n                    \"value\": \"xxx\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://api.getpostman.com/v1/request\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": \"bearerAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"xxx\\\"}\",\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": null,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"dataOptions\": {\n            \"params\": null\n        }\n    }\n}"
										},
										{
											"name": "Response with populate Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?populate=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													],
													"query": [
														{
															"key": "populate",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": true,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"20891195\",\n        \"lastUpdatedBy\": \"20891195\",\n        \"lastRevision\": 32545561759,\n        \"folder\": \"adb40f20-deec-4cc6-b1a2-a5591f469c60\",\n        \"collection\": \"b75dfb85-9209-4212-8f3d-a9d5e28167e5\",\n        \"id\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n        \"name\": \"Test A\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": {\n            \"type\": \"bearer\",\n            \"bearer\": [\n                {\n                    \"key\": \"token\",\n                    \"value\": \"TEST\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"b12101c5-fe85-4722-adf0-a1e900eab708\",\n                    \"exec\": [\n                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                        \"    pm.response.to.have.status(200);\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            },\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"7b34bf6b-f440-4768-a486-4ce96e997cb7\",\n                    \"exec\": [\n                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                        \"    console.log(response.json());\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            }\n        ],\n        \"rawModeData\": \"\",\n        \"descriptionFormat\": \"markdown\",\n        \"description\": \"This is a test API.\",\n        \"variables\": null,\n        \"headers\": \"Accept: application/vnd.example.v1+json\\n\",\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/v1/request?id={{id}}\",\n        \"preRequestScript\": \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\\n    console.log(response.json());\\n});\",\n        \"tests\": \"pm.test(\\\"Status code is 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\",\n        \"currentHelper\": \"bearerAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"bearer\\\",\\\"token\\\":\\\"TEST\\\"}\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"The API's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [\n            {\n                \"key\": \"Accept\",\n                \"value\": \"application/vnd.example.v1+json\",\n                \"description\": null,\n                \"type\": \"text\",\n                \"enabled\": true\n            }\n        ],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [\n            \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\"\n        ],\n        \"createdAt\": \"2022-10-05T13:09:24.000Z\",\n        \"updatedAt\": \"2023-09-13T14:04:37.000Z\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": [\n            {\n                \"owner\": \"12345678\",\n                \"lastUpdatedBy\": \"12345678\",\n                \"lastRevision\": 32545561807,\n                \"request\": \"fb620884-9745-4244-b875-6c33a8acc771\",\n                \"id\": \"ee4ab273-1f36-f8de-adfc-02ad1cd126dc\",\n                \"name\": \"Successful Response\",\n                \"status\": null,\n                \"responseCode\": {\n                    \"code\": 200,\n                    \"name\": \"OK\"\n                },\n                \"time\": null,\n                \"headers\": [\n                    {\n                        \"key\": \"date\",\n                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                    },\n                    {\n                        \"key\": \"content-type\",\n                        \"value\": \"application/json; charset=utf-8\"\n                    },\n                    {\n                        \"key\": \"content-length\",\n                        \"value\": \"468\"\n                    },\n                    {\n                        \"key\": \"etag\",\n                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                    },\n                    {\n                        \"key\": \"set-cookie\",\n                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                    }\n                ],\n                \"cookies\": null,\n                \"mime\": null,\n                \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                \"language\": \"json\",\n                \"rawDataType\": null,\n                \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n                \"createdAt\": \"2023-09-12T18:34:27.000Z\",\n                \"updatedAt\": \"2023-09-13T14:04:37.000Z\"\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Response with ids Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?ids=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													],
													"query": [
														{
															"key": "ids",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"folder\": \"65a99e60-8e0a-4b6e-b79c-7d8264cc5caa\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"responses_order\": [\n            \"773e5707-4a56-45de-b31d-c68a6f74d1c6\",\n            \"3ce18318-9d74-4805-956e-7fda0b830bea\"\n        ]\n    }\n}"
										},
										{
											"name": "Response with uid Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958?uid=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													],
													"query": [
														{
															"key": "uid",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32206434799,\n        \"folder\": null,\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"id\": \"12345678-c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example GET Request\",\n        \"dataMode\": null,\n        \"data\": null,\n        \"auth\": null,\n        \"events\": null,\n        \"rawModeData\": null,\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example GET request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"GET\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/get\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": {\n            \"disableBodyPruning\": true\n        },\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-08-22T12:52:01.000Z\",\n        \"updatedAt\": \"2023-08-22T12:52:11.000Z\"\n    }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976978"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "262"
												},
												{
													"key": "RateLimit-Reset",
													"value": "3"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "262"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=6291beb729799ff7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=3a17bde7c1ab287c"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"49d-PaaOpgnq6QlpwY1iuH0MiQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "98"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "241"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Create a request",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{requestName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"requests"
											],
											"query": [
												{
													"key": "folder",
													"value": "<string>",
													"description": "The folder ID in which to create the request.\n\nBy default, the system will create the request at the collection level.",
													"disabled": true
												}
											]
										},
										"description": "Creates a request in a collection. For a complete list of properties, refer to the **Request** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a request with a blank name."
									},
									"response": [
										{
											"name": "GET Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:43:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976990"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987421"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "260"
												},
												{
													"key": "RateLimit-Reset",
													"value": "1"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "260"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=2f9f2f3a2c905423"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d8ae748e9cf71c7"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"3a7-z+hWMiyS26oLfi34cwirGw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "491"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "74"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"GET\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"name\": \"Example GET Request\",\n        \"description\": \"This is an example GET request.\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:33:17.912Z\",\n        \"updatedAt\": \"2023-09-07T13:33:17.912Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456338071\n}"
										},
										{
											"name": "POST Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example POST Request\",\n    \"url\": \"https://postman-echo.com/post\",\n    \"method\": \"POST\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"22\"\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"POST\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            },\n            {\n                \"key\": \"content-length\",\n                \"value\": \"22\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/post\",\n        \"name\": \"Example POST Request\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:35:33.691Z\",\n        \"updatedAt\": \"2023-09-07T13:35:33.691Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456382272\n}"
										},
										{
											"name": "Request in a Folder",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests?folder=4249383d-2af6-4ac6-9a2b-0930e8f639e3",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													],
													"query": [
														{
															"key": "folder",
															"value": "4249383d-2af6-4ac6-9a2b-0930e8f639e3"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:43:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976990"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987421"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "260"
												},
												{
													"key": "RateLimit-Reset",
													"value": "1"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "260"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=2f9f2f3a2c905423"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d8ae748e9cf71c7"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"3a7-z+hWMiyS26oLfi34cwirGw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "491"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "74"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"folder\": \"4249383d-2af6-4ac6-9a2b-0930e8f639e3\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"GET\",\n        \"queryParams\": [\n            {\n                \"value\": \"{{id}}\",\n                \"key\": \"id\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": false\n            }\n        ],\n        \"description\": \"This is an example GET request.\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"name\": \"Example\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"responses_order\": [],\n        \"id\": \"389f1640-7996-b519-4747-9f3c6a350a19\",\n        \"owner\": \"20891195\",\n        \"lastUpdatedBy\": \"20891195\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-13T18:03:16.957Z\",\n        \"updatedAt\": \"2023-09-13T18:03:16.957Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32549528635\n}"
										},
										{
											"name": "Request with Auth",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET Request\",\n    \"description\": \"This is an example GET request.\",\n    \"url\": \"https://postman-echo.com/get?param=value\",\n    \"method\": \"GET\",\n    \"auth\": {\n        \"type\": \"apikey\",\n        \"apikey\": [\n            {\n                \"key\": \"value\",\n                \"value\": \"XXX\",\n                \"type\": \"string\"\n            },\n            {\n                \"key\": \"key\",\n                \"value\": \"api-key\",\n                \"type\": \"string\"\n            }\n        ]\n    },\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"queryParams\": [\n        {\n            \"key\": \"id\",\n            \"value\": \"{{id}}\",\n            \"equals\": true,\n            \"description\": \"Optional. The user's ID.\",\n            \"enabled\": true\n        }\n    ],\n    \"currentHelper\": \"apikeyAuth\",\n    \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n    \"dataMode\": \"raw\",\n    \"rawModeData\": null,\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:43:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976990"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987421"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "260"
												},
												{
													"key": "RateLimit-Reset",
													"value": "1"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "260"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=2f9f2f3a2c905423"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d8ae748e9cf71c7"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"3a7-z+hWMiyS26oLfi34cwirGw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "491"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "74"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"folder\": \"4ec7de35-cc87-4e2f-ab01-6fd351371ad3\",\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"api-key\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"currentHelper\": \"apikeyAuth\",\n        \"helperAttributes\": \"{\\\"id\\\":\\\"apikey\\\",\\\"key\\\":\\\"api-key\\\",\\\"value\\\":\\\"XXX\\\"}\",\n        \"description\": \"This is an example GET request.\",\n        \"url\": \"https://postman-echo.com/get?param=value\",\n        \"dataMode\": \"raw\",\n        \"name\": \"Example GET Request\",\n        \"method\": \"GET\",\n        \"headers\": \"[object Object],[object Object],[object Object],[object Object]\",\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"queryParams\": [\n            {\n                \"key\": \"id\",\n                \"value\": \"{{id}}\",\n                \"equals\": true,\n                \"description\": \"Optional. The user's ID.\",\n                \"enabled\": true\n            }\n        ],\n        \"headerData\": [],\n        \"createdAt\": \"2022-10-07T13:57:54.145Z\",\n        \"updatedAt\": \"2022-10-07T13:57:54.145Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 27134451973\n}"
										},
										{
											"name": "Request with Tests",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example POST Request\",\n    \"url\": \"https://postman-echo.com/post\",\n    \"method\": \"POST\",\n    \"headers\": [\n        {\n            \"key\": \"Host\",\n            \"value\": \"postman-echo.com\"\n        },\n        {\n            \"key\": \"user-agent\",\n            \"value\": \"curl/7.88.1\"\n        },\n        {\n            \"key\": \"accept\",\n            \"value\": \"*/*\"\n        },\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"22\"\n        }\n    ],\n    \"events\": [\n        {\n            \"listen\": \"test\",\n            \"script\": {\n                \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                \"exec\": [\n                    \"pm.test(\\\"Status code is 200\\\", function () {\",\n                    \"    pm.response.to.have.status(200);\",\n                    \"});\"\n                ],\n                \"type\": \"text/javascript\"\n            }\n        },\n        {\n            \"listen\": \"prerequest\",\n            \"script\": {\n                \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                \"exec\": [\n                    \"\"\n                ],\n                \"type\": \"text/javascript\"\n            }\n        }\n    ],\n    \"dataMode\": \"raw\",\n    \"rawModeData\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"import\"\n    },\n    \"data\": {\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"method\": \"POST\",\n        \"headers\": [\n            {\n                \"key\": \"Host\",\n                \"value\": \"postman-echo.com\"\n            },\n            {\n                \"key\": \"user-agent\",\n                \"value\": \"curl/7.88.1\"\n            },\n            {\n                \"key\": \"accept\",\n                \"value\": \"*/*\"\n            },\n            {\n                \"key\": \"content-type\",\n                \"value\": \"application/json\"\n            },\n            {\n                \"key\": \"content-length\",\n                \"value\": \"22\"\n            }\n        ],\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"a8608e1a-ce4b-4129-8c89-930d26ae0f6a\",\n                    \"exec\": [\n                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                        \"    pm.response.to.have.status(200);\",\n                        \"});\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            },\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"5b4bb273-5878-4bd7-a296-94a256783a66\",\n                    \"exec\": [\n                        \"\"\n                    ],\n                    \"type\": \"text/javascript\"\n                }\n            }\n        ],\n        \"dataMode\": \"raw\",\n        \"url\": \"https://postman-echo.com/post\",\n        \"name\": \"Example POST Request\",\n        \"owner\": \"12345678\",\n        \"folder\": null,\n        \"responses_order\": [],\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"headerData\": [],\n        \"createdAt\": \"2023-09-07T13:35:33.691Z\",\n        \"updatedAt\": \"2023-09-07T13:35:33.691Z\",\n        \"rawModeData\": null,\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        },\n        \"responses\": []\n    },\n    \"revision\": 32456382272\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Request\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:46:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "195"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987206"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976979"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "277"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "277"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "26"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=71e7fa2e10227b07"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=34b5233bc33613bc"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c3-tPgeE37fnuvSHpIsHTCerA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "25"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "52"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This request already exists in the database.\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test Request\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests"
													],
													"query": [
														{
															"key": "folder",
															"value": "65a99e60-8e0a-4b6e-b79c-7d8264cc5caa",
															"description": "(Optional) The folder ID in which to create the request.\n\nIf you do not provide this query parameter, the request is created at the collection level.",
															"disabled": true
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:46:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "195"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987206"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976979"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "277"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "277"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "26"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=71e7fa2e10227b07"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=34b5233bc33613bc"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c3-tPgeE37fnuvSHpIsHTCerA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "25"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "52"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Update a request",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{requestName}}\",\n    \"method\": \"{{requestMethod}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/requests/{{requestId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"requests",
												"{{requestId}}"
											]
										},
										"description": "Updates a request in a collection. For a complete list of properties, refer to the **Request** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\n**Note:**\n\n- You must pass a collection ID (`12ece9e1-2abf-4edc-8e34-de66e74114d2`), not a collection UID (`12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2`), in this endpoint.\n    \n- This endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource.\n    \n- This endpoint does not support changing the folder of a request."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"auth\": \"noauth\",\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 32368133476,\n    \"folder\": null,\n    \"collection\": \"c05fb60e-bb28-4e7b-9cf7-55ada6ab320c\",\n    \"name\": \"Example POST Request\",\n    \"dataMode\": \"raw\",\n    \"data\": null,\n    \"events\": null,\n    \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"descriptionFormat\": null,\n    \"description\": \"This is an example POST request.\",\n    \"variables\": null,\n    \"headers\": null,\n    \"method\": \"POST\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/post\",\n    \"preRequestScript\": null,\n    \"tests\": null,\n    \"queryParams\": [],\n    \"headerData\": [],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": null,\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"createdAt\": \"2023-09-01T07:59:25.000Z\",\n    \"updatedAt\": \"2023-09-01T09:29:54.000Z\",\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:49:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987006"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976977"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "264"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "264"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "6"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a47a9a1bb5b56694"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=a2219fc46d3890f9"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "506"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "270"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"raw\",\n        \"data\": null,\n        \"auth\": \"noauth\",\n        \"events\": null,\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": null,\n        \"method\": \"POST\",\n        \"pathVariables\": null,\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": null,\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2023-09-01T07:59:25.000Z\",\n        \"updatedAt\": \"2023-09-08T12:30:29.000Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32473087936,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 32473098909\n}"
										},
										{
											"name": "Update to Inherit Parent Auth",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"auth\": null,\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"folder\": null,\n    \"collection\": \"c05fb60e-bb28-4e7b-9cf7-55ada6ab320c\",\n    \"name\": \"Example POST Request\",\n    \"dataMode\": \"raw\",\n    \"data\": [\n        {\n            \"enabled\": true,\n            \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n            \"type\": \"text\",\n            \"key\": \"id\"\n        },\n        {\n            \"enabled\": true,\n            \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"type\": \"text\",\n            \"key\": \"collection\"\n        }\n    ],\n    \"events\": [\n        {\n            \"listen\": \"test\",\n            \"script\": {\n                \"type\": \"text/javascript\",\n                \"exec\": [\n                    \"var data = JSON.parse(responseBody);\"\n                ]\n            }\n        }\n    ],\n    \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n    \"descriptionFormat\": null,\n    \"description\": \"This is an example POST request.\",\n    \"variables\": null,\n    \"headers\": null,\n    \"method\": \"POST\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/post\",\n    \"preRequestScript\": null,\n    \"tests\": \"var data = JSON.parse(responseBody);\",\n    \"queryParams\": [],\n    \"headerData\": [],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": null,\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"dataOptions\": {\n        \"raw\": {\n            \"language\": \"json\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:49:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987006"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976977"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "264"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "264"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "6"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a47a9a1bb5b56694"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=a2219fc46d3890f9"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "506"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "270"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": null,\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 24994954828\n}"
										},
										{
											"name": "Disable Query Params",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 33437203713,\n    \"folder\": null,\n    \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"id\": \"42d13443-2f50-47f0-b417-03081a97bf45\",\n    \"name\": \"GET Request with headers and query params\",\n    \"dataMode\": null,\n    \"data\": null,\n    \"auth\": null,\n    \"events\": null,\n    \"rawModeData\": null,\n    \"descriptionFormat\": null,\n    \"description\": null,\n    \"variables\": null,\n    \"headers\": \"// x-api-key: apikey\",\n    \"method\": \"GET\",\n    \"pathVariables\": null,\n    \"url\": \"https://postman-echo.com/get?param1=value1\",\n    \"preRequestScript\": null,\n    \"tests\": null,\n    \"currentHelper\": null,\n    \"helperAttributes\": null,\n    \"queryParams\": [\n        {\n            \"key\": \"param1\",\n            \"value\": \"value1\",\n            \"description\": null,\n            \"enabled\": true\n        },\n        {\n            \"key\": \"param2\",\n            \"value\": \"value2\",\n            \"description\": null,\n            \"enabled\": false\n        }\n    ],\n    \"headerData\": [\n        {\n            \"key\": \"x-api-key\",\n            \"value\": \"apikey\",\n            \"type\": \"text\",\n            \"description\": null,\n            \"enabled\": false\n        }\n    ],\n    \"pathVariableData\": [],\n    \"protocolProfileBehavior\": {\n        \"disableBodyPruning\": true\n    },\n    \"dataDisabled\": false,\n    \"responses_order\": [],\n    \"createdAt\": \"2023-10-27T08:48:42.000Z\",\n    \"updatedAt\": \"2023-11-02T11:05:19.000Z\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:49:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "987006"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976977"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "264"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "264"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "6"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a47a9a1bb5b56694"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=a2219fc46d3890f9"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"491-XtGj0sHQvh+IkXX8TPY1pQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "506"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "270"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example POST Request\",\n        \"dataMode\": \"params\",\n        \"data\": [\n            {\n                \"enabled\": true,\n                \"value\": \"3f14c9c7-e71c-4094-b90e-ac9edb232c2e\",\n                \"type\": \"text\",\n                \"key\": \"id\"\n            },\n            {\n                \"enabled\": true,\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"text\",\n                \"key\": \"collection\"\n            }\n        ],\n        \"auth\": null,\n        \"events\": [\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"var data = JSON.parse(responseBody);\"\n                    ]\n                }\n            }\n        ],\n        \"rawModeData\": \"{\\n    \\\"field\\\": \\\"Value\\\"\\n}\",\n        \"descriptionFormat\": null,\n        \"description\": \"This is an example POST request.\",\n        \"variables\": null,\n        \"headers\": \"\",\n        \"method\": \"POST\",\n        \"pathVariables\": {},\n        \"url\": \"https://postman-echo.com/post\",\n        \"preRequestScript\": null,\n        \"tests\": \"var data = JSON.parse(responseBody);\",\n        \"currentHelper\": null,\n        \"helperAttributes\": null,\n        \"queryParams\": [],\n        \"headerData\": [],\n        \"pathVariableData\": [],\n        \"protocolProfileBehavior\": null,\n        \"dataDisabled\": false,\n        \"responses_order\": [],\n        \"createdAt\": \"2022-08-29T16:49:19.964Z\",\n        \"updatedAt\": \"2022-08-29T16:49:19.964Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 24994863800,\n        \"folder\": null,\n        \"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"dataOptions\": {\n            \"raw\": {\n                \"language\": \"json\"\n            }\n        }\n    },\n    \"revision\": 24994954828\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:56:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976969"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986616"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "283"
												},
												{
													"key": "RateLimit-Reset",
													"value": "36"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "283"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=02d2c4cbfb3f6b5b"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=e1ec7d69b21e4573"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "40"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "192"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Change Parent Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:56:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976969"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986616"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "283"
												},
												{
													"key": "RateLimit-Reset",
													"value": "36"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "283"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=02d2c4cbfb3f6b5b"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=e1ec7d69b21e4573"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "40"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "192"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            },\n            \"request\": {\n                \"model\": \"collection\",\n                \"model_id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET request\",\n    \"method\": \"GET\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:56:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976969"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986616"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "283"
												},
												{
													"key": "RateLimit-Reset",
													"value": "36"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "283"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=02d2c4cbfb3f6b5b"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=e1ec7d69b21e4573"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cb-KyQ1Nr6GgxL5vlCC6jP1CQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "40"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "192"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Delete a request",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.postman.v2+json",
												"description": "You must include this header to use this endpoint."
											}
										],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/requests/{{requestId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"requests",
												"{{requestId}}"
											]
										},
										"description": "Deletes a request in a collection."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:58:20 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986501"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976968"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "288"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "288"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=c653b0b730dc49bb"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=cbb5f6c312d65df9"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"ad-xWWbyY7KdeE29OchZs8nbA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "644"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "165"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"request\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24995158577\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:58:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976967"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986479"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "19"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=bef26b296c7c8c89"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=c90a250793c31a3d"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cb-zT1pQTNtRYuFcuAb63UipA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "23"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "95"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the request you are looking for\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/e12d2aa6-85c8-4e6c-aad0-1adcfe05c958",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"requests",
														"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 13:58:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976967"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "986479"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "19"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=bef26b296c7c8c89"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=c90a250793c31a3d"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cb-zT1pQTNtRYuFcuAb63UipA\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "23"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "95"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"request\",\n            \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								}
							],
							"description": "These endpoint enable you to manage collection requests."
						},
						{
							"name": "Responses",
							"item": [
								{
									"name": "Comments",
									"item": [
										{
											"name": "Get a response's comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/responses/{{responseUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"responses",
														"{{responseUid}}",
														"comments"
													]
												},
												"description": "Gets all comments left by users in a response."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Create a response comment",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"threadId\": {{threadId}},\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/responses/{{responseUid}}/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"responses",
														"{{responseUid}}",
														"comments"
													]
												},
												"description": "Creates a comment on a response. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Reply to Comment Thread",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Update a response's comment",
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/responses/{{responseUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"responses",
														"{{responseUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Updates a comment on a response. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
												},
												{
													"name": "Tag User in Comment",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										},
										{
											"name": "Delete a response's comment",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/collections/{{collectionUid}}/responses/{{responseUid}}/comments/{{commentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"collections",
														"{{collectionUid}}",
														"responses",
														"{{responseUid}}",
														"comments",
														"{{commentId}}"
													]
												},
												"description": "Deletes a comment from a response. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
											},
											"response": [
												{
													"name": "Comment Deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": null,
													"header": null,
													"cookie": [],
													"body": null
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"link\":   \"https://api.postman.com/problems/unauthorized\",\n    \"title\":  \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/vnd.api.v10+json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07/comments/46814",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"collections",
																"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
																"responses",
																"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07",
																"comments",
																"46814"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
												}
											]
										}
									],
									"description": "These endpoints enable you to manage comments on a response. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
								},
								{
									"name": "Get a response",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/responses/{{responseId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"responses",
												"{{responseId}}"
											],
											"query": [
												{
													"key": "ids",
													"value": "<boolean>",
													"description": "If true, returns only the response properties that contain ID values.",
													"disabled": true
												},
												{
													"key": "uid",
													"value": "<boolean>",
													"description": "If true, returns all IDs in UID format (`userId`-`id`).",
													"disabled": true
												},
												{
													"key": "populate",
													"value": "<boolean>",
													"description": "If true, returns all of a response's contents.",
													"disabled": true
												}
											]
										},
										"description": "Gets information about a response in a collection."
									},
									"response": [
										{
											"name": "GET Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"http://api.getpostman.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"
										},
										{
											"name": "POST Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32366010334,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Example POST response\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 200,\n            \"name\": \"OK\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Date\",\n                \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\"\n            },\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json; charset=utf-8\"\n            },\n            {\n                \"key\": \"Content-Length\",\n                \"value\": \"607\"\n            },\n            {\n                \"key\": \"Connection\",\n                \"value\": \"keep-alive\"\n            },\n            {\n                \"key\": \"ETag\",\n                \"value\": \"W/\\\"25f-fXeI1ntSNPOD7sOol6cMrRL0DYk\\\"\"\n            },\n            {\n                \"key\": \"set-cookie\",\n                \"value\": \"sails.sid=s%3A4o6OiKlJvAK5dTEKRnH-ZMOU7jHTwNB-.owD6JTABpH6H6rH8gY09Z7ATvkr2elxL4iGyWnJkBPg; Path=/; HttpOnly\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"123\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-71bdd0e4-2ad8-45ab-be3c-3dde999711a6\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-09-12T15:21:55.000Z\",\n        \"updatedAt\": \"2023-09-12T18:27:57.000Z\"\n    }\n}"
										},
										{
											"name": "Response with populate Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?populate=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													],
													"query": [
														{
															"key": "populate",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"
										},
										{
											"name": "Response with ids Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?ids=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													],
													"query": [
														{
															"key": "ids",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\"\n    }\n}"
										},
										{
											"name": "Response with uid Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07?uid=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													],
													"query": [
														{
															"key": "uid",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"populate\": false,\n        \"changeset\": false,\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32528384460,\n        \"request\": \"12345678-c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"id\": \"12345678-cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"name\": \"Not Found\",\n        \"status\": null,\n        \"responseCode\": {\n            \"code\": 404,\n            \"name\": \"Not Found\"\n        },\n        \"time\": null,\n        \"headers\": [\n            {\n                \"key\": \"Content-Type\",\n                \"name\": \"Content-Type\",\n                \"value\": \"application/json\",\n                \"description\": \"\",\n                \"type\": \"text\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[{\\\"key\\\":\\\"Accept\\\",\\\"value\\\":\\\"application/vnd.example.v1+json\\\",\\\"description\\\":\\\"\\\",\\\"type\\\":\\\"text\\\",\\\"enabled\\\":true}],\\\"method\\\":\\\"GET\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"id\\\",\\\"value\\\":\\\"test-api\\\",\\\"equals\\\":true,\\\"description\\\":null,\\\"enabled\\\":true}],\\\"url\\\":\\\"https://postman-echo.com/v1/request?id=test-api\\\",\\\"headers\\\":\\\"Accept: application/vnd.example.v1+json\\\\n\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-08-22T12:53:12.000Z\",\n        \"updatedAt\": \"2023-09-12T18:23:42.000Z\"\n    }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/vnd.postman.v2+json",
														"description": "You must include this header to use this endpoint."
													}
												],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:09:03 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "982258"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976881"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "298"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "298"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "58"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=d30dd747422681a7"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=5d9a59c2e5981f78"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"51e-9ZUc/fkmzrO5kT9Jc4y9eg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "151"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "228"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Create a response",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{responseName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/responses?request=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"responses"
											],
											"query": [
												{
													"key": "request",
													"value": "<string>",
													"description": "(Required) The parent request's ID."
												}
											]
										},
										"description": "Creates a request response in a collection. For a complete list of properties, refer to the **Response** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\n**Note:**\n\nIt is recommended that you pass the `name` property in the request body. If you do not, the system uses a null value. As a result, this creates a response with a blank name."
									},
									"response": [
										{
											"name": "GET Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Example GET Response\",\n    \"responseCode\": {\n        \"code\": 200,\n        \"name\": \"OK\"\n    },\n    \"headers\": [\n        {\n            \"key\": \"content-type\",\n            \"value\": \"application/json; charset=utf-8\"\n        },\n        {\n            \"key\": \"content-length\",\n            \"value\": \"370\"\n        },\n        {\n            \"key\": \"etag\",\n            \"value\": \"W/\\\"172-GDbDAS2r5X4Ypw2ia9AUhtyIyhk\\\"\"\n        },\n        {\n            \"key\": \"set-cookie\",\n            \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n        }\n    ],\n    \"text\": \"{\\n  \\\"args\\\": {\\n    \\\"param\\\": \\\"value\\\"\\n  },\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\"\\n}\\n\",\n    \"language\": \"json\",\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\",\\n  \\\"method\\\": \\\"GET\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses"
													],
													"query": [
														{
															"key": "request",
															"value": "c82dd02c-4870-4907-8fcb-593a876cf05b"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 16:14:11 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "978349"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976805"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "295"
												},
												{
													"key": "RateLimit-Reset",
													"value": "49"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "295"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=0079b2481a90fae6"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=d62d7d42e01140cf"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"4f9-FyInoRb9cSWCJf4DYXd5TQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "420"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "56"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n  \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n  \"meta\": {\n    \"model\": \"response\",\n    \"action\": \"create\"\n  },\n  \"data\": {\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"headers\": [\n      {\n        \"key\": \"content-type\",\n        \"value\": \"application/json; charset=utf-8\"\n      },\n      {\n        \"key\": \"content-length\",\n        \"value\": \"370\"\n      },\n      {\n        \"key\": \"etag\",\n        \"value\": \"W/\\\"172-GDbDAS2r5X4Ypw2ia9AUhtyIyhk\\\"\"\n      },\n      {\n        \"key\": \"set-cookie\",\n        \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n      }\n    ],\n    \"name\": \"Example GET Response\",\n    \"text\": \"{\\n  \\\"args\\\": {\\n    \\\"param\\\": \\\"value\\\"\\n  },\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\"\\n}\\n\",\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/get?param=value\\\",\\n  \\\"method\\\": \\\"GET\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n    \"responseCode\": {\n      \"code\": 200,\n      \"name\": \"OK\"\n    },\n    \"language\": \"json\",\n    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"createdAt\": \"2023-09-07T13:33:18.700Z\",\n    \"updatedAt\": \"2023-09-07T13:33:18.700Z\"\n  },\n  \"revision\": 32456338262\n}"
										},
										{
											"name": "POST Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"POST response\",\n  \"responseCode\": {\n    \"code\": 200,\n    \"name\": \"OK\"\n  },\n  \"headers\": [\n    {\n      \"key\": \"date\",\n      \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n    },\n    {\n      \"key\": \"content-type\",\n      \"value\": \"application/json; charset=utf-8\"\n    },\n    {\n      \"key\": \"content-length\",\n      \"value\": \"468\"\n    },\n    {\n      \"key\": \"etag\",\n      \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n    },\n    {\n      \"key\": \"set-cookie\",\n      \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/; HttpOnly\"\n    }\n  ],\n  \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n  \"language\": \"json\",\n  \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": \\\"{\\\\n  \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses"
													],
													"query": [
														{
															"key": "request",
															"value": "c82dd02c-4870-4907-8fcb-593a876cf05b"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\n  \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n  \"meta\": {\n    \"model\": \"response\",\n    \"action\": \"create\"\n  },\n  \"data\": {\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"responseCode\": {\n      \"code\": 200,\n      \"name\": \"OK\"\n    },\n    \"requestObject\": \"{\\n  \\\"name\\\": \\\"Request\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n  \\\"method\\\": \\\"POST\\\",\\n  \\\"headers\\\": [\\n    {\\n      \\\"key\\\": \\\"Host\\\",\\n      \\\"value\\\": \\\"postman-echo.com\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"user-agent\\\",\\n      \\\"value\\\": \\\"curl/7.88.1\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"accept\\\",\\n      \\\"value\\\": \\\"*/*\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-type\\\",\\n      \\\"value\\\": \\\"application/json\\\"\\n    },\\n    {\\n      \\\"key\\\": \\\"content-length\\\",\\n      \\\"value\\\": \\\"22\\\"\\n    }\\n  ],\\n  \\\"dataMode\\\": \\\"raw\\\",\\n  \\\"rawModeData\\\": null,\\n  \\\"dataOptions\\\": {\\n    \\\"raw\\\": {\\n      \\\"language\\\": \\\"json\\\"\\n    }\\n  }\\n}\",\n    \"text\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-71bdd0e4-2ad8-45ab-be3c-3dde999711a6\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n    \"name\": \"POST response\",\n    \"language\": \"json\",\n    \"headers\": [\n      {\n        \"key\": \"date\",\n        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n      },\n      {\n        \"key\": \"content-type\",\n        \"value\": \"application/json; charset=utf-8\"\n      },\n      {\n        \"key\": \"content-length\",\n        \"value\": \"468\"\n      },\n      {\n        \"key\": \"etag\",\n        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n      },\n      {\n        \"key\": \"set-cookie\",\n        \"value\": \"sails.sid=s%3A23szD8Az12345Vs7dMzU4hjUHqqA1LeX.x8Jbnx4BEVHgzajknZdH%2BqxW7Pctx47m%2FlduU5Q4TAI; Path=/ HttpOnly\"\n      }\n    ],\n    \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"createdAt\": \"2023-09-07T13:35:34.817Z\",\n    \"updatedAt\": \"2023-09-07T13:35:34.817Z\"\n  },\n  \"revision\": 32456382761\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Success\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses"
													],
													"query": [
														{
															"key": "request",
															"value": "c82dd02c-4870-4907-8fcb-593a876cf05b"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 16:17:13 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "197"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "978167"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976802"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "293"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "293"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "47"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a4118ddf178e3760"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=27a05a55afc724e0"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c5-K6PT1lt3OW6VV1lwhWQjPw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "28"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "141"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"This response already exists in the database.\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Success\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses?request=c82dd02c-4870-4907-8fcb-593a876cf05b",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses"
													],
													"query": [
														{
															"key": "request",
															"value": "c82dd02c-4870-4907-8fcb-593a876cf05b"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 16:17:13 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "197"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "978167"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976802"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "293"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "293"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "47"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a4118ddf178e3760"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=27a05a55afc724e0"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"c5-K6PT1lt3OW6VV1lwhWQjPw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "28"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "141"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Update a response",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{responseName}}\",\n    \"responseCode\": {\n        \"code\": {{responseHTTPcode}},\n        \"name\": \"{{responseCodeName}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/responses/{{responseId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"responses",
												"{{responseId}}"
											]
										},
										"description": "Updates a response in a collection. For a complete list of properties, refer to the **Response** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n\n**Note:**\n\n- You must pass a collection ID (`12ece9e1-2abf-4edc-8e34-de66e74114d2`), not a collection UID (`12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2`), in this endpoint.\n    \n- This endpoint acts like a PATCH method. It only updates the values that you pass in the request body (for example, the `name` property). The endpoint does **not** update the entire resource."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"owner\": \"12345678\",\n    \"lastUpdatedBy\": \"12345678\",\n    \"lastRevision\": 32368133468,\n    \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"name\": \"Example Response\",\n    \"status\": null,\n    \"responseCode\": {\n        \"code\": 200,\n        \"name\": \"OK\"\n    },\n    \"time\": \"50\",\n    \"headers\": [\n        {\n            \"key\": \"Date\",\n            \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\"\n        },\n        {\n            \"key\": \"Content-Type\",\n            \"value\": \"application/json; charset=utf-8\"\n        },\n        {\n            \"key\": \"Content-Length\",\n            \"value\": \"607\"\n        },\n        {\n            \"key\": \"Connection\",\n            \"value\": \"keep-alive\"\n        }\n    ],\n    \"cookies\": null,\n    \"mime\": null,\n    \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"443\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n    \"language\": \"json\",\n    \"rawDataType\": null,\n    \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n    \"createdAt\": \"2023-09-01T09:29:54.000Z\",\n    \"updatedAt\": \"2023-09-01T09:29:54.000Z\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/16473433-f4a74a54-c003-c27a-8d79-e91c6ea2c5d1",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"16473433-f4a74a54-c003-c27a-8d79-e91c6ea2c5d1"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:39:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980405"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976849"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "263"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "263"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "5"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=1a6ee5c445053bc8"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=ee1c09c86c857fe9"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"521-7ksIO/VcXSMHSBAAvun4MQ\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "427"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "43"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n        \"name\": \"Example Response\",\n        \"status\": null,\n        \"responseCode\": {\n            \"name\": \"OK\",\n            \"code\": 200\n        },\n        \"time\": \"50\",\n        \"headers\": [\n            {\n                \"value\": \"Fri, 01 Sep 2023 07:36:18 GMT\",\n                \"key\": \"Date\"\n            },\n            {\n                \"value\": \"application/json; charset=utf-8\",\n                \"key\": \"Content-Type\"\n            },\n            {\n                \"value\": \"607\",\n                \"key\": \"Content-Length\"\n            },\n            {\n                \"value\": \"keep-alive\",\n                \"key\": \"Connection\"\n            }\n        ],\n        \"cookies\": null,\n        \"mime\": null,\n        \"text\": \"{\\n    \\\"args\\\": {},\\n    \\\"data\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"files\\\": {},\\n    \\\"form\\\": {},\\n    \\\"headers\\\": {\\n        \\\"x-forwarded-proto\\\": \\\"https\\\",\\n        \\\"x-forwarded-port\\\": \\\"443\\\",\\n        \\\"host\\\": \\\"postman-echo.com\\\",\\n        \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9cd12-62f18f3a048796d345508073\\\",\\n        \\\"content-length\\\": \\\"24\\\",\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        \\\"x-api-key\\\": \\\"xxx\\\",\\n        \\\"user-agent\\\": \\\"PostmanRuntime/7.32.3\\\",\\n        \\\"accept\\\": \\\"*/*\\\",\\n        \\\"postman-token\\\": \\\"XXX\\\",\\n        \\\"accept-encoding\\\": \\\"gzip, deflate, br\\\"\\n    },\\n    \\\"json\\\": {\\n        \\\"field\\\": \\\"Value\\\"\\n    },\\n    \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\",\n        \"language\": \"json\",\n        \"rawDataType\": null,\n        \"requestObject\": \"{\\\"data\\\":null,\\\"dataMode\\\":\\\"raw\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"headerData\\\":[],\\\"method\\\":\\\"POST\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"url\\\":\\\"https://postman-echo.com/post\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true},\\\"rawModeData\\\":\\\"{\\\\n    \\\\\\\"field\\\\\\\": \\\\\\\"Value\\\\\\\"\\\\n}\\\",\\\"graphqlModeData\\\":{}}\",\n        \"createdAt\": \"2023-09-01T09:29:54.000Z\",\n        \"updatedAt\": \"2023-09-08T12:37:33.000Z\",\n        \"owner\": \"12345678\",\n        \"lastUpdatedBy\": \"12345678\",\n        \"lastRevision\": 32368133468,\n        \"request\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\"\n    },\n    \"revision\": 32473225008\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:42:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976843"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980279"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "299"
												},
												{
													"key": "RateLimit-Reset",
													"value": "59"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "299"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=5ab26e396e3f5bfd"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=95c64cb513218e5d"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cd-P7fWXMAWALamLqekklo95w\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "42"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "150"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Change Parent Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:42:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976843"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980279"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "299"
												},
												{
													"key": "RateLimit-Reset",
													"value": "59"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "299"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=5ab26e396e3f5bfd"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=95c64cb513218e5d"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cd-P7fWXMAWALamLqekklo95w\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "42"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "150"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"changeParentError\",\n        \"message\": \"You can't update the parent. Use transfer instead.\",\n        \"details\": {\n            \"server\": {\n                \"model\": \"request\",\n                \"model_id\": \"d35874f0-f7b3-4625-9096-2b2415444185\"\n            },\n            \"request\": {\n                \"model\": \"request\",\n                \"model_id\": \"e12d2aa6-85c8-4e6c-aad0-1adcfe05c958\"\n            }\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Bad Request\",\n    \"responseCode\": {\n        \"code\": 400,\n        \"name\": \"Bad Request\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:42:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976843"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980279"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "299"
												},
												{
													"key": "RateLimit-Reset",
													"value": "59"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "299"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=5ab26e396e3f5bfd"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=95c64cb513218e5d"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cd-P7fWXMAWALamLqekklo95w\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "42"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "150"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Delete a response",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/{{collectionId}}/responses/{{responseId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												"{{collectionId}}",
												"responses",
												"{{responseId}}"
											]
										},
										"description": "Deletes a response in a collection. On success, this returns an HTTP `204 No Content` response."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/cc364734-7dfd-4bfc-897d-be763dcdbb07",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"cc364734-7dfd-4bfc-897d-be763dcdbb07"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:44:20 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980141"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976841"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "288"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "288"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "RateLimit-Reset",
													"value": "40"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=a8179e54aceb4922"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=1e35b13e7b46ed98"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"ae-2liQ3ikb/GKgF10hjr94rw\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "454"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "213"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n    \"meta\": {\n        \"model\": \"response\",\n        \"action\": \"destroy\"\n    },\n    \"data\": {\n        \"id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n        \"owner\": \"12345678\"\n    },\n    \"revision\": 24997417224\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/7978bfb8-fb89-42ac-8d48-cd547d96463e",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"7978bfb8-fb89-42ac-8d48-cd547d96463e"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:44:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976840"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "22"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=5369a63e0142d7e9"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=554261b4a0cced1a"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cd-UMzzMYmXFWE4HC1k+Qxqbg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "25"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "58"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the response you are looking for\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/responses/7978bfb8-fb89-42ac-8d48-cd547d96463e",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"collections",
														"12ece9e1-2abf-4edc-8e34-de66e74114d2",
														"responses",
														"7978bfb8-fb89-42ac-8d48-cd547d96463e"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Thu, 19 May 2022 15:44:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "X-RateLimit-Remaining-Month",
													"value": "976840"
												},
												{
													"key": "X-RateLimit-Limit-Month",
													"value": "1000000"
												},
												{
													"key": "X-RateLimit-Reset-Month",
													"value": "980123"
												},
												{
													"key": "RateLimit-Remaining",
													"value": "275"
												},
												{
													"key": "RateLimit-Reset",
													"value": "22"
												},
												{
													"key": "X-RateLimit-Limit-Minute",
													"value": "300"
												},
												{
													"key": "X-RateLimit-Remaining-Minute",
													"value": "275"
												},
												{
													"key": "RateLimit-Limit",
													"value": "300"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=63072000; includeSubDomains"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=5369a63e0142d7e9"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=554261b4a0cced1a"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"key": "ETag",
													"value": "W/\"cd-UMzzMYmXFWE4HC1k+Qxqbg\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "25"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "58"
												},
												{
													"key": "Via",
													"value": "kong/2.7.1"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"Unauthorized\",\n        \"message\": \"Unauthorized\",\n        \"details\": {\n            \"model\": \"response\",\n            \"model_id\": \"cc364734-7dfd-4bfc-897d-be763dcdbb07\",\n            \"owner\": \"12345678\"\n        }\n    }\n}"
										}
									]
								}
							],
							"description": "These endpoints enable you to manage collection responses."
						}
					],
					"description": "These endpoints enable you to manage a collection's items, such as folders and requests."
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "Get a collection's tags",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"tags"
									]
								},
								"description": "Gets all the tags associated with a collection."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "No View Permissions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update a collection's tags",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"tags"
									]
								},
								"description": "Updates a collection's associated tags. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to a collection.\n- Tags must be between 2 and 64 characters long.\n    \n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\\\*[a-z0-9]+$` pattern."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}"
								},
								{
									"name": "Tag Exceeds Max Size",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"
								},
								{
									"name": "Exceeds Max Number of Tags",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        },\n        {\n            \"slug\": \"test-collection\"\n        },\n        {\n            \"slug\": \"preview\"\n        },\n        {\n            \"slug\": \"pre-release\"\n        },\n        {\n            \"slug\": \"api-team\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags must NOT have more than 5 items\",\n    \"status\": 400\n}"
								},
								{
									"name": "Special Character Present",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Missing tags Object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"
								},
								{
									"name": "Tag Does Not Start with Letter",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage collection tags with Postman's [tagging](https://learning.postman.com/docs/collections/using-collections/#tagging-a-collection) feature. Tagging is available on Postman [<b>Enterprise</b> plans](https://www.postman.com/pricing/)."
				},
				{
					"name": "Forks",
					"item": [
						{
							"name": "Get a collection's forks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"forks"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "<string>",
											"description": "Sort the results by creation date in ascending (`asc`) or descending (`desc`) order.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. Thsi value defaults to `10`.",
											"disabled": true
										}
									]
								},
								"description": "Gets a collection's forked collections. The response returns data for each fork, such as the fork's ID, the user who forked it, and the fork's creation date."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"createdBy\": \"Taylor Lee\",\n            \"createdAt\": \"2023-11-16T09:18:17.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"87654321-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"createdBy\": \"Alex Cruz\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null\n    }\n}"
								},
								{
									"name": "Response with cursor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks?cursor=eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											],
											"query": [
												{
													"key": "cursor",
													"value": "eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ=="
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"87654321-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"createdBy\": \"Alex Cruz\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        },\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"createdBy\": \"12345678\",\n            \"createdAt\": \"2023-11-15T08:12:27.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null\n    }\n}"
								},
								{
									"name": "Response with direction",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks?direction=asc",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											],
											"query": [
												{
													"key": "direction",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"createdBy\": \"12345678\",\n            \"createdAt\": \"2023-11-15T08:12:27.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"87654321-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"createdBy\": \"Alex Cruz\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null\n    }\n}"
								},
								{
									"name": "Response with limit",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks?limit=5",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											],
											"query": [
												{
													"key": "limit",
													"value": "5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"createdBy\": \"12345678\",\n            \"createdAt\": \"2023-11-15T08:12:27.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"87654321-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"createdBy\": \"Alex Cruz\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        },\n                {\n            \"forkName\": \"My Fork\",\n            \"forkId\": \"12345678-667df1ad-2gnm-7890-b678-7742d82e2e1f\",\n            \"createdBy\": \"Taylor Lee\",\n            \"createdAt\": \"2023-10-03T10:00:07.000Z\"\n        },\n        {\n            \"forkName\": \"Testing\",\n            \"forkId\": \"12345678-667df1ad-2ee3-ifb0-b678-7742d82e2e1f\",\n            \"createdBy\": \"Taylor Lee\",\n            \"createdAt\": \"2023-12-18T00:02:25.000Z\"\n        },\n        {\n            \"forkName\": \"Example Fork\",\n            \"forkId\": \"87654321-667df1ad-efbh-7880-b678-7742d82e2e1f\",\n            \"createdBy\": \"Alex Cruz\",\n            \"createdAt\": \"2023-12-29T02:28:11.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 10,\n        \"nextCursor\": \"eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ==\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"This collection has no forks.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"forks"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get source collection's status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/source-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"source-status"
									]
								},
								"description": "Checks whether there is a change between the forked collection and its parent (source) collection.\n\nIf the value of the `isSourceAhead` property is `true` in the response, then there is a difference between the forked collection and its source collection.\n\n**Note:**\n\nThis endpoint may take a few minutes to return an updated `isSourceAhead` status."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/source-status",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"source-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"collection\": {\n        \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\": {\n            \"isSourceAhead\": false\n        }\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/source-status",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"source-status"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"The collection is not a forked collection.\"\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/source-status",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"source-status"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"You do not have enough permissions to perform this action.\",\n    \"status\": 403,\n    \"title\": \"Forbidden\",\n    \"type\": \"https://api.postman.com/problems/forbidden\"\n}"
								}
							]
						},
						{
							"name": "Get all forked collections",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/collection-forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"collection-forks"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "<string>",
											"description": "Sort the results by creation date in ascending (`asc`) or descending (`desc`) order.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. Thsi value defaults to `10`.",
											"disabled": true
										}
									]
								},
								"description": "Gets a list of all the authenticated user's forked collections."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:18:17.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"12345678-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null,\n        \"inaccessibleFork\": 0\n    }\n}"
								},
								{
									"name": "Response with cursor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks?cursor=eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											],
											"query": [
												{
													"key": "cursor",
													"value": "eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ=="
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:18:17.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"12345678-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null,\n        \"inaccessibleFork\": 0\n    }\n}"
								},
								{
									"name": "Response with direction",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks?direction=asc",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											],
											"query": [
												{
													"key": "direction",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-15T08:12:27.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"12345678-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 2,\n        \"nextCursor\": null,\n        \"inaccessibleFork\": 0\n    }\n}"
								},
								{
									"name": "Response with limit",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks?limit=5",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											],
											"query": [
												{
													"key": "limit",
													"value": "5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Collection Fork\",\n            \"forkId\": \"12345678-667df1ad-2ee3-7890-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-15T08:12:27.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork\",\n            \"forkId\": \"12345678-38j9f1ad-2ee3-7890-dv5h-7742d82e2e1f\",\n            \"sourceId\": \"87654321-bd46b634-b347-44d4-aa23-8c71ff4ecc4d\",\n            \"createdAt\": \"2023-11-16T09:16:15.000Z\"\n        },\n                {\n            \"forkName\": \"My Fork\",\n            \"forkId\": \"12345678-667df1ad-2gnm-7890-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-8c082f7b-6c1d-4110-9c44-ebe3353ba4e9\",\n            \"createdAt\": \"2023-10-03T10:00:07.000Z\"\n        },\n        {\n            \"forkName\": \"Testing\",\n            \"forkId\": \"12345678-667df1ad-2ee3-ifb0-b678-7742d82e2e1f\",\n            \"sourceId\": \"87654321-5995bdd5-3935-4789-955f-1d5507d602ab\",\n            \"createdAt\": \"2023-12-18T00:02:25.000Z\"\n        },\n        {\n            \"forkName\": \"Example Fork\",\n            \"forkId\": \"12345678-9af28c4f-2974-40c7-a834-e1a2a18cba8f\",\n            \"sourceId\": \"87654321-5995bdd5-3935-4789-955f-1d5507d602ab\",\n            \"createdAt\": \"2023-12-29T02:28:11.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"total\": 10,\n        \"nextCursor\": \"eyJpZCI6MzMyNzksImZvcmtzQWZ0ZXIiOjIwfQ==\",\n        \"inaccessibleFork\": 0\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"No Postman User found for given filters\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/collection-forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"collection-forks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
								}
							]
						},
						{
							"name": "Pull source changes",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/pulls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"pulls"
									]
								},
								"description": "Pulls the changes from a parent (source) collection into the forked collection. In the endpoint's response:\n\n- The `destinationId` is the ID of the forked collection.\n- The `sourceId` is the ID of the source collection."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pulls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"collection\": {\n        \"destinationId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"sourceId\": \"12345678-45499451-e894-41b8-8c66-8191ab64932a\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pulls"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"The collection is not a forked collection.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pulls"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"notFoundError\",\n        \"message\": \"Fork not found.\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create a fork",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"label\": \"{{collectionForkName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/fork/{{collectionId}}?workspace=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"fork",
										"{{collectionId}}"
									],
									"query": [
										{
											"key": "workspace",
											"value": "<string>",
											"description": "(Required) The workspace ID in which to fork the collection."
										}
									]
								},
								"description": "Creates a [fork](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) from an existing collection into a workspace. Include the following required request body properties:\n\n- `label` — A **string** value that contains the fork's label."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"label\": \"Test Fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"fork",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"collection\": {\n        \"id\": \"09547fef-a9a5-4e00-998b-aa563e8db69a\",\n        \"name\": \"Test Collection\",\n        \"fork\": {\n            \"label\": \"Test Fork\",\n            \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n            \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"uid\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"label\": \"Test Fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"fork",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"label\": \"Test Fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/fork/12ece9e1-2abf-4edc-8e34-de66e74114d2?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"fork",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Merge or pull changes into a collection fork",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strategy\": \"{{mergeStrategy}}\",\n    \"source\": \"{{sourceCollectionUid}}\",\n    \"destination\": \"{{destinationCollectionUid}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collection-merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-merges"
									]
								},
								"description": "[Merges](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/#merge-changes-from-a-fork) a forked (source) collection and its parent (destination) collection asynchronously. To pull changes into a fork, pass the forked collection's ID as the `destination` value and the parent collection ID as the `source` value.\n\nThe response returns a task `id` value, which you can use to track the merge's status with the GET `/collection-merges-tasks/{taskId}` endpoint.\n\nInclude the following in the request body:\n\n- `strategy` — A **string** that contains one of the following merge strategies:\n    \n    - `default` — Make no changes to the fork. You must have **Editor** access to the destination collection.\n        \n    - `updateSourceWithDestination` — Merge changes and apply any differences in the destination collection to the source. You must have **Editor** access to both the source and destination collection.\n        \n    - `deleteSource` — Merge the changes and delete the fork. You must have **Editor** access to both the source and destination collection.\n        \n- `source` — A **string** value that contains the the forked collection's unique ID.\n    \n- `destination` — A **string** value that contains the destination collection's unique ID."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"default\",\n    \"source\": \"12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"destination\": \"12345678-b04fa319-3e7e-4fa3-b6a2-f5b29ad67583\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"task\": {\n        \"id\": \"pm~vc:merge-workflow~12345678-4824989b-cd77-4e2f-856c-1ff2a3e9aaca\",\n        \"status\": \"in-progress\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"default\",\n    \"destination\": \"20891195-b04fa319-3e7e-4fa3-b6a2-f5b29ad67583\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"status\": 400,\n    \"detail\": \"Some validation errors occurred\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"default\",\n    \"source\": \"12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"destination\": \"12345678-b04fa319-3e7e-4fa3-b6a2-f5b29ad67583\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"default\",\n    \"source\": \"12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"destination\": \"12345678-b04fa319-3e7e-4fa3-b6a2-f5b29ad67583\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You need Editor role on the destination entity and Viewer role on the source entity to merge changes. Additionally, you may also need Editor role on the source entity to update or delete while merging.\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Get merge or pull task status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collection-merges-tasks/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-merges-tasks",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId",
											"value": "{{string}}",
											"description": "The task's ID."
										}
									]
								},
								"description": "Gets the status of a collection's merge or a pull changes task.\n\n**Note:**\n\nAfter a merge's success or failure, the task's status is only available for a period of 24 hours. Afterwards, this endpoint returns an HTTP `404 Not Found` response."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"status\": \"successful\"\n}"
								},
								{
									"name": "In Progress",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"status\": \"in-progress\"\n}"
								},
								{
									"name": "Failed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3\",\n    \"status\": \"failed\",\n    \"details\": {\n        \"error\": {\n            \"message\": \"All conflicts have not be resolved\"\n        }\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have enough permissions to perform this action.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-merges-tasks/:taskId",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-merges-tasks",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Task not found\",\n    \"status\": 404,\n    \"detail\": \"Workflow :: pm~vc:merge-workflow~12345678-5a027c05-056b-49f5-ac9d-37c29f2d91c3 not found\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage collection [forks](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-entities/)."
				},
				{
					"name": "Pull Requests",
					"item": [
						{
							"name": "Get a collection's pull requests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectiondUid}}/pull-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectiondUid}}",
										"pull-requests"
									]
								},
								"description": "Gets information about a collection's pull requests, such as the source and destination IDs, status of the pull requests, and a URL link to the pull requests."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"createdAt\": \"2024-02-20T09:55:46.000Z\",\n            \"updatedAt\": \"2024-02-20T09:58:38.000Z\",\n            \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n            \"href\": \"/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n            \"sourceId\": \"87654321-3b79068c-dbe5-41d5-a826-51be4bf646ef\",\n            \"destinationId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"title\": \"Open PR\",\n            \"description\": \"This is an open pull request.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"status\": \"open\"\n        },\n        {\n            \"createdAt\": \"2024-02-20T09:58:57.000Z\",\n            \"updatedAt\": \"2024-02-20T09:58:57.000Z\",\n            \"id\": \"ac959187-568f-4e5e-9d17-584eb44fbed2\",\n            \"href\": \"/pull-requests/ac959187-568f-4e5e-9d17-584eb44fbed2\",\n            \"sourceId\": \"87654321-e50a18a3-0dcd-49cb-afa5-d3a82cdf6134\",\n            \"destinationId\": \"12345678-24f57217-1169-4b7c-a810-0e957c04eaa5\",\n            \"title\": \"Approved PR\",\n            \"description\": \"This is an approved PR.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"status\": \"approved\"\n        },\n        {\n            \"createdAt\": \"2024-02-20T09:55:46.000Z\",\n            \"updatedAt\": \"2024-02-20T09:58:38.000Z\",\n            \"id\": \"eda21e1f-8688-43aa-8660-35337dbac04b\",\n            \"href\": \"/pull-requests/eda21e1f-8688-43aa-8660-35337dbac04b\",\n            \"sourceId\": \"87654321-4beee503-1a7a-4925-a165-16fc29eaad22\",\n            \"destinationId\": \"12345678-c7f30bd9-5cc7-4569-a5fe-92270af33c6c\",\n            \"title\": \"Declined PR\",\n            \"description\": \"This is a declined PR.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\":\"12345678\",\n            \"status\": \"declined\",\n            \"comment\": \"Missing information.\"\n        }\n    ]\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You need Viewer role on both source and destination collections to view pull requests. Please contact collection editors to grant additional access to you.\",\n    \"status\": 403\n}"
								}
							]
						},
						{
							"name": "Create a pull request",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{pullRequestTitle}}\",\n    \"description\": \"{{pullRequesetDescription}}\",\n    \"reviewers\": [\n        \"{{userId}}\",\n        \"{{userId}}\"\n    ],\n    \"destinationId\": \"{{destinationCollectionId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectiondUid}}/pull-requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectiondUid}}",
										"pull-requests"
									]
								},
								"description": "Creates a pull request for a forked collection into its parent collection. Include the following in the request body:\n\n- `title` — (Required) A **string** that contains the title of the pull request.\n    \n- `reviewers` — (Required) An **array of strings** that contains a list of the pull request's assigned reviewers.\n    \n- `destinationId` — (Required) A **string** that contains the collection ID to merge the pull request into.\n    \n- `description` — A **string** that contains a description of the pull request."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"reviewers\": [\n        \"87654321\",\n        \"56781234\"\n    ],\n    \"destinationId\": \"12345678-ec548788-unftw-rgn8-83b8-0b59798648e4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"createdAt\": \"2024-02-20T09:55:46.000Z\",\n    \"updatedAt\": \"2024-02-20T09:58:57.000Z\",\n    \"sourceId\": \"87654321-3b79068c-dbe5-41d5-a826-51be4bf646ef\",\n    \"destinationId\": \"12345678-ec548788-unftw-rgn8-83b8-0b59798648e4\",\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"createdBy\": \"12345678\",\n    \"status\": \"open\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"reviewers\": [\n        \"87654321\",\n        \"56781234\"\n    ],\n    \"destinationId\": \"12345678-ec548788-unftw-rgn8-83b8-0b59798648e4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Duplicate pull request\",\n    \"detail\": \"A pull request for this source and destination already exists.\",\n    \"status\": 400\n}"
								},
								{
									"name": "Invalid Fork Source",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"reviewers\": [\n        \"87654321\",\n        \"56781234\"\n    ],\n    \"destinationId\": \"12345678-ec548788-unftw-rgn8-83b8-0b59798648e4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Bad Request\",\n    \"status\": 400,\n    \"detail\": \"Fork relation not found\"\n    \n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"reviewers\": [\n        \"87654321\",\n        \"56781234\"\n    ],\n    \"destinationId\": \"12345678-ec548788-unftw-rgn8-83b8-0b59798648e4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/pull-requests",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"pull-requests"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You and all reviewers need Viewer access on both source and destination collections.\",\n    \"status\": 403\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage your Postman Collection's [pull requests](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/creating-pull-requests/). Pull requests allow reviewers to look at your changes. Reviewers can make comments on your changes and will decide whether to approve them and merge them into the parent collection."
				},
				{
					"name": "Transformations",
					"item": [
						{
							"name": "Transform collection to OpenAPI",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/transformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"transformations"
									],
									"query": [
										{
											"key": "format",
											"value": "<string>",
											"description": "Return the OpenAPI definition in the given format:\n- `json` (default)\n- `yaml`",
											"disabled": true
										}
									]
								},
								"description": "Transforms an existing Postman Collection into a stringified OpenAPI definition.\n\n**Note:**\n\nThis does **not** create an API."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"transformations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"output\": \"{\\n  \\\"openapi\\\": \\\"3.0.3\\\",\\n  \\\"info\\\": {\\n    \\\"title\\\": \\\"Collection to API\\\",\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"contact\\\": {}\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://api.getpostman.com/\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {},\\n  \\\"tags\\\": []\\n}\\n\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"transformations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"transformations"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/transformations",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"transformations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500,\n    \"instance\": \"/collections/{collectionId}/apis\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to transform Postman Collections to other formats, such as OpenAPI."
				},
				{
					"name": "Transfers",
					"item": [
						{
							"name": "Transfer folders",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"{{folderUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"{{modelType}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"{{modelId}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collection-folders-transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-folders-transfers"
									]
								},
								"description": "Copies or moves folders into a collection or folder. Include the following in the request body:\n\n- `ids` — A list of **string** values that contain the folder UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    \n    - `model` — A **string** value that contains the the type of item where the items will be transferred to. Accepts the `collection` or `folder` values.\n        \n    - `id` — The **string** value that contains the UID of the destination collection or folder.\n        \n- `location` — An **object** that contains the transfered item's source information:\n    \n    - `position` — A **string** value that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n        \n    - `model` — For the `before` or `after` positions, a **string** value that contains the type of item (model) that the transferred item will be positioned by.\n        \n    - `id` — For the `before` or `after` positions, a **string** value that contains the model's UID.\n        \n- `mode` — A **string** value that contains the transfer operation to perform. Accepts the `move` or `copy` value."
							},
							"response": [
								{
									"name": "Copy Folder to Collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"end\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-folders-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-folders-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"
								},
								{
									"name": "Move Folder to a Collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-folders-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-folders-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"
								},
								{
									"name": "Move Folder Before Another Folder",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"before\",\n        \"model\": \"folder\",\n        \"id\": \"12345678-45499451-e894-41b8-8c66-8191ab64932a\"\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-folders-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-folders-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bd1\"\n    ]\n}"
								},
								{
									"name": "Invalid ids Value",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-2ba6b9c4-5327-4c46-9bf3-4ec84b74b720\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-folders-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-folders-transfers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"type\": \"Error\",\n  \"title\": \"One or more folder ids provided were not found\",\n  \"detail\": {\n        \"missing\": [\n            \"12345678\"\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "Transfer requests",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"{{requestUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"{{modelType}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"{{modelId}}\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collection-requests-transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-requests-transfers"
									]
								},
								"description": "Copies or moves requests into a collection or folder. Include the following in the request body:\n\n- `ids` — A list of **string** values that contain the request UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    \n    - `model` — A **string** value that contains the the type of item where the items will be transferred to. Accepts the `collection` or `folder` values.\n        \n    - `id` — The **string** value that contains the UID of the destination collection or folder.\n        \n- `location` — An **object** that contains the transfered item's source information:\n    \n    - `position` — A **string** value that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n        \n    - `model` — For the `before` or `after` positions, a **string** value that contains the type of item (model) that the transferred item will be positioned by.\n        \n    - `id` — For the `before` or `after` positions, a **string** value that contains the model's UID.\n        \n- `mode` — A **string** value that contains the transfer operation to perform. Accepts the `move` or `copy` value."
							},
							"response": [
								{
									"name": "Copy Request to Collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"collection\",\n        \"id\": \"12345678-6ce99ba5-fd64-40d5-b4f1-3569df4554a0\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-requests-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-requests-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"
								},
								{
									"name": "Move Request to Top of Folder",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-requests-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-requests-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"
								},
								{
									"name": "Move Request After Another Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"after\",\n        \"model\": \"request\",\n        \"id\": \"12345678-78749c26-69c7-4c07-8fca-8055d1a732db\"\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-requests-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-requests-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ]\n}"
								},
								{
									"name": "Invalid ids Value",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-requests-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-requests-transfers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"type\": \"Error\",\n  \"title\": \"One or more request ids provided were not found\",\n  \"detail\": {\n        \"missing\": [\n            \"12345678\"\n        ]\n    }\n}\n"
								},
								{
									"name": "Target Folder Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-requests-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-requests-transfers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"type\": \"Error\",\n  \"title\": \"Target folder 12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9 not found\",\n  \"detail\": {}\n}\n"
								}
							]
						},
						{
							"name": "Transfer responses",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"{{responseUid}}\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"location\": {\n        \"position\": \"{{position}}\",\n        \"model\": \"response\",\n        \"id\": \"{{modelUid}}\"\n    },\n    \"mode\": \"{{modeType}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collection-responses-transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-responses-transfers"
									]
								},
								"description": "Copies or moves responses into a request. Include the following in the request body:\n\n- `ids` — A list **string** values that contain the response UIDs to transfer.\n- `target` — An **object** that contains the transfer destination information:\n    \n    - `model` — A **string** value that contains the the type of item where the items will be transferred to. Only accepts the `request` value.\n        \n    - `id` — The **string** value that contains the UID of the destination request.\n        \n- `location` — An **object** that contains the transfered item's source information:\n    \n    - `position` — A **string** value that contains the item's position within the destination object. Accepts the `start`, `end`, `before`, and `after` values.\n        \n    - `model` — For the `before` or `after` positions, a **string** value that contains the type of item (model) that the transferred item will be positioned by. Only accepts the `response` value.\n        \n    - `id` — For the `before` or `after` positions, a **string** value that contains the model's UID.\n        \n- `mode` — A **string** value that contains the transfer operation to perform. Accepts the `move` or `copy` value."
							},
							"response": [
								{
									"name": "Copy Response to Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"copy\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-responses-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-responses-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"
								},
								{
									"name": "Move Response to Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"end\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-responses-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-responses-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"
								},
								{
									"name": "Move Response Before Another Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-4b81b7c8-62c0-4cb0-b69d-0f256f1baddc\"\n    ],\n    \"target\": {\n        \"model\": \"request\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb8\"\n    },\n    \"location\": {\n        \"position\": \"before\",\n        \"model\": \"response\",\n        \"id\": \"12345678-80812b16-ac27-45b3-b3eb-793f78530d32\"\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-responses-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-responses-transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"ids\": [\n        \"12345678-a9b481c1-3e78-4af7-8db0-dce3f3f3c105\"\n    ]\n}"
								},
								{
									"name": "Invalid target Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n        \"12345678-3a2069a1-aeb6-462c-ada0-8629858199ba\"\n    ],\n    \"target\": {\n        \"model\": \"folder\",\n        \"id\": \"12345678-bcb5648b-eecb-4468-ade7-4efb38431bb9\"\n    },\n    \"location\": {\n        \"position\": \"start\",\n        \"model\": null,\n        \"id\": null\n    },\n    \"mode\": \"move\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collection-responses-transfers",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-responses-transfers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n  \"type\": \"Error\",\n  \"title\": \"Cannot transfer response to target model type folder\",\n  \"detail\": {}\n}\n"
								}
							]
						}
					],
					"description": "These endpoints enable you to move collection items between different collections or folders."
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Get a collection's roles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"roles"
									]
								},
								"description": "Gets information about all [roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#collection-roles) in a collection. The response returns the IDs of all users, teams, and groups with access to view or edit the collection."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"group\": [\n        {\n            \"role\": \"VIEWER\",\n            \"id\": 321\n        }\n    ],\n    \"team\": [\n        {\n            \"role\": \"EDITOR\",\n            \"id\": 123\n        }\n    ],\n    \"user\": [\n        {\n            \"role\": \"VIEWER\",\n            \"id\": 12345678\n        },\n        {\n            \"role\": \"EDITOR\",\n            \"id\": 87654321\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"We could not find the collection you are looking for\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update a collection's roles",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"{{pathValue}}\",\n            \"value\": [\n                {\n                    \"id\": {{id}},\n                    \"role\": \"{{collectionRoleId}}\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionId}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionId}}",
										"roles"
									]
								},
								"description": "Updates the roles of users, groups, or teams in a collection. On success, this returns an HTTP `204 No Content` response.\n\nInclude the following values in the `roles` array of objects:\n\n- `op` — (Required) A **string** value that contains the operation to perform. Accepts the `update` value.\n    \n- `path` — (Required) A **string** value that contains the resource to perform the action on. Accepts the `/user`, `/group`, or `/team` value.\n    \n- `value` — (Required) A list of objects that contain the following values:\n    \n    - `id` — (Required) An **integer** value that contains the user, group, or team ID.\n        \n    - `role` — (Required) A **string** value that contains the role's type:\n        \n        - `EDITOR` — Can edit collections directly.\n            \n        - `VIEWER` — Can view, fork, and export collections.\n            \n\n**Note:**\n\n- Only users assigned the `EDITOR` [role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#collection-roles) in the collection can use this endpoint.\n    \n- This endpoint does not support the external [Partner or Guest roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles)."
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"/group\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": 12345678,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 87654321,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/team\",\n            \"value\": [\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                },\n                {\n                    \"id\": 543,\n                    \"role\": \"EDITOR\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Missing properties: 'path'\",\n    \"detail\": \"PATCH request body for '/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles/roles' failed to validate schema. Location: /properties/roles/items/required\",\n    \"status\": 400\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"/group\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": 12345678,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 87654321,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/team\",\n            \"value\": [\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                },\n                {\n                    \"id\": 543,\n                    \"role\": \"EDITOR\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"/group\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": 12345678,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 87654321,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/team\",\n            \"value\": [\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                },\n                {\n                    \"id\": 543,\n                    \"role\": \"EDITOR\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"/group\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": 12345678,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 87654321,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/team\",\n            \"value\": [\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                },\n                {\n                    \"id\": 543,\n                    \"role\": \"EDITOR\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"We could not find the collection you are looking for\",\n    \"type\": \"instanceNotFoundError\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"update\",\n            \"path\": \"/group\",\n            \"value\": [\n                {\n                    \"id\": 12345,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": 12345678,\n                    \"role\": \"EDITOR\"\n                },\n                {\n                    \"id\": 87654321,\n                    \"role\": \"VIEWER\"\n                }\n            ]\n        },\n        {\n            \"op\": \"update\",\n            \"path\": \"/team\",\n            \"value\": [\n                {\n                    \"id\": 123,\n                    \"role\": \"VIEWER\"\n                },\n                {\n                    \"id\": 543,\n                    \"role\": \"EDITOR\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage [collection roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#collection-roles)."
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Get a collection's comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"comments"
									]
								},
								"description": "Gets all comments left by users in a collection."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 46818,\n            \"threadId\": 12345,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T12:00:54.000Z\",\n            \"updatedAt\": \"2024-01-18T12:00:54.000Z\",\n            \"body\": \"This is also an example.\"\n        },\n        {\n            \"id\": 46817,\n            \"threadId\": 67890,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2024-01-18T11:48:01.000Z\",\n            \"updatedAt\": \"2024-01-18T11:48:01.000Z\",\n            \"body\": \"Another example.\"\n        },\n        {\n            \"id\": 46814,\n            \"threadId\": 23456,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n            \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n            \"body\": \"This is an example.\"\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/forbidden\",\n    \"title\":  \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Create a collection comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"comments"
									]
								},
								"description": "Creates a comment on a collection. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `threadId` — An **integer** that contains the comment's thread ID.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
								},
								{
									"name": "Reply to Comment Thread",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\",\n    \"threadId\": 12345\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example.\"\n    }\n}"
								},
								{
									"name": "Tag User in Comment",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an example. @alex-cruz\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/forbidden\",\n    \"title\":  \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update a collection's comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"{{comment}}\",\n    \"tags\": {\n        \"{{userName}}\": {\n            \"type\": \"user\",\n            \"id\": \"{{userId}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"comments",
										"{{commentId}}"
									]
								},
								"description": "Updates a comment on a collection. Include the following in request body:\n\n- `body` — (Required) A **string** that contains the comment.\n    \n- `tags` — An **object** that contains information about users tagged in the `body` comment. Include the following in this object:\n    \n    - `userName` — (Required) An **object** that contains information about the tagged user. The object's name is the user's Postman username. For example, `@user-postman`. Include the following in this object:\n        \n        - `type` — (Required) A **string** that contains the `user` value.\n            \n        - `id` — (Required) An **integer** that contains the user's ID.\n            \n\n**Note:**\n\nThis endpoint accepts a max of 10,000 characters."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example.\"\n    }\n}"
								},
								{
									"name": "Tag User in Comment",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"body\": \"This is an updated example. @alex-cruz\",\n    \"tags\": {\n        \"@alex-cruz\": {\n            \"type\": \"user\",\n            \"id\": \"87654321\"\n            }\n        }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"id\": 46814,\n        \"threadId\": 12345,\n        \"createdBy\": 12345678,\n        \"createdAt\": \"2024-01-18T11:30:40.000Z\",\n        \"updatedAt\": \"2024-01-18T11:30:40.000Z\",\n        \"body\": \"This is an updated example. @alex-cruz\"\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/forbidden\",\n    \"title\":  \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": \"This is an updated example.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Delete a collection's comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections/{{collectionUid}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"{{collectionUid}}",
										"comments",
										"{{commentId}}"
									]
								},
								"description": "Deletes a comment from a collection. On success, this returns an HTTP `204 No Content` response.\n\n**Note:**\n\nDeleting the first comment of a thread deletes all the comments in the thread."
							},
							"response": [
								{
									"name": "Comment Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"link\":   \"https://api.postman.com/problems/forbidden\",\n    \"title\":  \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.api.v10+json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2/comments/46814",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
												"comments",
												"46814"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage comments on a collection. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
				},
				{
					"name": "Collection Access Keys",
					"item": [
						{
							"name": "Get collection access keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collection-access-keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-access-keys"
									],
									"query": [
										{
											"key": "collectionId",
											"value": "<string>",
											"description": "Filter the results by a collection's unique ID.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results. To view the next response, use the `nextCursor` value for this parameter.",
											"disabled": true
										}
									]
								},
								"description": "Gets the authenticated user's personal and team [collection access keys](https://learning.postman.com/docs/developer/postman-api/authentication/#generate-a-collection-access-key).\n\n**Note:**\n\n- The `expiresAfter` property in the response represents the date and time at which the access key expires. Collection access keys are valid for 60 days. If unused, the access key expires after 60 days. If someone uses the access key, then its expiration date increases by another 60 days.\n    \n- If the collection key is unused, the `lastUsedAt` property in the response returns an empty string."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0\",\n            \"token\": \"PMAT-**********************43BR\",\n            \"status\": \"ACTIVE\",\n            \"teamId\": 123,\n            \"userId\": 12345678,\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"expiresAfter\": \"2024-06-11T13:21:11.000Z\",\n            \"lastUsedAt\": \"\",\n            \"createdAt\": \"2024-04-12T13:21:11.000Z\",\n            \"updatedAt\": \"2024-04-09T11:00:53.000Z\"\n        },\n        {\n            \"id\": \"K7yJPzQ18BC7Snm09PXL12RMmnq57hQorFJW8JnCKhQ11JmNQiTlgXnQ1p93jGYN\",\n            \"token\": \"PMAT-**********************51FZ\",\n            \"status\": \"ACTIVE\",\n            \"teamId\": 123,\n            \"userId\": 56781234,\n            \"collectionId\": \"56781234-68e5e7ac-c134-45f4-9770-40e72f3fc474\",\n            \"expiresAfter\": \"2024-06-11T13:21:11.000Z\",\n            \"lastUsedAt\": \"2024-04-29T08:24:23.000Z\",\n            \"createdAt\": \"2024-04-22T10:11:00.000Z\",\n            \"updatedAt\": \"2024-04-22T10:11:00.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"b2Zmc2V0PTEwJmxpbWl0PTEw\",\n        \"prevCursor\": \"\"\n    }\n}"
								},
								{
									"name": "Filter by collectionId",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys?collectionId=12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											],
											"query": [
												{
													"key": "collectionId",
													"value": "12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0\",\n            \"token\": \"PMAT-**********************43BR\",\n            \"status\": \"ACTIVE\",\n            \"teamId\": 123,\n            \"userId\": 12345678,\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"expiresAfter\": \"2024-06-11T13:21:11.000Z\",\n            \"lastUsedAt\": \"\",\n            \"createdAt\": \"2024-04-12T13:21:11.000Z\",\n            \"updatedAt\": \"2024-04-09T11:00:53.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"prevCursor\": \"\"\n    }\n}"
								},
								{
									"name": "Pagination",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys?cursor=b2Zmc2V0PTEwJmxpbWl0PTEw",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											],
											"query": [
												{
													"key": "cursor",
													"value": "b2Zmc2V0PTEwJmxpbWl0PTEw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0\",\n            \"token\": \"PMAT-**********************43BR\",\n            \"status\": \"ACTIVE\",\n            \"teamId\": 123,\n            \"userId\": 12345678,\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"expiresAfter\": \"2024-06-11T13:21:11.000Z\",\n            \"lastUsedAt\": \"\",\n            \"createdAt\": \"2024-04-12T13:21:11.000Z\",\n            \"updatedAt\": \"2024-04-09T11:00:53.000Z\"\n        },\n        {\n            \"id\": \"K7yJPzQ18BC7Snm09PXL12RMmnq57hQorFJW8JnCKhQ11JmNQiTlgXnQ1p93jGYN\",\n            \"token\": \"PMAT-**********************51FZ\",\n            \"status\": \"ACTIVE\",\n            \"teamId\": 123,\n            \"userId\": 56781234,\n            \"collectionId\": \"56781234-68e5e7ac-c134-45f4-9770-40e72f3fc474\",\n            \"expiresAfter\": \"2024-06-11T13:21:11.000Z\",\n            \"lastUsedAt\": \"2024-04-29T08:24:23.000Z\",\n            \"createdAt\": \"2024-04-22T10:11:00.000Z\",\n            \"updatedAt\": \"2024-04-22T10:11:00.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"prevCursor\": \"\"\n    }\n}"
								},
								{
									"name": "Invalid Cursor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys?cursor=123",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											],
											"query": [
												{
													"key": "cursor",
													"value": "123"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Malformed request\",\n    \"detail\": \"Invalid cursor\",\n    \"status\": 400\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"detail\": \"Something went wrong\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Delete a collection access key",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collection-access-keys/{{keyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collection-access-keys",
										"{{keyId}}"
									]
								},
								"description": "Deletes a collection access key. To get a collection access key's ID, use the GET `/collection-access-key` endpoint.\n\nOn success, this returns an HTTP `204 No Content` response."
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys/Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys",
												"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys/Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys",
												"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys/Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys",
												"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys/9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys",
												"9"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not found\",\n    \"detail\": \"The key was not found\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/collection-access-keys/Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collection-access-keys",
												"Njg5OjU3MDQ1NjYtYmQxZDU3NzktMWVkNS00ZDhjLWI0ZmQtZWRhOGY2Mzg1NTY0"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"detail\": \"Something went wrong\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage your [collection access keys](https://learning.postman.com/docs/developer/postman-api/authentication/#generate-a-collection-access-key). Collection access keys enable you to securely grant other users read-only access to a collection.\n\nCollection access keys are valid for 60 days. If unused, the access key expires after 60 days. If someone uses the access key, then its expiration date increases by another 60 days."
				},
				{
					"name": "Create a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            {\n                // Refer to the collection.json schema file (https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a collection using the [Postman Collection v2.1.0 schema format](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` — An **object** that contains the following properties:\n    \n    - `name` — A **string** value that contains the collection's name.\n        \n    - `schema` — A **string** value that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/json/collection/v2.1.0/collection.json` URL.\n        \n- `item` — An **object** that contains the HTTP request and response information.\n    \n    - `request` — An **object** that contains the collection's request information. For a complete list of values, refer to the **Request** entry in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html). If you pass an empty object for this value, the system defaults to an untitled GET request.\n        \n\n**Note:**\n\n- If you do not include the `workspace` query parameter, the system creates the collection in your \"My Workspace\" workspace.\n    \n- For a complete list of available property values for this endpoint, use the following references available in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html):\n    \n    - `info` object — Refer to the **Information** entry.\n        \n    - `item` object — Refer to the **Items** entry.\n        \n- For all other possible values, refer to the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html)."
					},
					"response": [
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Create a Collection in Default Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collections/{{collectionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							],
							"query": [
								{
									"key": "access_key",
									"value": "<string>",
									"description": "A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.",
									"disabled": true
								},
								{
									"key": "model",
									"value": "minimal",
									"description": "Return a list of only the collection's root-level request (`rootLevelRequests`) and folder (`rootLevelFolders`) IDs instead of the full collection element data.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"createdAt\": \"2023-10-09T18:34:58.000Z\",\n            \"lastUpdatedBy\": \"12345678\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ],\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"abc123\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"event\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"cc22c328-3dcc-46c1-a357-7e2f72f54cf6\",\n                    \"type\": \"text/javascript\",\n                    \"packages\": {},\n                    \"exec\": [\n                        \"try {\",\n                        \"    const response = await pm.sendRequest({\",\n                        \"        url: \\\"https://postman-echo.com/get\\\",\",\n                        \"        method: \\\"GET\\\"\",\n                        \"    });\",\n                        \"\",\n                        \"    console.log(response.json());\",\n                        \"} catch (err) {\",\n                        \"    console.error(err);\",\n                        \"}\"\n                    ]\n                }\n            },\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"5db243ea-5022-4d08-a620-b8fb9d561af5\",\n                    \"type\": \"text/javascript\",\n                    \"packages\": {},\n                    \"exec\": [\n                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                        \"    pm.response.to.have.status(200);\",\n                        \"});\"\n                    ]\n                }\n            }\n        ],\n        \"variable\": [\n            {\n                \"key\": \"userId\",\n                \"value\": \"ABC123\",\n                \"type\": \"string\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Forked Collection Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"fork\": {\n                \"label\": \"Collection fork\",\n                \"createdAt\": \"2024-07-17T13:12:43.000Z\",\n                \"from\": \"87654321-c8142d52-f97d-46a7-bc77-52bb99713o1n\"\n            },\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"createdAt\": \"2023-10-09T18:34:58.000Z\",\n            \"lastUpdatedBy\": \"12345678\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Response with model=minimal",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2?model=minimal",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "model",
											"value": "minimal"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"updatedAt\": \"2023-10-13T08:14:22.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"createdAt\": \"2023-10-09T18:34:58.000Z\",\n            \"lastUpdatedBy\": \"12345678\"\n        },\n        \"variable\": [],\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"XXX\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"95d3e370-b6eb-42f5-9a98-8f276742037d\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                }\n            },\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"d09029f2-ab45-4a80-b167-90a4c49bf64e\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                }\n            }\n        ],\n        \"rootLevelRequests\": [\n            \"12345678-8178d96f-7504-4273-9ca2-26c2ac725a5b\",\n            \"12345678-fd7565b1-ec19-4d16-b5d4-a3116d1972fb\",\n            \"12345678-3860896c-11fe-4c32-9f0a-88625977c8dc\"\n        ],\n        \"rootLevelFolders\": [\n            \"12345678-803151f5-57f1-4ae5-8f75-4919dbd20372\"\n        ]\n    }\n}"
						},
						{
							"name": "Get Collection with Access Key",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2?access_key=PMAT-XXXXXXXXXXXXXXXXXXXXXXXXXX",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "access_key",
											"value": "PMAT-XXXXXXXXXXXXXXXXXXXXXXXXXX"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"createdAt\": \"2023-10-09T18:34:58.000Z\",\n            \"lastUpdatedBy\": \"12345678\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the collection you are looking for\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collections/{{collectionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Deletes a collection."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Replace a collection's data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"schema\": \"{{collectionSchemaUrl}}\"\n        },\n        \"item\": [\n            { \n                // Refer to the collection.json schema file (https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html). The \"collection.variable\" property also accepts \"variables\".\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections/{{collectionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Replaces the contents of a collection using the [Postman Collection v2.1.0 schema format](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html). Include the collection's ID values in the request body. If you do not, the endpoint removes the existing items and creates new items.\n\n> The maximum collection size this endpoint accepts cannot exceed 100 MB. \n  \n\nInclude the following required properties in the `collection` object:\n\n- `info` — An **object** that contains the following properties:\n    \n    - `name` — A **string** value that contains the collection's name.\n        \n    - `schema` — A **string** value that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/json/collection/v2.1.0/collection.json` URL.\n        \n- `item` — An **object** that contains the collection's information.\n    \n\nFor a complete list of available property values for this endpoint, use the following references available in the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html):\n\n- `info` object — Refer to the **Information** entry.\n    \n- `item` object — Refer to the **Items** entry.\n    \n- For all other possible values, refer to the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n    \n\nFor protocol profile behavior, refer to Postman's [Protocol Profile Behavior](https://github.com/postmanlabs/postman-runtime/blob/develop/docs/protocol-profile-behavior.md) documentation.\n\n**Note:**\n\n- If you don't include the collection items' ID values from the request body, the endpoint **removes** the existing items and recreates the items with new ID values.\n    \n- To copy another collection's contents to the given collection, remove all ID values before you pass it in this endpoint. If you do not, this endpoint returns an error. These values include the `id`, `uid`, and `postman_id` values."
					},
					"response": [
						{
							"name": "Replace a Basic Collection's Data",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test User Collection\",\n            \"description\": \"This is a basic test user collection.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Get a user\",\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"id\": \"fd554123-3124-444c-a4ab-a2ed3c21b794\",\n                            \"exec\": [\n                                \"try {\",\n                                \"    const response = await pm.sendRequest({\",\n                                \"        url: \\\"https://postman-echo.com/get\\\",\",\n                                \"        method: \\\"GET\\\"\",\n                                \"    });\",\n                                \"\",\n                                \"    console.log(response.json());\",\n                                \"} catch (err) {\",\n                                \"    console.error(err);\",\n                                \"}\"\n                            ],\n                            \"type\": \"text/javascript\",\n                            \"packages\": {}\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"85a17bb9-3626-4f86-b206-79798e5f8cd7\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\",\n                            \"packages\": {}\n                        }\n                    }\n                ],\n                \"id\": \"5e1bef64-8201-489b-b07c-a1723e008594\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true,\n                    \"strictSSL\": true\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"http://api.getpostman.com/v1/:userId\",\n                        \"protocol\": \"http\",\n                        \"host\": [\n                            \"api\",\n                            \"getpostman\",\n                            \"com\"\n                        ],\n                        \"path\": [\n                            \"v1\",\n                            \":userId\"\n                        ],\n                        \"variable\": [\n                            {\n                                \"key\": \"userId\",\n                                \"value\": \"{{userId}}\",\n                                \"description\": \"The user ID.\"\n                            }\n                        ]\n                    },\n                    \"description\": \"Gets information about a user.\"\n                },\n                \"response\": [\n                    {\n                        \"id\": \"da76da3c-c418-4f72-b47a-24c540badd37\",\n                        \"name\": \"200 OK\",\n                        \"originalRequest\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/:userId\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \":userId\"\n                                ],\n                                \"variable\": [\n                                    {\n                                        \"key\": \"userId\",\n                                        \"value\": \"{{userId}}\",\n                                        \"description\": \"The user ID.\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"status\": \"OK\",\n                        \"code\": 200,\n                        \"_postman_previewlanguage\": \"json\",\n                        \"header\": [\n                            {\n                                \"key\": \"Content-Type\",\n                                \"value\": \"application/json\",\n                                \"description\": \"\",\n                                \"type\": \"text\"\n                            }\n                        ],\n                        \"cookie\": [],\n                        \"responseTime\": null,\n                        \"body\": \"{\\n    \\\"name\\\": \\\"Test User\\\",\\n    \\\"userId\\\": 12345678\\n}\",\n                        \"uid\": \"12345678-da76da3c-c418-4f72-b47a-24c540badd37\"\n                    }\n                ],\n                \"uid\": \"12345678-5e1bef64-8201-489b-b07c-a1723e008594\"\n            },\n            {\n                \"name\": \"Delete a user\",\n                \"id\": \"496c0ff9-e602-4506-b7dc-00ecd709d5eb\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"DELETE\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"http://api.getpostman.com/v1/:userId\",\n                        \"protocol\": \"http\",\n                        \"host\": [\n                            \"api\",\n                            \"getpostman\",\n                            \"com\"\n                        ],\n                        \"path\": [\n                            \"v1\",\n                            \":userId\"\n                        ],\n                        \"variable\": [\n                            {\n                                \"key\": \"userId\",\n                                \"value\": \"{{userId}}\",\n                                \"description\": \"The user ID.\"\n                            }\n                        ]\n                    },\n                    \"description\": \"Deletes a user.\"\n                },\n                \"response\": [\n                    {\n                        \"id\": \"06f9ea8b-55a7-4e8e-ae12-891a050367de\",\n                        \"name\": \"204 No Content\",\n                        \"originalRequest\": {\n                            \"method\": \"DELETE\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/:userId\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \":userId\"\n                                ],\n                                \"variable\": [\n                                    {\n                                        \"key\": \"userId\",\n                                        \"value\": \"{{userId}}\",\n                                        \"description\": \"The user ID.\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"status\": \"No Content\",\n                        \"code\": 204,\n                        \"_postman_previewlanguage\": null,\n                        \"header\": null,\n                        \"cookie\": [],\n                        \"responseTime\": null,\n                        \"body\": null,\n                        \"uid\": \"12345678-06f9ea8b-55a7-4e8e-ae12-891a050367de\"\n                    }\n                ],\n                \"uid\": \"12345678-496c0ff9-e602-4506-b7dc-00ecd709d5eb\"\n            }\n        ],\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"{{api-key}}\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"x-api-key\"\n                }\n            ]\n        },\n        \"event\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"86cc41c1-a9ad-411f-923d-5f1d15344c94\",\n                    \"type\": \"text/javascript\",\n                    \"packages\": {},\n                    \"exec\": [\n                        \"\"\n                    ]\n                }\n            },\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"9f48d011-89cb-4a85-9179-b3554aa44aff\",\n                    \"type\": \"text/javascript\",\n                    \"packages\": {},\n                    \"exec\": [\n                        \"pm.test(\\\"Content-Type is present\\\", function () {\",\n                        \"    pm.response.to.have.header(\\\"Content-Type\\\");\",\n                        \"});\"\n                    ]\n                }\n            }\n        ],\n        \"variable\": [\n            {\n                \"key\": \"userId\",\n                \"value\": \"12345678\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Replace a Detailed Collection's Data",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"PMAK-XXX\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\"\n                                            },\n                                            {\n                                                \"key\": \"in\",\n                                                \"value\": \"header\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"PMAK-XXX\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\"\n                                },\n                                {\n                                    \"key\": \"in\",\n                                    \"value\": \"header\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"PMAK-XXX\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\"\n                                    },\n                                    {\n                                        \"key\": \"in\",\n                                        \"value\": \"header\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"PMAK-XXX\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\"\n                        },\n                        {\n                            \"key\": \"in\",\n                            \"value\": \"header\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"PMAK-XXX\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\"\n                        },\n                        {\n                            \"key\": \"in\",\n                            \"value\": \"header\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Copy Another Collection's Contents",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"PMAK-XXX\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\"\n                                            },\n                                            {\n                                                \"key\": \"in\",\n                                                \"value\": \"header\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id={{id}}\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"{{id}}\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id={{id}}\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"{{id}}\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\"\n                                    }\n                                ]\n                            }\n                        ],\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"PMAK-XXX\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\"\n                                },\n                                {\n                                    \"key\": \"in\",\n                                    \"value\": \"header\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id={{id}}\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"{{id}}\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\"\n                            },\n                            {\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"PMAK-XXX\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\"\n                                    },\n                                    {\n                                        \"key\": \"in\",\n                                        \"value\": \"header\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\"\n                            }\n                        ]\n                    }\n                ],\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"PMAK-XXX\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\"\n                        },\n                        {\n                            \"key\": \"in\",\n                            \"value\": \"header\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    }\n                                },\n                                \"response\": []\n                            }\n                        ],\n                        \"description\": \"Test folder user ID.\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": []\n                                },\n                                \"response\": []\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": []\n                                },\n                                \"response\": []\n                            }\n                        ],\n                        \"description\": \"Test folder for user information.\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": []\n                    }\n                ],\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"PMAK-XXX\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\"\n                        },\n                        {\n                            \"key\": \"in\",\n                            \"value\": \"header\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ]\n            },\n            {\n                \"name\": \"Test F\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": []\n                },\n                \"response\": []\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Disable a Request's Query Params",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"GET Request with headers and query params\",\n                \"id\": \"7d3bf97a-9a5e-4676-bad4-991d0442c962\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"x-api-key\",\n                            \"value\": \"apikey\",\n                            \"type\": \"text\",\n                            \"disabled\": true\n                        }\n                    ],\n                    \"url\": {\n                        \"raw\": \"https://postman-echo.com/get\",\n                        \"protocol\": \"https\",\n                        \"host\": [\n                            \"postman-echo\",\n                            \"com\"\n                        ],\n                        \"path\": [\n                            \"get\"\n                        ],\n                        \"query\": [\n                            {\n                                \"key\": \"param1\",\n                                \"value\": \"value1\"\n                            },\n                            {\n                                \"key\": \"param2\",\n                                \"value\": \"value2\",\n                                \"disabled\": true\n                            }\n                        ]\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-42d13443-2f50-47f0-b417-03081a97bf45\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 2 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'item'\",\n            \"info: must have required property 'schema'\"\n        ]\n    }\n}"
						},
						{
							"name": "Collection ID Mismatch",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"collectionMismatchError\",\n        \"message\": \"The collection ID in the path does not match the collection ID in the request body.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n            \"updatedAt\": \"2023-10-09T18:34:58.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Folder 1\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Test D\",\n                                \"event\": [\n                                    {\n                                        \"listen\": \"prerequest\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                                \"    console.log(response.json());\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    },\n                                    {\n                                        \"listen\": \"test\",\n                                        \"script\": {\n                                            \"exec\": [\n                                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                                \"    pm.response.to.have.status(200);\",\n                                                \"});\"\n                                            ],\n                                            \"type\": \"text/javascript\"\n                                        }\n                                    }\n                                ],\n                                \"id\": \"c616506e-0676-4d79-88a7-c273b70e9cea\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"apikey\",\n                                        \"apikey\": [\n                                            {\n                                                \"key\": \"value\",\n                                                \"value\": \"XXX\",\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"key\": \"key\",\n                                                \"value\": \"api-key\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"uid\": \"12345678-d20b9562-9c85-4f25-bb2d-cfacf7dd85d1\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-c616506e-0676-4d79-88a7-c273b70e9cea\"\n                            },\n                            {\n                                \"name\": \"Test E\",\n                                \"id\": \"bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"auth\": {\n                                        \"type\": \"bearer\",\n                                        \"bearer\": [\n                                            {\n                                                \"key\": \"token\",\n                                                \"value\": \"TEST\",\n                                                \"type\": \"string\"\n                                            }\n                                        ]\n                                    },\n                                    \"method\": \"PATCH\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"username\\\": \\\"test-user\\\",\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/get?id=12345678\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"get\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"12345678\",\n                                                \"description\": \"Optional. The user's ID.\"\n                                            }\n                                        ]\n                                    },\n                                    \"description\": \"This is an example GET request.\"\n                                },\n                                \"response\": [\n                                    {\n                                        \"id\": \"86447cb0-aeac-4371-a22f-9f6067fc4dd0\",\n                                        \"name\": \"Successful Response\",\n                                        \"originalRequest\": {\n                                            \"method\": \"GET\",\n                                            \"header\": [\n                                                {\n                                                    \"key\": \"Content-Type\",\n                                                    \"name\": \"Content-Type\",\n                                                    \"value\": \"application/json\",\n                                                    \"type\": \"text\"\n                                                }\n                                            ],\n                                            \"body\": {\n                                                \"mode\": \"raw\",\n                                                \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                                \"options\": {\n                                                    \"raw\": {\n                                                        \"language\": \"json\"\n                                                    }\n                                                }\n                                            },\n                                            \"url\": {\n                                                \"raw\": \"https://postman-echo.com/get?id=1234\",\n                                                \"protocol\": \"https\",\n                                                \"host\": [\n                                                    \"postman-echo\",\n                                                    \"com\"\n                                                ],\n                                                \"path\": [\n                                                    \"get\"\n                                                ],\n                                                \"query\": [\n                                                    {\n                                                        \"key\": \"id\",\n                                                        \"value\": \"1234\",\n                                                        \"description\": \"Optional. The user's ID.\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"status\": \"OK\",\n                                        \"code\": 200,\n                                        \"_postman_previewlanguage\": \"json\",\n                                        \"header\": [\n                                            {\n                                                \"key\": \"Content-Type\",\n                                                \"name\": \"Content-Type\",\n                                                \"value\": \"application/json\",\n                                                \"description\": \"\",\n                                                \"type\": \"text\"\n                                            }\n                                        ],\n                                        \"cookie\": [],\n                                        \"responseTime\": null,\n                                        \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                        \"uid\": \"12345678-86447cb0-aeac-4371-a22f-9f6067fc4dd0\"\n                                    }\n                                ],\n                                \"uid\": \"12345678-bf6fd735-125e-486b-b7fb-9f0ae4a0bbc5\"\n                            }\n                        ],\n                        \"id\": \"a7046e3e-fb60-44fc-8e32-a4578b854628\",\n                        \"auth\": {\n                            \"type\": \"apikey\",\n                            \"apikey\": [\n                                {\n                                    \"key\": \"value\",\n                                    \"value\": \"XXX\",\n                                    \"type\": \"string\"\n                                },\n                                {\n                                    \"key\": \"key\",\n                                    \"value\": \"api-key\",\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"event\": [\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ]\n                                }\n                            },\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"type\": \"text/javascript\",\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ]\n                                }\n                            }\n                        ],\n                        \"uid\": \"12345678-a7046e3e-fb60-44fc-8e32-a4578b854628\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                        \"    console.log(response.json());\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"bb4a826b-1654-4f24-9ab1-d00e4fc2d743\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"bearer\",\n                                \"bearer\": [\n                                    {\n                                        \"key\": \"token\",\n                                        \"value\": \"TEST\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"GET\",\n                            \"header\": [\n                                {\n                                    \"key\": \"Accept\",\n                                    \"value\": \"application/vnd.example.v1+json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request?id=12345678\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ],\n                                \"query\": [\n                                    {\n                                        \"key\": \"id\",\n                                        \"value\": \"12345678\",\n                                        \"description\": \"The API's ID.\"\n                                    }\n                                ]\n                            },\n                            \"description\": \"This is a test API.\"\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"5f297469-80d7-4847-a3e2-f596f2e717d8\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Host\",\n                                            \"value\": \"postman-echo.com\"\n                                        },\n                                        {\n                                            \"key\": \"user-agent\",\n                                            \"value\": \"curl/7.88.1\"\n                                        },\n                                        {\n                                            \"key\": \"accept\",\n                                            \"value\": \"*/*\"\n                                        },\n                                        {\n                                            \"key\": \"content-type\",\n                                            \"value\": \"application/json\"\n                                        },\n                                        {\n                                            \"key\": \"content-length\",\n                                            \"value\": \"22\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n  \\\"field\\\": \\\"Value\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"date\",\n                                        \"value\": \"Thu, 07 Sep 2023 12:41:59 GMT\"\n                                    },\n                                    {\n                                        \"key\": \"content-type\",\n                                        \"value\": \"application/json; charset=utf-8\"\n                                    },\n                                    {\n                                        \"key\": \"content-length\",\n                                        \"value\": \"468\"\n                                    },\n                                    {\n                                        \"key\": \"etag\",\n                                        \"value\": \"W/\\\"1d4-JuAIw8ssoFCtGzk/UwITxaiSbrc\\\"\"\n                                    },\n                                    {\n                                        \"key\": \"set-cookie\",\n                                        \"value\": \"sails.sid=s%3A6p_NXpI3OZeGE35bI6i5Uq3XgHHxcsdJ.dQVpBE%2BJ9wHWainkqe6F6dkdv7UKoshSZY7sdZ5sbzo; Path=/ HttpOnly\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n  \\\"args\\\": {},\\n  \\\"data\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"files\\\": {},\\n  \\\"form\\\": {},\\n  \\\"headers\\\": {\\n    \\\"x-forwarded-proto\\\": \\\"https\\\",\\n    \\\"x-forwarded-port\\\": \\\"443\\\",\\n    \\\"host\\\": \\\"postman-echo.com\\\",\\n    \\\"x-amzn-trace-id\\\": \\\"Root=1-64f9c517-36db304817c774d740619baa\\\",\\n    \\\"content-length\\\": \\\"22\\\",\\n    \\\"user-agent\\\": \\\"curl/7.88.1\\\",\\n    \\\"accept\\\": \\\"*/*\\\",\\n    \\\"content-type\\\": \\\"application/json\\\"\\n  },\\n  \\\"json\\\": {\\n    \\\"field\\\": \\\"Value\\\"\\n  },\\n  \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n}\\n\",\n                                \"uid\": \"12345678-5f297469-80d7-4847-a3e2-f596f2e717d8\"\n                            },\n                            {\n                                \"id\": \"789df3cf-9362-40f7-a69e-4adde47d2bc8\",\n                                \"name\": \"Not Found\",\n                                \"originalRequest\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Accept\",\n                                            \"value\": \"application/vnd.example.v1+json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request?id=test-api\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ],\n                                        \"query\": [\n                                            {\n                                                \"key\": \"id\",\n                                                \"value\": \"test-api\"\n                                            }\n                                        ]\n                                    }\n                                },\n                                \"status\": \"Not Found\",\n                                \"code\": 404,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"title\\\": \\\"Not Found\\\",\\n    \\\"detail\\\": \\\"Requested API does not exist\\\",\\n    \\\"type\\\": \\\"about:blank\\\"\\n}\",\n                                \"uid\": \"12345678-789df3cf-9362-40f7-a69e-4adde47d2bc8\"\n                            }\n                        ],\n                        \"uid\": \"12345678-bb4a826b-1654-4f24-9ab1-d00e4fc2d743\"\n                    },\n                    {\n                        \"name\": \"Test B\",\n                        \"id\": \"3e2b5890-8fb9-4a73-bf7b-f0a161502513\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"PUT\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"description\\\": \\\"This is a test.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"c7ffac80-0ab7-45da-a966-10bf469936db\",\n                                \"name\": \"Test B\",\n                                \"originalRequest\": {\n                                    \"method\": \"PUT\",\n                                    \"header\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"name\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"firstName\\\": \\\"Test\\\",\\n    \\\"lastName\\\": \\\"User\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"http://api.getpostman.com/v1/request\",\n                                        \"protocol\": \"http\",\n                                        \"host\": [\n                                            \"api\",\n                                            \"getpostman\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"v1\",\n                                            \"request\"\n                                        ]\n                                    }\n                                },\n                                \"status\": \"OK\",\n                                \"code\": 200,\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"user\\\": \\\"test-user\\\"\\n}\",\n                                \"uid\": \"12345678-c7ffac80-0ab7-45da-a966-10bf469936db\"\n                            }\n                        ],\n                        \"uid\": \"12345678-3e2b5890-8fb9-4a73-bf7b-f0a161502513\"\n                    },\n                    {\n                        \"name\": \"Test C\",\n                        \"event\": [\n                            {\n                                \"listen\": \"test\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                        \"    pm.response.to.have.status(200);\",\n                                        \"});\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            },\n                            {\n                                \"listen\": \"prerequest\",\n                                \"script\": {\n                                    \"exec\": [\n                                        \"\"\n                                    ],\n                                    \"type\": \"text/javascript\"\n                                }\n                            }\n                        ],\n                        \"id\": \"98518f83-1da1-4d27-8253-432cc923dbae\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"auth\": {\n                                \"type\": \"apikey\",\n                                \"apikey\": [\n                                    {\n                                        \"key\": \"value\",\n                                        \"value\": \"XXX\",\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"key\": \"key\",\n                                        \"value\": \"api-key\",\n                                        \"type\": \"string\"\n                                    }\n                                ]\n                            },\n                            \"method\": \"POST\",\n                            \"header\": [],\n                            \"body\": {\n                                \"mode\": \"raw\",\n                                \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                \"options\": {\n                                    \"raw\": {\n                                        \"language\": \"json\"\n                                    }\n                                }\n                            },\n                            \"url\": {\n                                \"raw\": \"https://postman-echo.com/post\",\n                                \"protocol\": \"https\",\n                                \"host\": [\n                                    \"postman-echo\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"post\"\n                                ]\n                            }\n                        },\n                        \"response\": [\n                            {\n                                \"id\": \"bb3cb97c-619e-4c81-9a14-139efe81816c\",\n                                \"name\": \"Successful Response\",\n                                \"originalRequest\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"{\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\"\\n}\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"https://postman-echo.com/post\",\n                                        \"protocol\": \"https\",\n                                        \"host\": [\n                                            \"postman-echo\",\n                                            \"com\"\n                                        ],\n                                        \"path\": [\n                                            \"post\"\n                                        ]\n                                    }\n                                },\n                                \"_postman_previewlanguage\": \"json\",\n                                \"header\": [\n                                    {\n                                        \"key\": \"Content-Type\",\n                                        \"name\": \"Content-Type\",\n                                        \"value\": \"application/json\",\n                                        \"description\": \"\",\n                                        \"type\": \"text\"\n                                    }\n                                ],\n                                \"cookie\": [],\n                                \"responseTime\": null,\n                                \"body\": \"{\\n    \\\"id\\\": \\\"test-api\\\",\\n    \\\"name\\\": \\\"Test API\\\",\\n    \\\"description\\\": \\\"This is a test API.\\\",\\n    \\\"is_public\\\": false,\\n    \\\"created_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"updated_at\\\": \\\"2022-01-28T11:50:56.000Z\\\",\\n    \\\"performance\\\": {\\n        \\\"collection\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\",\\n        \\\"environment\\\": \\\"123e4567-e89b-12d3-a456-556642440000\\\"\\n    }\\n}\",\n                                \"uid\": \"12345678-bb3cb97c-619e-4c81-9a14-139efe81816c\"\n                            }\n                        ],\n                        \"uid\": \"12345678-98518f83-1da1-4d27-8253-432cc923dbae\"\n                    }\n                ],\n                \"id\": \"c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.variables.get(\\\"variable_key\\\");\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-c9a0e43c-6078-4fa0-8cfc-d4dc9e889817\"\n            },\n            {\n                \"name\": \"Folder 3\",\n                \"item\": [\n                    {\n                        \"name\": \"ID\",\n                        \"item\": [\n                            {\n                                \"name\": \"Request 3-A\",\n                                \"id\": \"a22f41d5-32bf-4830-8731-10ad18e88874\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"body\": {\n                                        \"mode\": \"raw\",\n                                        \"raw\": \"\",\n                                        \"options\": {\n                                            \"raw\": {\n                                                \"language\": \"json\"\n                                            }\n                                        }\n                                    },\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-a22f41d5-32bf-4830-8731-10ad18e88874\"\n                            }\n                        ],\n                        \"id\": \"07f106de-776e-4fd8-9fc1-dc72e4a06a00\",\n                        \"description\": \"Test folder user ID.\",\n                        \"uid\": \"12345678-07f106de-776e-4fd8-9fc1-dc72e4a06a00\"\n                    },\n                    {\n                        \"name\": \"User\",\n                        \"item\": [\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"69e1ed6c-9d7b-41cd-aff7-69a468cf8252\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"POST\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-69e1ed6c-9d7b-41cd-aff7-69a468cf8252\"\n                            },\n                            {\n                                \"name\": \"New Request\",\n                                \"id\": \"8b50cfc3-6af3-446e-a607-8d05e38e1ce9\",\n                                \"protocolProfileBehavior\": {\n                                    \"disableBodyPruning\": true\n                                },\n                                \"request\": {\n                                    \"method\": \"GET\",\n                                    \"header\": [],\n                                    \"url\": {\n                                        \"raw\": \"\"\n                                    }\n                                },\n                                \"response\": [],\n                                \"uid\": \"12345678-8b50cfc3-6af3-446e-a607-8d05e38e1ce9\"\n                            }\n                        ],\n                        \"id\": \"2c9de017-885f-4c1e-99bf-d10cd870fb0b\",\n                        \"description\": \"Test folder for user information.\",\n                        \"uid\": \"12345678-2c9de017-885f-4c1e-99bf-d10cd870fb0b\"\n                    },\n                    {\n                        \"name\": \"Test A\",\n                        \"id\": \"8b29623b-9c9c-4fed-ab9e-85f64524977b\",\n                        \"protocolProfileBehavior\": {\n                            \"disableBodyPruning\": true\n                        },\n                        \"request\": {\n                            \"method\": \"GET\",\n                            \"header\": [],\n                            \"url\": {\n                                \"raw\": \"http://api.getpostman.com/v1/request\",\n                                \"protocol\": \"http\",\n                                \"host\": [\n                                    \"api\",\n                                    \"getpostman\",\n                                    \"com\"\n                                ],\n                                \"path\": [\n                                    \"v1\",\n                                    \"request\"\n                                ]\n                            }\n                        },\n                        \"response\": [],\n                        \"uid\": \"12345678-8b29623b-9c9c-4fed-ab9e-85f64524977b\"\n                    }\n                ],\n                \"id\": \"7d1ea228-82fc-4887-833a-caf88d3182d5\",\n                \"description\": \"This is a test folder.\",\n                \"auth\": {\n                    \"type\": \"apikey\",\n                    \"apikey\": [\n                        {\n                            \"key\": \"value\",\n                            \"value\": \"XXX\",\n                            \"type\": \"string\"\n                        },\n                        {\n                            \"key\": \"key\",\n                            \"value\": \"x-api-key\",\n                            \"type\": \"string\"\n                        }\n                    ]\n                },\n                \"event\": [\n                    {\n                        \"listen\": \"prerequest\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.sendRequest(\\\"https://postman-echo.com/get\\\", function (err, response) {\",\n                                \"    console.log(response.json());\",\n                                \"});\"\n                            ]\n                        }\n                    },\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"type\": \"text/javascript\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ]\n                        }\n                    }\n                ],\n                \"uid\": \"12345678-7d1ea228-82fc-4887-833a-caf88d3182d5\"\n            },\n            {\n                \"name\": \"Test F\",\n                \"id\": \"ff460862-473c-41b8-8be4-a493041c3351\",\n                \"protocolProfileBehavior\": {\n                    \"disableBodyPruning\": true\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"header\": [],\n                    \"url\": {\n                        \"raw\": \"\"\n                    }\n                },\n                \"response\": [],\n                \"uid\": \"12345678-ff460862-473c-41b8-8be4-a493041c3351\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update part of a collection",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"{{collectionName}}\",\n            \"description\": \"{{collectionDescription}}\"\n        },\n        \"variable\": [\n            // Refer to the \"Variable List\" entry in the collection.json documentation (https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html). Also accepts \"variables\".\n        ],\n        \"auth\": {\n            // Refer to the \"Auth\" entry in the collection.json documentation (https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n        },\n        \"events\": [\n            // Refer to the \"Event List\" entry in the collection.json documentation (https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html).\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections/{{collectionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"{{collectionId}}"
							]
						},
						"description": "Updates specific collection information, such as its name, events, or its variables. For more information about the `auth`, `variable`, and `events` properties, refer to the [Postman Collection Format documentation](https://schema.postman.com/collection/json/v2.1.0/draft-07/docs/index.html):\n\n- For `variable`, refer to the **Variable List** entry. Also accepts `variables`.\n    \n- For `auth`, refer to the **Auth** entry.\n    \n- For `events`, refer to the **Event List** entry."
					},
					"response": [
						{
							"name": "Update Info",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"
						},
						{
							"name": "Update Variables",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"variable\": [\n            {\n                \"key\": \"userId\",\n                \"value\": 12345678,\n                \"type\": \"integer\",\n                \"disabled\": true\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"
						},
						{
							"name": "Update Events",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                },\n                \"disabled\": false\n            },\n            {\n                \"listen\": \"test\",\n                \"script\": {\n                    \"id\": \"28dc4f71-73bd-49cb-a6bd-8b41a06a3b36\",\n                    \"type\": \"text/javascript\",\n                    \"exec\": [\n                        \"\"\n                    ]\n                },\n                \"disabled\": true\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"
						},
						{
							"name": "Update Auth",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"auth\": {\n            \"type\": \"apikey\",\n            \"apikey\": [\n                {\n                    \"key\": \"value\",\n                    \"value\": \"{{apiKey}}\"\n                },\n                {\n                    \"key\": \"key\",\n                    \"value\": \"api-key\"\n                },\n                {\n                    \"key\": \"in\",\n                    \"value\": \"header\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection v2\",\n        \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n    }\n}"
						},
						{
							"name": "Invalid auth Type",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"auth\": {\n            \"type\": \"apikey1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid parameters: ('apikey') for key: 'collection.auth.type'\"\n    }\n}"
						},
						{
							"name": "Invalid variable Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"variables\": [\n            {\n                \"key\": \"userId\",\n                \"type\": \"integer\",\n                \"value\": 12345678,\n                \"disabled\": true,\n                \"property\": \"test\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid parameters: ('property') for key: 'collection.variables'\"\n    }\n}"
						},
						{
							"name": "Invalid events Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\",\n                    \"property\": \"test\"\n                },\n                \"disabled\": false\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid parameters: ('property') for key: 'collection.events.script'\"\n    }\n}"
						},
						{
							"name": "Missing variable Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"variable\": [\n            {\n                \"key\": \"userId\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Parameters required: ('value') for key: 'collection.variables'\"\n    }\n}"
						},
						{
							"name": "Missing info Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"'info' key is mandatory when 'collection' is empty.\",\n        \"details\": {\n            \"param\": \"info\"\n        }\n    }\n}"
						},
						{
							"name": "Missing events Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"events\": [\n            {\n                \"listen\": \"prerequest\",\n                \"script\": {\n                    \"id\": \"e74ce0d0-5acd-44b6-a3ae-95f617c1546e\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Parameters required: ('type', 'exec') for key: 'collection.events.script'\"\n    }\n}"
						},
						{
							"name": "Missing auth Parameter",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"auth\": {\n            \"type\": \"apikey\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The key 'apikey' must be present in 'collection.auth' when 'type' is 'apikey'.\",\n        \"details\": {\n            \"param\": \"apikey\"\n        }\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection v2\",\n            \"description\": \"This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							],
							"query": [
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter results by collections that match the given name.",
									"disabled": true
								},
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "The maximum number of rows to return in the response.",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "The zero-based offset of the first item to return.",
									"disabled": true
								}
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections.\n\n**Note:**\n\nFiltering with the `name` parameter when you also pass the `limit` and `offset` parameters is not supported."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        },\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        {\n            \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"name\": \"Postman Echo\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2021-04-11T09:18:26.000Z\",\n            \"updatedAt\": \"2022-05-01T15:29:32.000Z\",\n            \"uid\": \"12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Filter by name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?name=Test Collection",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "name",
											"value": "Test Collection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Filter by Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Response with Pagination",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?limit=3&offset=0",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "limit",
											"value": "3"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        },\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        {\n            \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"name\": \"Postman Echo\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2021-04-11T09:18:26.000Z\",\n            \"updatedAt\": \"2022-05-01T15:29:32.000Z\",\n            \"uid\": \"12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"isPublic\": true\n        }\n    ],\n    \"meta\": {\n        \"total\": 30,\n        \"offset\": 0,\n        \"limit\": 3\n    }\n}"
						},
						{
							"name": "Invalid Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace=12345",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "12345"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": []\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Collections** endpoints enable you to manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/)."
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Resolve a comment thread",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments-resolutions/{{threadId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments-resolutions",
								"{{threadId}}"
							]
						},
						"description": "Resolves a comment and any associated replies. On success, this returns an HTTP `204 No Content` response.\n\nComment thread IDs return in the GET comments response for [APIs](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-2103ea20-f7de-4628-90e6-b823b3084a52), [collections](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-a6582e0a-9382-4760-8b91-53a8aa6cb8d7), and [collection items](https://www.postman.com/postman/workspace/postman-public-workspace/folder/12959542-efeda219-66e1-474c-a83b-253d15723bf7)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/comments-resolutions/34567",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"comments-resolutions",
										"34567"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/comments-resolutions/34567",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"comments-resolutions",
										"34567"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401,\n    \"instance\": \"/comments-resolutions\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/comments-resolutions/34567",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"comments-resolutions",
										"34567"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404,\n    \"instance\": \"/comments-resolutions\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/comments-resolutions/34567",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"comments-resolutions",
										"34567"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500,\n    \"instance\": \"/comments-resolutions\"\n}"
						}
					]
				}
			],
			"description": "The **Comments** endpoints enable you to manage comments on an API element. You can use [comments](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to collaborate and discuss your work with your teammates in Postman."
		},
		{
			"name": "Environments",
			"item": [
				{
					"name": "Forks",
					"item": [
						{
							"name": "Get an environment's forks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/{{environmentUid}}/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										"{{environmentUid}}",
										"forks"
									],
									"query": [
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "<string>",
											"description": "Sort results in ascending (`asc`) or descending (`desc`) order.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. This value defaults to 10.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "createdAt",
											"description": "Sort the results by the date and time of creation.",
											"disabled": true
										}
									]
								},
								"description": "Gets all of an environment's forked environments."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"forkName\": \"Test Fork\",\n            \"createdBy\": \"12345678\",\n            \"forkId\": \"12345678-0fcea3ba-abcf-49c3-9f48-669c208fef25\",\n            \"createdAt\": \"2024-01-30T16:42:22.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork #2\",\n            \"createdBy\": \"12345678\",\n            \"forkId\": \"12345678-b7f0ded7-d614-4f74-baef-1006f6ab8a7b\",\n            \"createdAt\": \"2024-01-30T16:39:25.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"My fork\",\n            \"createdBy\": \"87654321\",\n            \"forkId\": \"87654321-ed71be39-27b8-4886-bb74-77cb047d4fa6\",\n            \"createdAt\": \"2024-01-30T16:39:17.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Alex Cruz's fork\",\n            \"createdBy\": \"87654321\",\n            \"forkId\": \"872905-c439ede2-4c40-4f25-82b2-a1a1219ead94\",\n            \"createdAt\": \"2024-01-30T16:39:09.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Taylor Lee's Fork\",\n            \"createdBy\": \"12345678\",\n            \"forkId\": \"12345678-65c0a895-1428-45ea-bff0-f0f48e87f044\",\n            \"createdAt\": \"2024-01-30T16:39:02.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Test 1\",\n            \"createdBy\": \"87654321\",\n            \"forkId\": \"87654321-3ad67987-91c4-4bd6-b624-348a5ea14e69\",\n            \"createdAt\": \"2024-01-30T16:38:52.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Test #2\",\n            \"createdBy\": \"56781234\",\n            \"forkId\": \"56781234-c7e91b68-c39e-4735-a103-da47c98a5f01\",\n            \"createdAt\": \"2024-01-30T16:38:27.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Test Fork #3\",\n            \"createdBy\": \"12345678\",\n            \"forkId\": \"12345678-00dcac5b-e81a-4250-bb9a-7878df2a7a03\",\n            \"createdAt\": \"2024-01-30T16:38:18.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Alex Cruz's fork 1\",\n            \"createdBy\": \"87654321\",\n            \"forkId\": \"87654321-6dd33d0c-36eb-4542-a5f2-bb2a70303f63\",\n            \"createdAt\": \"2024-01-30T16:38:10.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Test 2\",\n            \"createdBy\": \"56781234\",\n            \"forkId\": \"56781234-27eed2fc-8f05-4083-b8d4-55074bc49631\",\n            \"createdAt\": \"2024-01-30T16:38:01.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"Taylor Lee's Fork 2\",\n            \"createdBy\": \"12345678\",\n            \"forkId\": \"12345678-f96f3b83-3fc4-49a6-bd0b-6bf4162ac9f9\",\n            \"createdAt\": \"2024-01-30T16:37:51.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        },\n        {\n            \"forkName\": \"My fork 3\",\n            \"createdBy\": \"56781234\",\n            \"forkId\": \"56781234-69068628-c150-4b0e-a191-1e58a6be46c6\",\n            \"createdAt\": \"2024-01-30T16:24:19.000Z\",\n            \"updatedAt\": \"2024-03-21T15:51:42.000Z\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"NTg3NjgtNTg3NTctNTg3NjgtNTAtY3JlYXRlZEF0LWRlc2MtZmFsc2UtLS0xLTEtMTItW1s1ODc2OCw1ODc1N11d\",\n        \"total\": 12\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"detail\": \"We could not find the environment you are looking for\",\n    \"type\": \"https://api.postman.com/problems/notFound\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\"\n}"
								}
							]
						},
						{
							"name": "Create a fork",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"forkName\": \"{{forkLabel}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/{{environmentUid}}/forks?workspace=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										"{{environmentUid}}",
										"forks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "<string>",
											"description": "(Required) The workspace ID in which to fork the environment."
										}
									]
								},
								"description": "Creates a [fork](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/) from an existing environment into a workspace. Include the following properties in the request body:\n\n- `forkName` — A **string** value that contains the forked environment's [label](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/#edit-a-forks-name-or-label)."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forkName\": \"My fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"forkName\": \"Test Fork\",\n        \"uid\": \"12345678-0fcea3ba-abcf-49c3-9f48-669c208fef25\",\n        \"name\": \"Testing Environment\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forkName\": \"My fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"\",\n    \"detail\": \"Query parameter 'workspaceId' is missing\",\n    \"status\": 400\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forkName\": \"My fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forkName\": \"My fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"detail\": \"We could not find the environment you are looking for\",\n    \"type\": \"https://api.postman.com/problems/notFound\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"forkName\": \"My fork\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/forks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"forks"
											],
											"query": [
												{
													"key": "workspace",
													"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\"\n}"
								}
							]
						},
						{
							"name": "Pull source changes",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": \"{{environmentUid}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/{{environmentUid}}/pulls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										"{{environmentUid}}",
										"pulls"
									]
								},
								"description": "[Pulls](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/#pull-updates-from-a-parent-element) the changes from a parent (source) environment into the forked environment. Include the following in the request body:\n\n- `source` — A **string** value that contains the unique ID of the environment to pull data from."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"pulls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"uid\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"pulls"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"The environment Id is not a forked environment.\",\n    \"detail\": {}\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"pulls"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"pulls"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"detail\": \"We could not find the environment you are looking for\",\n    \"type\": \"https://api.postman.com/problems/notFound\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/pulls",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"pulls"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\"\n}"
								}
							]
						},
						{
							"name": "Merge a fork",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": \"{{environmentUid}}\",\n    \"deleteSource\": {{boolean}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/{{environmentUid}}/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										"{{environmentUid}}",
										"merges"
									]
								},
								"description": "[Merges](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-elements/#merge-changes-from-a-fork) a forked environment back into its parent environment. Include the following in the request body:\n\n- `source` — A **string** value that contains the source environment's unique ID to merge data from.\n- `deleteSource` — A **boolean** value that, if true, deletes the forked environment when it merges."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\",\n    \"deleteSource\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"merges"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"uid\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\",\n    \"deleteSource\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"merges"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"The environment Id is not a forked environment.\",\n    \"detail\": {}\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\",\n    \"deleteSource\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"merges"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\",\n    \"deleteSource\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"merges"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"detail\": \"We could not find the environment you are looking for\",\n    \"type\": \"https://api.postman.com/problems/notFound\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source\": \"12345678-d9c7dc8f-904e-4bba-99b5-4d490aae1957\",\n    \"deleteSource\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e/merges",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
												"merges"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage environment [forks](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/forking-entities/)."
				},
				{
					"name": "Get an environment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments/{{environmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Gets information about an environment."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2020-11-05T13:59:22.000Z\",\n        \"updatedAt\": \"2020-11-05T13:59:23.000Z\",\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ],\n        \"isPublic\": false\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the environment you are looking for\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete an environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments/{{environmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Deletes an environment."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified environment does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create an environment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": \"{{boolean}}\",\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environments?workspace=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID in which to create the environment.\n\nIf you do not include this query parameter, the system creates the environment in your \"My Workspace\" workspace."
								}
							]
						},
						"description": "Creates an environment. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the environment's name.\n    \n\nYou can also include the following properties:\n\n- `values` — An **array of objects** that contains the following:\n    \n    - `key` — A **string** value that contains the variable's name.\n        \n    - `value` — A **string** value that contains the variable's value.\n        \n    - `enabled` — A **boolean** value that, if true, enable the variable.\n        \n    - `type` — A **string** value that contains the variable's type. One of: `secret`, `default`, or `any`.\n        \n\n**Note:**\n\nIf you do not include the `workspace` query parameter, the system creates the environment in your \"My Workspace\" workspace."
					},
					"response": [
						{
							"name": "Create Environment in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Create an Environment in Default Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied environment.\",\n        \"details\": [\n            \"environment: must have required property 'name'\"\n        ]\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not permitted to perform the action.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test Environment\",\n        \"values\": [\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            },\n            {\n                \"key\": \"variable_1\",\n                \"value\": \"The variable_1 value.\",\n                \"enabled\": false,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update an environment",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"{{operationType}}\", // one of: \"add\", \"replace\", or \"remove\"\n        \"path\": \"{{environmentPath}}\", // one of: \"/name\"; \"/values/#\"; \"/values/#/{value}\"\n        \"value\": {{value}} // one of: \"string\", \"number\", \"boolean\", or \"object\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environments/:environmentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments",
								":environmentId"
							],
							"variable": [
								{
									"key": "environmentId",
									"value": "{{environmentId}}",
									"description": "The environment's ID."
								}
							]
						},
						"description": "Updates specific environment properties, such as its name and variables. Include the following properties in the request body:\n\n- `op` — A **string** value that contains the `add`, `remove`, or `replace` operation.\n    \n- `path` — A **string** value that contains a [JSON Pointer syntax](https://datatracker.ietf.org/doc/html/rfc6901) that indicates the entry to modify:\n    \n    - `/name` — Modifies the environment's name.\n        \n    - `/values/#` — Inserts or removes an entry at the given entry ID. The first record begins at the `0` value.\n        \n    - `/values/#/{value}` — Updates a specific variable property, where:\n        \n        - `#` — The entry ID.\n            \n        - `{value}` — The variable property to update. Accepts `key`, `value`, `type`, and `enable`.\n            \n- `value` — A **string**, **number**, **boolean**, or **object** that contains the field's new value. This value type varies, based on the operation:\n    \n    - `op: add` — An **object** containing the `key`, `value`, `type`, and `enabled` (boolean) properties.\n        \n    - `op: replace` — A **string, number**, or **boolean** value.\n        \n    - `op: remove` — Omit the `value` property from the request body.\n        \n\n**Note:**\n\n- The `type` field accepts the following values:\n    \n    - `secret` — The variable value is masked.\n        \n    - `default` — The variable value is visible in plain text."
					},
					"response": [
						{
							"name": "Update Environment Name",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/name\",\n        \"value\": \"Test API Environment\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:56:19.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"secret\",\n                \"enabled\": true\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Add Variable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/1\",\n        \"value\": {\n            \"key\": \"collectionId\",\n            \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:56:19.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"secret\",\n                \"enabled\": true\n            },\n            {\n                \"key\": \"collectionId\",\n                \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"type\": \"default\",\n                \"enabled\": true\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Enable Variable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/values/0/enabled\",\n        \"value\": true\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:54:02.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"secret\",\n                \"enabled\": true\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Update Variable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/values/0/key\",\n        \"value\": \"x-api-key\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/values/0/enabled\",\n        \"value\": false\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/values/0/value\",\n        \"value\": \"{{x-api-key}}\"\n    },\n    {\n        \"op\": \"replace\",\n        \"path\": \"/values/0/type\",\n        \"value\": \"secret\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:54:02.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"secret\",\n                \"enabled\": false\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Remove Variable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/0\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:16:18.000Z\",\n        \"updatedAt\": \"2025-03-10T15:17:04.000Z\",\n        \"values\": [],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Remove Multiple Variables",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/4\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/3\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/2\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/1\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:54:02.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"default\",\n                \"enabled\": true\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Remove and Add Variable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/1\"\n    },\n    {\n        \"op\": \"remove\",\n        \"path\": \"/values/0\"\n    },\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/0\",\n        \"value\": {\n            \"key\": \"x-api-key\",\n            \"value\": \"{{x-api-key}}\",\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test API Environment\",\n        \"owner\": \"12345678\",\n        \"createdAt\": \"2025-03-10T15:37:00.000Z\",\n        \"updatedAt\": \"2025-03-10T15:54:02.000Z\",\n        \"values\": [\n            {\n                \"key\": \"x-api-key\",\n                \"value\": \"{{x-api-key}}\",\n                \"type\": \"default\",\n                \"enabled\": true\n            }\n        ],\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Invalid PATCH Body",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"name\": \"Test API Environment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Patch sequence must be an array\"\n}"
						},
						{
							"name": "Empty value Property",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/2\",\n        \"value\": {}\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Patch operations with empty value are not supported\"\n}"
						},
						{
							"name": "Invalid value Type",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/1\",\n        \"value\": {\n            \"key\": \"userId\",\n            \"value\": 12345678,\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": [\n        \"/values/1/value: must be a string\"\n    ]\n}"
						},
						{
							"name": "Invalid path",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/variable/1\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Invalid path in JSON Patch operation\",\n    \"instance\": \"/environments/5daabc50-8451-43f6-922d-96b403b4f28e\"\n}"
						},
						{
							"name": "path Doesn't Exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"replace\",\n        \"path\": \"/variable/1\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Cannot perform the operation at a path that does not exist\",\n    \"instance\": \"/environments/5daabc50-8451-43f6-922d-96b403b4f28e\"\n}"
						},
						{
							"name": "Invalid Environment ID",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/2\",\n        \"value\": {\n            \"key\": \"x-api-key\",\n            \"value\": \"{{x-api-key}}\",\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Invalid Environment ID\",\n    \"instance\": \"/environments/5daabc50-8451-43f6\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/2\",\n        \"value\": {\n            \"key\": \"x-api-key\",\n            \"value\": \"{{x-api-key}}\",\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"status\": 403,\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"instance\": \"/environments/5daabc50-8451-43f6-922d-96b403b4f28e\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/values/2\",\n        \"value\": {\n            \"key\": \"x-api-key\",\n            \"value\": \"{{x-api-key}}\",\n            \"type\": \"default\",\n            \"enabled\": true\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"status\": 404,\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"instance\": \"/environments/5daabc50-8451-43f6-922d-96b403b4f28e\"\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/:environmentId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										":environmentId"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "5daabc50-8451-43f6-922d-96b403b4f28e"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Replace an environment's data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": {\n        \"name\": \"{{environmentName}}\",\n        \"values\": [\n            {\n                \"key\": \"{{environmentVariableName}}\",\n                \"value\": \"{{environmentVariableValue}}\",\n                \"enabled\": {{boolean}},\n                \"type\": \"{{environmentType}}\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environments/{{environmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments",
								"{{environmentId}}"
							]
						},
						"description": "Replaces all the contents of an environment with the given information. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the environment's name.\n    \n- `values` — An **array of objects** that contains the following:\n    \n    - `key` — A **string** value that contains the variable's key (name).\n        \n    - `value` — A **string** value that contains the variable's value.\n        \n    - `enabled` — A **boolean** value that, if true, enable the variable.\n        \n    - `type` — A **string** value that contains the variable's type. One of:\n        \n        - `secret` — The variable value is masked.\n            \n        - `default` — The variable value is visible in plain text."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test A Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Remove Variables",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"values\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environment\": {\n        \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test A Environment\",\n        \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Invalid type: null (expected object) at environment.values.0\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Test A Environment\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"variable_a\",\n                \"value\": \"The variable_a value.\",\n                \"enabled\": true,\n                \"type\": \"default\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/12345678-5daabc50-8451-43f6-922d-96b403b4f28e",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"12345678-5daabc50-8451-43f6-922d-96b403b4f28e"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all environments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about all of your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        },\n        {\n            \"id\": \"7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"name\": \"Environment Scanner\",\n            \"createdAt\": \"2020-02-04T19:34:23.000Z\",\n            \"updatedAt\": \"2020-08-12T13:34:06.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n            \"isPublic\": false\n        }\n    ]\n}"
						},
						{
							"name": "Filter by Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environments\": [\n       {\n            \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n            \"updatedAt\": \"2020-12-04T14:13:40.000Z\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"isPublic\": false\n        }\n    ]\n}"
						},
						{
							"name": "Invalid Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"environments\": []\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Environments** endpoints enable you to manage your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/)."
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import an OpenAPI definition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"{{APIspecificationType}}\",\n    \"input\": {{APIspecification}},\n    \"options\": {\n        \"{{optionName}}\": \"{{optionvalue}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/import/openapi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"import",
								"openapi"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "The workspace ID in which to import the OpenAPI specification.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).\n\nInclude the following properties in the request body:\n\n- `type` — A **string** value that contains the definition's type. One of:\n    \n    - `string`\n        \n    - `json`\n        \n    - `file`\n        \n- `input` — The OpenAPI definition, based on the `type` value:\n    \n    - For `string`, the stringified OpenAPI definition.\n        \n    - For `json`, the definition's JSON object.\n        \n    - For `file`, a definition file. To import a file, the request body must be a `form-data` request and include the `type` key with the `file` value and Content-Type.\n        \n\nYou can include the following additional properties in the request body:\n\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI to Postman Collection Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). These properties are case-sensitive.\n    \n\nFor more information, refer to the collection's examples.\n\n**Note:**\n\nThe Postman web app does not support the `file` input method type."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Import an OpenAPI Definition to a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Import an OpenAPI Definition with Options",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"options\": {\n        \"folderStrategy\": \"Path\",\n        \"disableOptionalParameters\": true,\n        \"exampleParametersResolution\": \"Schema\"\n    },\n    \"input\": {\n        \"openapi\": \"3.0.0\",\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Import a Stringified JSON",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"string\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Import a Stringified YAML",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"string\",\n    \"input\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n- url: http://locahost:3000\\npaths:\\n  \\\"/user\\\":\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      parameters:\\n      - name: id\\n        in: query\\n        required: true\\n        description: The user's ID.\\n        example: 1234\\n        schema:\\n          type: integer\\n          format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\ncomponents:\\n  schemas:\\n    User:\\n      type: object\\n      required:\\n      - id\\n      - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int64\\n        name:\\n          type: string\\n        tag:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n      - code\\n      - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Import a File",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "file",
											"description": "Required. The `file` type value.",
											"type": "text"
										},
										{
											"key": "input",
											"contentType": "",
											"description": "Required. A file containing a OpenAPI specification file and the applicable Content-Type.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
						},
						{
							"name": "Invalid Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Missing Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
						},
						{
							"name": "Unsupported OpenAPI Version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"string\",\n    \"input\": \"openapi: 3.2.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n- url: http://locahost:3000\\npaths:\\n  \\\"/user\\\":\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      parameters:\\n      - name: id\\n        in: query\\n        required: true\\n        description: The user's ID.\\n        example: 1234\\n        schema:\\n          type: integer\\n          format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\ncomponents:\\n  schemas:\\n    User:\\n      type: object\\n      required:\\n      - id\\n      - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int64\\n        name:\\n          type: string\\n        tag:\\n          type: string\\n    Error:\\n      type: object\\n      required:\\n      - code\\n      - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"userInputError\",\n        \"message\": \"Unsupported OpenAPI version: 3.2.0. Postman API only supports versions 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.1.0\"\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidSchemaError\",\n        \"message\": \"Specification must contain a semantic version number of the OAS specification\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"json\",\n    \"input\": {\n        \"info\": {\n            \"version\": \"1.0.0\",\n            \"title\": \"Test API\"\n        },\n        \"servers\": [\n            {\n                \"url\": \"http://locahost:3000\"\n            }\n        ],\n        \"paths\": {\n            \"/user\": {\n                \"get\": {\n                    \"summary\": \"List all users\",\n                    \"operationId\": \"listUser\",\n                    \"parameters\": [\n                        {\n                            \"name\": \"id\",\n                            \"in\": \"query\",\n                            \"required\": true,\n                            \"description\": \"The user's ID.\",\n                            \"example\": 1234,\n                            \"schema\": {\n                                \"type\": \"integer\",\n                                \"format\": \"int32\"\n                            }\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"Information about the user.\",\n                            \"headers\": {\n                                \"x-next\": {\n                                    \"description\": \"A link to the next page of responses.\",\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"components\": {\n            \"schemas\": {\n                \"User\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"id\",\n                        \"name\"\n                    ],\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Error\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"code\",\n                        \"message\"\n                    ],\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/import/openapi",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Import** endpoints enable you to manage [importing and exporting](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/) Postman data.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Mocks",
			"item": [
				{
					"name": "Call Logs",
					"item": [
						{
							"name": "Get a mock server's call logs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/call-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"call-logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response. This value defaults to 100.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results. To view the next response, use the `nextCursor` value for this parameter.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "<string>",
											"description": "Return only results created until this given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be earlier than the `since` value.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "<string>",
											"description": "Return only results created since the given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be later than the `until` value.",
											"disabled": true
										},
										{
											"key": "responseStatusCode",
											"value": "<number>",
											"description": "Return only call logs that match the given HTTP response status code.",
											"disabled": true
										},
										{
											"key": "responseType",
											"value": "<string>",
											"description": "Return only call logs that match the given response type. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestMethod",
											"value": "<string>",
											"description": "Return only call logs that match the given HTTP method. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "requestPath",
											"value": "<string>",
											"description": "Return only call logs that match the given request path. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "servedAt",
											"description": "Sort the results by the given value. If you use this query parameter, you must also use the `direction` parameter.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "<string>",
											"description": "Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the `sort` parameter.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "Include call log records with header and body data. This query parameter accepts the `request.headers`, `request.body`, `response.headers`, and `response.body` values.\n\nFor multiple include types, comma-separate each value.",
											"disabled": true
										}
									]
								},
								"description": "Gets a mock server's call logs. You can get a maximum of 6.5MB of call logs or a total of 100 call logs, whichever limit is met first in one API call.\n\nCall logs contain exchanged request and response data made to mock servers. The logs provide visibility into how the mock servers are being used. You can log data to debug, test, analyze, and more, depending upon the use case.\n\n**Note:**\n\nCall logs have a retention period based on your [Postman plan](https://www.postman.com/pricing/#mock-calls). For more information, see [this article](https://support.postman.com/hc/en-us/articles/21219973964951-I-can-t-see-my-mock-server-logs-history) in the [Postman Support Center](https://support.postman.com/)."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by Limit",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"call-logs\": [\n        {\n            \"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n            \"responseName\": \"Double check your method and the request path and try again.\",\n            \"servedAt\": \"2022-01-17T06:19:30.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"error\",\n                \"statusCode\": 404\n            }\n        },\n        {\n            \"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n            \"responseName\": \"Bad request\",\n            \"servedAt\": \"2022-01-17T06:19:22.000Z\",\n            \"request\": {\n                \"method\": \"POST\",\n                \"path\": \"/animals\"\n            },\n            \"response\": {\n                \"type\": \"success\",\n                \"statusCode\": 400\n            }\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==\"\n    }\n}"
								},
								{
									"name": "Filter by Cursor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?cursor=eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "cursor",
													"value": "eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ=="
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by a Date Range",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?until=2022-01-20T06:19:22.000Z&since=2022-01-17T06:19:22.000Z",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "until",
													"value": "2022-01-20T06:19:22.000Z"
												},
												{
													"key": "since",
													"value": "2022-01-17T06:19:22.000Z"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by Date Since",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?since=2022-01-17T06:19:16.000Z",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "since",
													"value": "2022-01-17T06:19:16.000Z"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by responseStatusCode",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseStatusCode=200",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "responseStatusCode",
													"value": "200"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by responseType",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?responseType=success",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "responseType",
													"value": "success"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by requestMethod",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestMethod=post",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "requestMethod",
													"value": "post"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by requestPath",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?requestPath=/animals?type=Dog",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "requestPath",
													"value": "/animals?type=Dog"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Sort by servedAt",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?sort=servedAt&direction=asc",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "sort",
													"value": "servedAt"
												},
												{
													"key": "direction",
													"value": "asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\"\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Filter by Header and Body Data",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?include=request.headers,request.body,response.headers,response.body",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "include",
													"value": "request.headers,request.body,response.headers,response.body"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n\t\"call-logs\": [\n\t\t{\n\t\t\t\"id\": \"c4505a1e-7261-497c-91ff-db4bd51351a6-9545\",\n\t\t\t\"responseName\": \"Double check your method and the request path and try again.\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:30.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"50\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"error\",\n\t\t\t\t\"statusCode\": 404,\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\\"error\\\":{\\\"name\\\":\\\"mockRequestNotFoundError\\\",\\\"message\\\":\\\"Double check your method and the request path and try again.\\\"}}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"0f63f54d-665e-436a-95b4-c1302d7685a9-3925\",\n\t\t\t\"responseName\": \"Bad request\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:22.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"69\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 400,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Malformed request. You need to send gender as part of the request.\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"adab0d30-5c38-43bf-af90-4119925138e2-3795\",\n\t\t\t\"responseName\": \"Successful addition of animals to the store\",\n\t\t\t\"servedAt\": \"2022-01-17T06:19:16.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-length\",\n\t\t\t\t\t\t\"value\": \"88\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"x-mock-match-request-body\",\n\t\t\t\t\t\t\"value\": \"true\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"key\": \"content-type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"mode\": \"raw\",\n\t\t\t\t\t\"data\": \"{\\\"type\\\":\\\"hamster\\\",\\\"breed\\\":\\\"Syrian Hamster\\\",\\\"age\\\":\\\"1 month\\\",\\\"gender\\\":\\\"male\\\"}\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"{\\n\\t\\\"message\\\": \\\"Animal added successfully to the store\\\"\\n}\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468\",\n\t\t\t\"responseName\": \"Get filtered list of Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:26.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals?type=dog\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"a5330463-26e1-4812-a962-e44b569a2054-9894\",\n\t\t\t\"responseName\": \"Get Animals\",\n\t\t\t\"servedAt\": \"2022-01-17T06:18:06.000Z\",\n\t\t\t\"request\": {\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"path\": \"/animals\",\n\t\t\t\t\"headers\": [],\n\t\t\t\t\"body\": {}\n\t\t\t},\n\t\t\t\"response\": {\n\t\t\t\t\"type\": \"success\",\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\t\"content\": \"\",\n\t\t\t\t\t\t\t\"type\": \"text/plain\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"key\": \"Content-Type\",\n\t\t\t\t\t\t\"value\": \"application/json\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"body\": {\n\t\t\t\t\t\"data\": \"[\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"German Sheperd\\\",\\n\\t\\t\\\"age\\\": \\\"6 months\\\",\\n\\t\\t\\\"gender\\\": \\\"male\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"dog\\\",\\n\\t\\t\\\"breed\\\": \\\"Bulldog\\\",\\n\\t\\t\\\"age\\\": \\\"1 year\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"type\\\": \\\"cat\\\",\\n\\t\\t\\\"breed\\\": \\\"Persian cat\\\",\\n\\t\\t\\\"age\\\": \\\"3 months\\\",\\n\\t\\t\\\"gender\\\": \\\"female\\\"\\n\\t}\\n]\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"nextCursor\": null\n\t}\n}"
								},
								{
									"name": "Log Retention Period Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs?until=2024-06-21T14:39:21.438Z&since=2024-01-21T14:39:21.438Z",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											],
											"query": [
												{
													"key": "until",
													"value": "2024-06-21T14:39:21.438Z"
												},
												{
													"key": "since",
													"value": "2024-01-21T14:39:21.438Z"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"Invalid value for parameter: since. Cannot view logs beyond the call log retention period based on your plan i.e. 30 days.\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/call-logs",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"call-logs"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 10 Jun 2022 19:10:52 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=7b522a87c70459d8"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=08e5bf465e218638"
										},
										{
											"key": "ETag",
											"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage [mock server call logs](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/#viewing-mock-calls)."
				},
				{
					"name": "Server Responses",
					"item": [
						{
							"name": "Get a server response",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"server-responses",
										"{{serverResponseId}}"
									]
								},
								"description": "Gets information about a server response."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Get all server responses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/server-responses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"server-responses"
									]
								},
								"description": "Gets all of a mock server's server responses."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"createdAt\": \"2022-08-02T14:57:44.000Z\",\n        \"updatedAt\": \"2022-08-02T14:57:44.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n]"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Create a server response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": {{statusCode}},\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/server-responses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"server-responses"
									]
								},
								"description": "Creates a server response. Server responses let you simulate 5xx server-level responses, such as 500 or 503.\n\nServer-level responses are agnostic to application-level logic. Server responses let you simulate this behavior on a mock server. You do not need to define each error for all exposed paths on the mock server.\n\nIf you set a server response as active, then all the calls to the mock server return with that active server response.\n\n**Note:**\n\nYou can create multiple server responses for a mock server, but only one mock server can be set as active.\n\nYou must include the following properties in the request body:\n\n- `name` — A **string** value that contains the server response's name.\n    \n- `statusCode` — An **integer** value that contains the server stub's 5xx response code. This property only accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n    \n\nYou can also include the following optional properties:\n\n- `headers` — An **array of objects** that contains the server stub's headers:\n    \n    - `key` — A **string** value that contains the header's key.\n        \n    - `value` — A **string** value that contains the header key's value. This value defines the corresponding value for the header key.\n        \n- `body` — A **string** value that contains a response body that returns when you call the mock server."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\",\n        \"statusCode\": 500,\n        \"header\": [\n            {\n                \"key\": \"Content-Type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:08:03.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Internal Server Error\",\n    \"statusCode\": 500,\n    \"headers\": [],\n    \"language\": null,\n    \"body\": \"{\\n    \\\"message\\\": \\\"Something went wrong; try again later.\\\"\\n}\",\n    \"createdBy\": \"20891195\",\n    \"updatedBy\": \"20891195\",\n    \"mock\": \"32cd624d-9986-4f20-9048-89252f722269\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"statusCode\"\n            ]\n        }\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Internal Server Error\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Update a server response",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serverResponse\": {\n        \"name\": \"{{serverStubName}}\",\n        \"statusCode\": \"{{statusCode}}\",\n        \"headers\": [\n            {\n                \"key\": \"{{headerKey}}\",\n                \"value\": \"{{headerValue}}\"\n            }\n        ],\n        \"body\": \"{{serverStubBody}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"server-responses",
										"{{serverResponseId}}"
									]
								},
								"description": "Updates a mock server's server response. Include at least one of the following properties in the request body:\n\n- `name` — A **string** value that contains the server response's name.\n    \n- `statusCode` — A **string** value that contains the server stub's response code. This property only accepts [5xx values](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n    \n- `headers` — An **array of objects** that contains the server stub's headers:\n    \n    - `key` — A **string** value that contains the header's key.\n        \n    - `value` — A **string** value that contains the header key's value. This value defines the corresponding value for the header key.\n        \n- `body` — A **string** value that contains a response body that returns when you call the mock server."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Service Unavailable\",\n        \"statusCode\": 503,\n        \"headers\": [\n            {\n                \"key\": \"Content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"language\": \"json\",\n        \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2022-08-02T15:08:03.000Z\",\n    \"updatedAt\": \"2022-08-02T15:58:12.000Z\",\n    \"id\": \"965cdd16-fe22-4d96-a161-3d05490ac421\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"mock\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": \"serverResponse\"\n        }\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serverResponse\": {\n        \"name\": \"Service Unavailable\",\n        \"statusCode\": 503,\n        \"headers\": [\n            {\n                \"key\": \"Content-type\",\n                \"value\": \"application/json\"\n            }\n        ],\n        \"language\": \"json\",\n        \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. Please reach out to support if the problem persists.\\\"\\n}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						},
						{
							"name": "Delete a server response",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mocks/{{mockId}}/server-responses/{{serverResponseId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										"{{mockId}}",
										"server-responses",
										"{{serverResponseId}}"
									]
								},
								"description": "Deletes a mock server's server response."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"bf6bbf95-bebb-44ba-8edb-1f096f905774\",\n    \"name\": \"Service Unavailable\",\n    \"statusCode\": 503,\n    \"headers\": [\n        {\n            \"key\": \"Content-Type\",\n            \"value\": \"application/json\"\n        }\n    ],\n    \"language\": \"json\",\n    \"body\": \"{\\n    \\\"message\\\": \\\"Service is temporarily unavailable due to maintenance. If the problem persists, reach out to support.\\\"\\n}\",\n    \"createdBy\": \"1\",\n    \"updatedBy\": \"1\",\n    \"createdAt\": \"2022-05-02T09:38:04.000Z\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"serverResponseNotFoundError\",\n        \"message\": \"We could not find the mock server response you are looking for.\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/server-responses/965cdd16-fe22-4d96-a161-3d05490ac421",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"mocks",
												"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
												"server-responses",
												"965cdd16-fe22-4d96-a161-3d05490ac421"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage mock server responses. Server responses let you simulate 5xx server-level responses, such as 500 or 503."
				},
				{
					"name": "Get a mock server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mocks/{{mockId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Gets information about a mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": {\n                \"type\": \"fixed\",\n                \"duration\": 140000\n            },\n            \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n        },\n        \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n        \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n        \"isPublic\": false, // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n        \"deactivated\": false,\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You don't have access to this mock.\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a mock server",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mock\": {\n        \"name\": \"{{mockName}}\",\n\t\t\"collection\": \"{{collectionId}}\",\n\t\t\"environment\": \"{{environmentId}}\",\n        \"private\": {{boolean}} // If true, the mock server is set private. By default, mock servers are public and can receive requests from anyone and anywhere.\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID in which to create the mock server.\n\nIf you do not include this query parameter, the system creates the mock server in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a mock server in a collection. Include a `mock` object in the request body that contains following properties:\n\n- `collection` — A **string** value that contains the collection UID.\n    \n\nYou can include the following optional properties in the request body:\n\n- `environment` — A **string** value that contains the environment UID to associate with the mock server.\n- `name` — A **string** value that contains the the mock server's name.\n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere.\n    \n\n**Note:**\n\nYou cannot create mocks for collections added to an API definition."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:00:39.000Z\",\n        \"updatedAt\": \"2022-06-09T19:00:39.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"name\": \"Test Mock\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"collection\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Collection API Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"workspaceError\",\n        \"message\": \"Can't create mock servers on a collection added to an API\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mock\": {\n        \"name\": \"Test Mock\",\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"private\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all mock servers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks"
							],
							"query": [
								{
									"key": "teamId",
									"value": "<integer>",
									"description": "Return only mock servers that belong the given team ID.",
									"disabled": true
								},
								{
									"key": "workspace",
									"value": "<string>",
									"description": "Return only mock servers in the given workspace.",
									"disabled": true
								}
							]
						},
						"description": "Gets all active mock servers. By default, this endpoint returns only mock servers you created across all workspaces.\n\n**Note:**\n\nIf you pass both the `teamId` and `workspace` query parameters, this endpoint only accepts the `workspace` query."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false,\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"collection\": \"12345678-2cd8f6b1-e85b-46a6-8111-bd62e73e8aa8\",\n            \"mockUrl\": \"https://cf0f8f11-fe0e-455f-99f3-4177f10f0704.mock.pstmn.io\",\n            \"name\": \"Test Mock B\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n            },\n            \"createdAt\": \"2023-01-26T18:59:05.000Z\",\n            \"updatedAt\": \"2023-01-26T18:59:05.000Z\",\n            \"isPublic\": false // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n        }\n    ]\n}"
						},
						{
							"name": "Filter by teamId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks?teamId=1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "teamId",
											"value": "1234"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false, // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-cf0f8f11-fe0e-455f-99f3-4177f10f0704\",\n            \"collection\": \"12345678-2cd8f6b1-e85b-46a6-8111-bd62e73e8aa8\",\n            \"mockUrl\": \"https://cf0f8f11-fe0e-455f-99f3-4177f10f0704.mock.pstmn.io\",\n            \"name\": \"Test Mock B\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": \"94d0f5d9-dbdf-4046-9a7d-a11f9b78ac65\"\n            },\n            \"createdAt\": \"2023-01-26T18:59:05.000Z\",\n            \"updatedAt\": \"2023-01-26T18:59:05.000Z\",\n            \"isPublic\": false // // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n        },\n        {\n            \"id\": \"e27fe349-bdc7-4f1c-b707-6b9fef7435e2\",\n            \"owner\": \"87654321\",\n            \"uid\": \"87654321-e27fe349-bdc7-4f1c-b707-6b9fef7435e2\",\n            \"collection\": \"87654321-b75dfb85-9209-4212-8f3d-a9d5e28167e5\",\n            \"mockUrl\": \"https://e27fe349-bdc7-4f1c-b707-6b9fef7435e2.mock.pstmn.io\",\n            \"name\": \"Test Mock C\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2023-06-30T14:21:54.000Z\",\n            \"updatedAt\": \"2023-06-30T14:26:55.000Z\",\n            \"isPublic\": true // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n        }\n    ]\n}"
						},
						{
							"name": "Filter by workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mocks\": [\n        {\n            \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n            \"name\": \"Test Mock A\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": {\n                    \"type\": \"fixed\",\n                    \"duration\": 140000\n                },\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2022-07-25T20:54:30.000Z\",\n            \"updatedAt\": \"2022-07-25T20:54:30.000Z\",\n            \"isPublic\": false, // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        },\n        {\n            \"id\": \"c929c990-59f1-480a-aea4-c37e25c8785d\",\n            \"owner\": \"12345678\",\n            \"uid\": \"12345678-b86af87f-7e1f-4476-85bb-c1f71424fd5e\",\n            \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"mockUrl\": \"https://c929c990-59f1-480a-aea4-c37e25c8785d.mock.pstmn.io\",\n            \"name\": \"Test\",\n            \"config\": {\n                \"headers\": [],\n                \"matchBody\": false,\n                \"matchHeader\": false,\n                \"matchQueryParams\": true,\n                \"matchWildcards\": true,\n                \"delay\": null,\n                \"serverResponseId\": null\n            },\n            \"createdAt\": \"2023-06-30T12:57:40.000Z\",\n            \"updatedAt\": \"2023-06-30T12:57:40.000Z\",\n            \"isPublic\": false, // If true, the mock server is public and visible to all users. This field does not indicate the mock server's access control status.\n            \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a mock server",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mocks/{{mockId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Deletes a mock server."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n        \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified mock does not exist.\",\n        \"details\": {}\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Unpublish a mock server",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mocks/{{mockId}}/unpublish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"unpublish"
							]
						},
						"description": "Unpublishes a mock server. Unpublishing a mock server sets its **Access Control** configuration setting to private."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"mockAlreadyUnpublishedError\",\n        \"message\": \"This mock has already been deleted.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/unpublish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"unpublish"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Publish a mock server",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mocks/{{mockId}}/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks",
								"{{mockId}}",
								"publish"
							]
						},
						"description": "Publishes a mock server. Publishing a mock server sets its **Access Control** configuration setting to public."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"mockAlreadyPublishedError\",\n        \"message\": \"This mock is already public.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289/publish",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
										"publish"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a mock server",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mock\": {\n        \"name\": \"{{mockName}}\",\n        \"environment\": \"{{environmentUid}}\",\n        \"private\": {{boolean}}, // If true, the mock server is set private. By default, mock servers are public and can receive requests from anyone and anywhere.\n        \"versionTag\": \"{{apiVersionTagId}}\",\n        \"config\": {\n          \"serverResponseId\": \"{{serverResponseId}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mocks/{{mockId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks",
								"{{mockId}}"
							]
						},
						"description": "Updates a mock server. Include the `mock` object in the request body with one or more of the following properties:\n\n- `name` — A **string** value that contains the mock server's name.\n    \n- `environment` — A **string** value that contains the environment UID.\n    \n- `private` — A **boolean** value that, if true, sets the mock server as private. By default, mock servers are public and can receive requests from anyone and anywhere.\n- `versionTag` — A **string** value that contains the API's version tag ID.\n    \n- `config` — An **object** that contains the following properties:\n    \n    - `serverResponseId` — A **string** value that contains the server response ID. This sets the given server response as the default response for each request."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"name\": \"Test Mock\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"description\": \"This is a test mock server.\",\n        \"private\": true,\n        \"versionTag\": \"abf07d3d-f8ec-47d4-8015-9fe83078b4ec\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Activate a Server Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": \"9a291bbe-dc0a-44ba-a3c8-6dbd06a61460\"\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Deactivate a Server Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"mock\": {\n        \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"owner\": \"12345678\",\n        \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"mockUrl\": \"https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io\",\n        \"name\": \"Test Mock\",\n        \"config\": {\n            \"headers\": [],\n            \"matchBody\": false,\n            \"matchQueryParams\": true,\n            \"matchWildcards\": true,\n            \"delay\": null,\n            \"serverResponseId\": null\n        },\n        \"createdAt\": \"2022-06-09T19:38:06.000Z\",\n        \"updatedAt\": \"2022-06-13T18:55:25.000Z\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mock\": {\n        \"config\": {\n          \"serverResponseId\": null\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/mocks/12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"mocks",
										"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Mocks** endpoints enable you to manage your [mock servers](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/)."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a monitor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"monitor\": {\n        \"name\": \"{{monitorName}}\",\n        \"collection\": \"{{collectionUid}}\",\n        \"environment\": \"{{environmentUid}}\",\n        \"active\": {{boolean}},\n        \"schedule\": {\n            \"cron\": \"{{cronFrequencyPattern}}\",\n            \"timezone\": \"{{monitorTimezone}}\"\n        },\n        \"notificationLimit\": {{number}}, // minimum: 1, maximum: 99\n        \"distribution\": [\n            {\n                \"region\": \"{{regionId}}\" // Accepts \"us-east\", \"us-west\", \"ap-southeast\", \"ca-central\", \"eu-central\", \"sa-east\", \"uk\", \"us-east-staticip\", and \"us-west-staticip\".\n            }\n        ],\n        \"options\": {\n            \"followRedirects\": {{boolean}},\n            \"requestDelay\": {{number}},\n            \"requestTimeout\": {{number}},\n            \"strictSSL\": {{boolean}}\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"{{emailAddress}}\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"{{emailAddress}}\"\n                }\n            ]\n        },\n        \"retry\": {\n            \"attempts\": {{number}} // minimum: 1, maximum: 2\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/monitors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "The workspace ID. If you do not pass this parameter, the monitor is created in your personal workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a monitor. Include the following properties in the request body:\n\n- `name` — (Required) A **string** value that contains the monitor's name.\n    \n- `collection` — (Required) A **string** value that contains the monitor's associated collection unique ID.\n    \n- `schedule` — (Required) An **object** that contains the following properties:\n    \n    - `cron` — A **string** value that contains the monitor's run frequency, based on the given cron pattern. Refer to the **Cron examples** table below for examples of valid patterns.\n        \n    - `timezone` — A **string** value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n        \n\n**Cron examples**\n\n| Frequency | Cron pattern |\n| --- | --- |\n| Every 5 minutes | \\*/5 \\* \\* \\* \\* |\n| Every 30 minutes | \\*/30 \\* \\* \\* \\* |\n| Every hour | 0 \\*/1 \\* \\* \\* |\n| Every 6 hours | 0 \\*/6 \\* \\* \\* |\n| Every day at 5pm | 0 17 \\* \\* \\* |\n| Every Monday at 12pm | 0 12 \\* \\* MON |\n| Every weekday (Monday - Friday) at 6am | 0 6 \\* \\* MON-FRI |\n\nYou can include the following optional properties:\n\n- `environment` — A **string** value that contains the monitor's associated environment unique ID.\n    \n- `active` — A **boolean** value that, if true, the monitor is active and makes calls to the specified URL.\n    \n- `notificationLimit` — A **number** value for when to stop email notifications after the given number consecutive failures. This has a minimum value of 1 and a maximum value of 99.\n    \n- `distribution` — An **array of objects** that contains a list of the monitor's [geographic regions](https://learning.postman.com/docs/monitoring-your-api/setting-up-monitor/#add-regions).\n    \n- `options` — An **object** that contains information about the monitor's option settings.\n    \n    - `followRedirects` — A **boolean** value that, if true, enables follow redirects.\n        \n    - `requestDelay` — A **number** value that is the monitor's request delay value, in milliseconds.\n        \n    - `requsetTimeout` — A **number** value that is the monitor's request timeout value, in milliseconds.\n        \n    - `strictSSL` — A **boolean** value that, if true, enables strict SSL.\n        \n- `notifications` — An **object** that containsi nformation about the monitor's notification settings.\n    \n    - `onError` — A list of email addresses of the users to notify on monitor error.\n        \n    - `onFailure` — A list of email addresses of the users to notify on monitor failure.\n        \n- `retry` — An **object** that contains information about retry attempts.\n    \n    - `attempts` — A **number** value that is number of times to reattempt a monitor run if it fails or errors. This may impact your [monitor usage](https://learning.postman.com/docs/monitoring-your-api/monitor-usage/#view-monitor-usage). This has a maximum value of 2.\n        \n\n**Note:**\n\nYou cannot create monitors for collections added to an API definition."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"active\": true,\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Create Monitor with Options",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"active\": false,\n        \"notificationLimit\": 2,\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"retry\": {\n            \"attempts\": 1\n        },\n        \"options\": {\n            \"strictSSL\": true,\n            \"followRedirects\": true,\n            \"requestTimeout\": 5000,\n            \"requestDelay\": 5\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"user@example.com\"\n                }\n            ]\n        },\n        \"distribution\": [\n            {\n                \"region\": \"us-east\"\n            }\n        ],\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"active\": true,\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Invalid Collection UID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"0 0 * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"collection\",\n            \"uid\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Environment UID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUidError\",\n        \"message\": \"The specified uid is invalid.\",\n        \"details\": {\n            \"param\": \"environment\",\n            \"uid\": \"5daabc50-8451-43f6-922d-96b403b4f28e\"\n        }\n    }\n}"
						},
						{
							"name": "Invalid Timezone",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"USA\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request had invalid parameters\",\n        \"details\": {\n            \"param\": \"schedule.timezone\"\n        }\n    }\n}"
						},
						{
							"name": "Missing Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"name\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Forbidden Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You need read access to this collection in order to perform this action.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						},
						{
							"name": "Invalid Cron Pattern",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"* * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t},\n\t\t\"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n\t\t\"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"cronPatternNotAllowedError\",\n        \"message\": \"Invalid cron pattern. Enter a valid cron pattern, such as \\\"0 17 * * *\\\"\",\n        \"details\": {\n            \"pattern\": \"* * * * *\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Run a monitor",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitors/{{monitorId}}/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors",
								"{{monitorId}}",
								"run"
							],
							"query": [
								{
									"key": "async",
									"value": "<boolean>",
									"description": "If true, runs the monitor asynchronously from the created monitor run task. By default, the server will not respond until the task finishes (`false`).",
									"disabled": true
								}
							]
						},
						"description": "Runs a monitor and returns its run results.\n\n**Note:**\n\nIf you pass the `async=true` query parameter, the response does not return the `stats`, `executions`, and `failures` responses. To get this information for an asynchronous run, call the [GET /monitors/{id}](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-e4167234-9a55-4b15-8146-0487978d952f?ctx=documentation&tab=overview) endpoint."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"success\",\n            \"startedAt\": \"2022-06-17T19:50:04.019Z\",\n            \"finishedAt\": \"2022-06-17T19:50:06.439Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 0,\n                \"failed\": 0\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T19:50:06.186Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 49,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 19:50:06 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"
						},
						{
							"name": "Run With async Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run?async=true",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									],
									"query": [
										{
											"key": "async",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"success\",\n            \"startedAt\": \"2022-06-17T19:50:04.019Z\",\n            \"finishedAt\": \"2022-06-17T19:50:06.439Z\"\n        }\n    }\n}"
						},
						{
							"name": "Monitor Run Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T20:00:41.659Z\",\n            \"finishedAt\": \"2022-06-17T20:00:42.693Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 1,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 1,\n                \"failed\": 0\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample POST Request\"\n                },\n                \"request\": {\n                    \"method\": \"POST\",\n                    \"url\": \"http://echo.getpostman.com/post\",\n                    \"headers\": {\n                        \"Content-Type\": \"application/json\",\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"echo.getpostman.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\",\n                        \"Content-Length\": \"0\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:00:42.423Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 50\n                    },\n                    \"responseTime\": 15,\n                    \"responseSize\": 50,\n                    \"headers\": {\n                        \"Date\": \"Fri, 17 Jun 2022 20:00:42 GMT\",\n                        \"Content-Type\": \"text/plain\",\n                        \"Content-Length\": \"50\",\n                        \"Connection\": \"keep-alive\",\n                        \"Server\": null\n                    }\n                }\n            }\n        ],\n        \"failures\": []\n    }\n}"
						},
						{
							"name": "Monitor Run with Errors",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"run\": {\n        \"info\": {\n            \"jobId\": \"1ecee76a-e14e-47c0-bddc-256bf690c407\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"status\": \"error\",\n            \"startedAt\": \"2022-06-17T20:04:47.183Z\",\n            \"finishedAt\": \"2022-06-17T20:04:48.858Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 4,\n                \"failed\": 2\n            },\n            \"requests\": {\n                \"total\": 4,\n                \"failed\": 3\n            }\n        },\n        \"executions\": [\n            {\n                \"id\": 1,\n                \"item\": {\n                    \"name\": \"Sample GET Request\"\n                },\n                \"request\": {\n                    \"method\": \"GET\",\n                    \"url\": \"https://example.com/search?format=json&state=&city=&country=\",\n                    \"headers\": {\n                        \"User-Agent\": \"PostmanRuntime/7.29.0\",\n                        \"Accept\": \"*/*\",\n                        \"Cache-Control\": \"no-cache\",\n                        \"Postman-Token\": null,\n                        \"Host\": \"example.com\",\n                        \"Accept-Encoding\": \"gzip, deflate, br\",\n                        \"Connection\": \"keep-alive\"\n                    },\n                    \"body\": {\n                        \"contentLength\": 0\n                    },\n                    \"timestamp\": \"2022-06-17T20:04:47.926Z\"\n                },\n                \"response\": {\n                    \"code\": 200,\n                    \"body\": {\n                        \"contentLength\": 2\n                    },\n                    \"responseTime\": 257,\n                    \"responseSize\": 2,\n                    \"headers\": {\n                        \"Server\": null,\n                        \"Date\": \"Fri, 17 Jun 2022 20:04:47 GMT\",\n                        \"Content-Type\": \"application/json; charset=UTF-8\",\n                        \"Transfer-Encoding\": \"chunked\",\n                        \"Connection\": \"keep-alive\",\n                        \"Keep-Alive\": null,\n                        \"Access-Control-Allow-Origin\": \"*\",\n                        \"Access-Control-Allow-Methods\": \"OPTIONS,GET\"\n                    }\n                },\n                \"errors\": [\n                    {\n                        \"name\": \"TypeError\",\n                        \"message\": \"Cannot read property 'lat' of undefined\"\n                    }\n                ]\n            }\n        ],\n        \"failures\": [\n            {\n                \"executionId\": 1,\n                \"name\": \"TypeError\",\n                \"message\": \"Cannot read property 'lat' of undefined\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8/run",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
										"run"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a monitor",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitors/{{monitorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Deletes a monitor."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"uid\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "813af79fd620c970d59f4e41275292a96873bb5065975eccf67a84cfdc24b448037430d26c2a29f4192ad492875ed7a0d53bbea8c63f760bb75c886624b4da560fc52c7f9f9e79837bee212f90b9a59c1dfcf94b95156b20f45169eab2ed93b0c38669819143ae41e45dfaac6a5f0cf6d5e76ca40134c3bd9ef9f5532ad6d179519aa0315fe4e6e157ee9d71c9f14aa9b0455ff84f94ae7519f1139d0cccdeeef7e2aafe1696cf640ec874c62d4d5bda3dbe17cf6083fb276b7f3355eb19162430f171166d19a7d79da028c76b3c2b97e88c93dc7183bc486d9d331b93b9a20de1216e84ca74f7b6887df61785d0b65be19f56283523f211fd43a772afa39aadc3b8dc011ba680b69a7e4fcda83be75d593c8ce6c6997bf530b57a8036881ea3d5b3c28d096099ca712f5d6916b453f1b338c455c4f861da638dffd05fd2a3dd5b9dd6dbe5f2c3a30e304363c9c2bcfbe5d9abeba9c06df16d155a70c6b0a9848f7446a5646e58640d7fad642df11350f528e4bacb5c446986cddf8f0c7ad10ec1067daccca962d6fb90aad8db55c2ffa1dc8716865350d5127cb69e44cfc4511836cbc5828c1c01370c7464fef1f07c716456a57a467bc1445ea88b705ef9c0c068948a73dca851804663befbc2d9aec7cfc3a2daf377b1a8c020091216d82504ff9b38c84234ad9b6f8c596a",
									"key": "postman.sid"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "b8ee90dd180562a5a21edad92ea0b987583b7599811884947b9aae88d0c060e8abb0c337534285da6defa4cfabba320b37b611b2c9586b81cb38220830b58440a2ff03756c898b89eb08799bc486c7dc08643ef1ee6e38e5988c4aafda47f1ed26c4218a23620f43d57aa19bb7f79762b394384215a7805e6b1c2cc092b6ac5ad8e8848b1ce655edba6f52820a2ac5acf3d289dda878c6a1fe62e88bb4159f605e8081afa2afce7a72a0c5d96515d566bcbf9cb3842cfc2b7f3a48badbcbfb9e5907b6451674d2c09cf6bf0b34b967edfc3a6389a834f7be21592ba2fbf7aa9eaaa6b87f99590813ded37c6e4ad17e7afcca74455b703d2d653e6ce063ce8eb195ce46c910a1b61fb71f13a8cb52ab2a7bded1b9b5a6b56ad5a66ceafc20afc70962a1f49b8abf2ce3f9e7cf3f44aaf0f41f81605b4ee612f3044d81b787a7cb128c56474a25cdc13803e9057603ead1f1fd6666ae5467ca9e250bb228dfd11dafd16345019bb7e06c58b27bf69d550cbfcef348bc746fdea61d4ea93c48d5f5e4e729adf18655669170f0a059025a79fb2a48f924d9748895a42780d1a9fae32ebf2d57df434c60b675412e217d126b9edbd28b949dfcbcbc8518aa51339d3e1d1f37c6cac4866064c54a476cf94d749a570938a7ad3ce28a9f1c5ea6623b",
									"key": "postman-staging.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all monitors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "Return only results found in the given workspace ID.",
									"disabled": true
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "If true, return only active monitors.",
									"disabled": true
								},
								{
									"key": "owner",
									"value": "<integer>",
									"description": "Return the results by the given user ID.",
									"disabled": true
								},
								{
									"key": "collectionUid",
									"value": "<string>",
									"description": "Filter the results by a collection's unique ID.",
									"disabled": true
								},
								{
									"key": "environmentUid",
									"value": "<string>",
									"description": "Filter the results by an environment's unique ID.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "The pointer to the first record of the set of paginated results. To view the next response, use the `nextCursor` value for this parameter.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of rows to return in the response, up to a maximum value of 25. Any value greater than 25 returns a 400 Bad Request response. Defaults to `25`.",
									"disabled": true
								}
							]
						},
						"description": "Gets all monitors."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Test Monitor\",\n      \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"owner\": 12345678\n    },\n    {\n      \"id\": \"1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"name\": \"Postman Echo Monitor\",\n      \"uid\": \"87654321-1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"owner\": 87654321\n    }\n  ]\n}"
						},
						{
							"name": "Get Monitors in a Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Test Monitor\",\n      \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"owner\": 12345678\n    }\n  ]\n}"
						},
						{
							"name": "Filter by collectionUid",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?collectionUid=12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "collectionUid",
											"value": "12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a\",\n            \"environmentUid\": \"12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Filter by environmentUid",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?environmentUid=12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "environmentUid",
											"value": "12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a\",\n            \"environmentUid\": \"12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Filter by active",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?active=false",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "active",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [\n        {\n            \"id\": \"3d08e460-b58f-4f46-9dbb-018c57760864\",\n            \"name\": \"Billing\",\n            \"active\": false,\n            \"uid\": \"56781234-3d08e460-b58f-4f46-9dbb-018c57760864\",\n            \"owner\": 56781234,\n            \"collectionUid\": \"56781234-b79c429b-b347-4b9c-a969-9cc3e1349f68\",\n            \"environmentUid\": \"56781234-ec29504a-a305-47b2-9c73-8b0dcd6ddd61\"\n        },\n        {\n            \"id\": \"5c8ff94d-ae04-4f23-812c-d428fa72bc43\",\n            \"name\": \"API Test 2\",\n            \"active\": false,\n            \"uid\": \"87654321-5c8ff94d-ae04-4f23-812c-d428fa72bc43\",\n            \"owner\": 87654321,\n            \"collectionUid\": \"87654321-01c3b7c7-bf1e-47ab-8d57-0f9f950dca65\",\n            \"environmentUid\": \"87654321-2ff3607d-2bdc-49a4-91af-40b0f48a0c77\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Filter by owner",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?owner=12345678",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "owner",
											"value": "12345678"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a\",\n            \"environmentUid\": \"12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905\"\n        },\n        {\n            \"id\": \"90e01576-3ec4-4245-a327-e56b78becdce\",\n            \"name\": \"Testing Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-90e01576-3ec4-4245-a327-e56b78becdce\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-ecfd0f2c-cf60-4935-b2ed-b65c58d2910c\",\n            \"environmentUid\": \"12345678-106dabbe-324c-488f-b628-c9f45033dcc7\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Limit with Cursor Pagination",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?limit=5",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a\",\n            \"environmentUid\": \"12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905\"\n        },\n        {\n            \"id\": \"1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n            \"name\": \"API Test\",\n            \"active\": true,\n            \"uid\": \"87654321-1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n            \"owner\": 87654321,\n            \"collectionUid\": \"87654321-2f5e0f30-15f9-4c8a-9371-bb4402149abb\",\n            \"environmentUid\": \"87654321-da11b6bf-1856-4625-ade2-46843b8eb31c\"\n        },\n        {\n            \"id\": \"3d08e460-b58f-4f46-9dbb-018c57760864\",\n            \"name\": \"Billing\",\n            \"active\": false,\n            \"uid\": \"56781234-3d08e460-b58f-4f46-9dbb-018c57760864\",\n            \"owner\": 56781234,\n            \"collectionUid\": \"56781234-b79c429b-b347-4b9c-a969-9cc3e1349f68\",\n            \"environmentUid\": \"56781234-ec29504a-a305-47b2-9c73-8b0dcd6ddd61\"\n        },\n        {\n            \"id\": \"90e01576-3ec4-4245-a327-e56b78becdce\",\n            \"name\": \"Testing Monitor\",\n            \"active\": true,\n            \"uid\": \"12345678-90e01576-3ec4-4245-a327-e56b78becdce\",\n            \"owner\": 12345678,\n            \"collectionUid\": \"12345678-ecfd0f2c-cf60-4935-b2ed-b65c58d2910c\",\n            \"environmentUid\": \"12345678-106dabbe-324c-488f-b628-c9f45033dcc7\"\n        },\n        {\n            \"id\": \"5c8ff94d-ae04-4f23-812c-d428fa72bc43\",\n            \"name\": \"API Test 2\",\n            \"active\": false,\n            \"uid\": \"87654321-5c8ff94d-ae04-4f23-812c-d428fa72bc43\",\n            \"owner\": 87654321,\n            \"collectionUid\": \"87654321-01c3b7c7-bf1e-47ab-8d57-0f9f950dca65\",\n            \"environmentUid\": \"87654321-2ff3607d-2bdc-49a4-91af-40b0f48a0c77\"\n        }\n    ],\n    \"meta\": {\n        \"nextCursor\": \"D7TopGzwFnQtrVmj8QRbSBsBKkHAq19dnoRp5XxKVfVJW4pUx74P3L9BW9qTnR8vhAbgmXA3KEBTSG8Y4BXxJDmU8vJMH76RfKF1f51DfYm2qgt14AK1oLX1mj5qcmH2buYxiPL5CmdyktVVmNqs9zsMtLD9\",\n        \"limit\": 5\n    }\n}"
						},
						{
							"name": "Owner Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?owner=12345678",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "owner",
											"value": "12345678"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitors\": [],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Collection Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?collectionUid=12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "collectionUid",
											"value": "12345678-d35c5bfa-380e-4e98-9052-4eaf3bd0f14a"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"monitors\": [],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Environment Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?environmentUid=12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "environmentUid",
											"value": "12345678-9ce0605e-e7cb-40dc-8074-2f6a69252905"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"monitors\": [],\n    \"meta\": {\n        \"nextCursor\": \"\",\n        \"limit\": 25\n    }\n}"
						},
						{
							"name": "Invalid active Value",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?cursor=1",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "cursor",
											"value": "1"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Active must be a boolean.\"\n    }\n}"
						},
						{
							"name": "Invalid Cursor",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?cursor=1",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "cursor",
											"value": "1"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Invalid cursor query parameter passed.\"\n    }\n}"
						},
						{
							"name": "Invalid owner Value",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?cursor=1&owner=a",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "cursor",
											"value": "1"
										},
										{
											"key": "owner",
											"value": "a"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Owner user ID must be an integer.\"\n    }\n}"
						},
						{
							"name": "Invalid Pagination Limit",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9&limit=30",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Query param limit cannot exceed 25.\"\n    }\n}"
						},
						{
							"name": "Invalid Workspace ID",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9bQ32",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9bQ32"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"badRequest\",\n        \"message\": \"Workspace ID must be 36 characters (37).\"\n    }\n}"
						},
						{
							"name": "Workspace Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"Workspace not found\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a monitor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/monitors/{{monitorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Gets information about a monitor."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"owner\": 12345678,\n        \"active\": true,\n        \"notificationLimit\": 1,\n        \"collectionUid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environmentUid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n        \"options\": {\n            \"strictSSL\": true,\n            \"followRedirects\": true,\n            \"requestTimeout\": 3000,\n            \"requestDelay\": 0\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"taylor.lee@example.com\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"taylor.lee@example.com\"\n                }\n            ]\n        },\n        \"distribution\": [\n            {\n                \"region\": \"us-east\"\n            }\n        ],\n        \"schedule\": {\n            \"cron\": \"0 0 * * * *\",\n            \"timezone\": \"America/Chicago\",\n            \"nextRun\": \"2022-06-18T05:00:00.000Z\"\n        },\n        ,\n        \"retry\": {\n            \"attempts\": 1\n        },\n        \"lastRun\": {\n            \"status\": \"failed\",\n            \"startedAt\": \"2022-06-17T18:39:52.852Z\",\n            \"finishedAt\": \"2022-06-17T18:39:53.707Z\"\n        },\n        \"stats\": {\n            \"assertions\": {\n                \"total\": 8,\n                \"failed\": 1\n            },\n            \"requests\": {\n                \"total\": 4\n            }\n\t\t}\n\t}\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a monitor",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"{{monitorName}}\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"{{cronFrequencyPattern}}\",\n            \"timezone\": \"{{monitorTimezone}}\"\n\t\t},\n        \"notificationLimit\": {{number}}, // minimum: 1, maximum: 99\n        \"active\": {{boolean}},\n        \"distribution\": [\n            {\n                \"region\": \"{{regionId}}\" // Accepts \"us-east\", \"us-west\", \"ap-southeast\", \"ca-central\", \"eu-central\", \"sa-east\", \"uk\", \"us-east-staticip\", and \"us-west-staticip\".\n            }\n        ],\n        \"options\": {\n            \"followRedirects\": {{boolean}},\n            \"requestDelay\": {{number}},\n            \"requestTimeout\": {{number}},\n            \"strictSSL\": {{boolean}}\n        },\n        \"notifications\": {\n            \"onError\": [\n                {\n                    \"email\": \"{{emailAddress}}\"\n                }\n            ],\n            \"onFailure\": [\n                {\n                    \"email\": \"{{emailAddress}}\"\n                }\n            ]\n        },\n        \"retry\": {\n            \"attempts\": {{number}} // minimum: 1, maximum: 2\n        }\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/monitors/{{monitorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors",
								"{{monitorId}}"
							]
						},
						"description": "Updates a monitor. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the monitor's name.\n    \n- `schedule` — An **object** that contains the following properties:\n    \n    - `cron` — A **string** value that contains the monitor's run frequency, based on the given cron pattern. Refer to the **Cron examples** table for examples of valid patterns.\n        \n    - `timezone` — A **string** value that contains the monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).\n        \n\n**Cron examples**\n\n| Frequency | Cron pattern |\n| --- | --- |\n| Every 5 minutes | \\*/5 \\* \\* \\* \\* |\n| Every 30 minutes | \\*/30 \\* \\* \\* \\* |\n| Every hour | 0 \\*/1 \\* \\* \\* |\n| Every 6 hours | 0 \\*/6 \\* \\* \\* |\n| Every day at 5pm | 0 17 \\* \\* \\* |\n| Every Monday at 12pm | 0 12 \\* \\* MON |\n| Every weekday (Monday - Friday) at 6am | 0 6 \\* \\* MON-FRI |\n\nYou can include the following optional properties:\n\n- `active` — A **boolean** value that, if true, the monitor is active and makes calls to the specified URL.\n    \n- `notificationLimit` — A **number** value for when to stop email notifications after the given number consecutive failures. This has a minimum value of 1 and a maximum value of 99.\n    \n- `distribution` — An **array of objects** that contains a list of the monitor's [geographic regions](https://learning.postman.com/docs/monitoring-your-api/setting-up-monitor/#add-regions).\n    \n- `options` — An **object** that contains information about the monitor's option settings.\n    \n    - `followRedirects` — A **boolean** value that, if true, enables follow redirects.\n        \n    - `requestDelay` — A **number** value that is the monitor's request delay value, in milliseconds.\n        \n    - `requsetTimeout` — A **number** value that is the monitor's request timeout value, in milliseconds.\n        \n    - `strictSSL` — A **boolean** value that, if true, enables strict SSL.\n        \n- `notifications` — An **object** that containsi nformation about the monitor's notification settings.\n    \n    - `onError` — A list of email addresses of the users to notify on monitor error.\n        \n    - `onFailure` — A list of email addresses of the users to notify on monitor failure.\n        \n- `retry` — An **object** that contains information about retry attempts.\n    \n    - `attempts` — A **number** value that is number of times to reattempt a monitor run if it fails or errors. This may impact your [monitor usage](https://learning.postman.com/docs/monitoring-your-api/monitor-usage/#view-monitor-usage). This has a maximum value of 2."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "yes",
									"key": "getpostmanlogin"
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": false,
									"domain": "getpostman.com",
									"path": "/",
									"secure": false,
									"session": false,
									"value": "0e9f9b1f3e7218e7fd625cca14597bc771064a433bdd75b5a40196cef86c3fa29d483358e0b254b0a097ac305b132ec8481e2c5b835663fbed3bbb93b5a747cf8776efe85650e29a8e5f0a63906480e5b9e5a9860bef703234812ce9f65ea6dcbc099ac952d1c36338e2d192a793b82a1d8a2dd6dd031f831c08805a9e7ea1f55d46c54cf6ecaecbac84ddf581c8a267a116c0d6d935f19171bce93c6e040c0bd49fc1325bdb8929914548d7c0cae78796aba4073dc9ab63194a90e430919d8757c7ccb7b4dffc61b9cd4a748edc88d0b4ba727c83ea1af546908ff63a1e2ee9784a7b9af2f61997e0dd34adcb479151d11d0e8d67ba76050d55c7bbb88f2f700e14f848f6b929b441869fba53436eb7983660d0e4af82aa0dc5c47dddf974599280179889c03c3e38212eaa8270c641298f0a49b923ed3d04d61e2c6c25844b67df9e4814d378b440e8124e429dc292a147038a57c03e8b8ece700b376fcf8e002dca35142f97b5f49144e2f7477b99d767dff12bb37dd846419051bdaa4c6d931545a5df09bda8a80a336585e5d6ba44f087607512344f91321a359dc150cb411600fbf0d974f63116046d681d3f82a16e50e3bb69c463430e284f64e007f354a9ed4a2afdb27caad0414d451875ec78ea98924e32d8f881eb2c260b348e00baf782",
									"key": "postman.sid"
								}
							],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"active\": true,\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Pause Monitor",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"active\": false,\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Resume Monitor",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"active\": true\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"monitor\": {\n        \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n        \"name\": \"Test Monitor\",\n        \"active\": true,\n        \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified monitor does not exist.\"\n    }\n}"
						},
						{
							"name": "Invalid Cron Pattern",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"* * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"cronPatternNotAllowedError\",\n        \"message\": \"The specified cron pattern is not allowed. Please check https://monitor.getpostman.com for the allowed schedules.\",\n        \"details\": {\n            \"pattern\": \"* * * * *\"\n        }\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"monitor\": {\n        \"name\": \"Test Monitor\",\n        \"schedule\": {\n            \"cron\": \"0 0 * * *\",\n            \"timezone\": \"America/Chicago\"\n        },\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"environment\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. The workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"monitor\": {\n\t\t\"name\": \"Test Monitor\",\n\t\t\"schedule\": {\n\t\t\t\"cron\": \"*/5 * * * *\",\n\t\t\t\"timezone\": \"America/Chicago\"\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/monitors/12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"monitors",
										"12345678-1e6b6cb7-f13d-4000-acb7-0695757174a8"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Monitors** endpoints enable you to manage your [monitors](https://learning.postman.com/docs/monitoring-your-api/intro-monitors/)."
		},
		{
			"name": "Postbot",
			"item": [
				{
					"name": "Generations",
					"item": [
						{
							"name": "Generate a tool",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collectionId\": \"{{collectionId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"config\": {\n        \"language\": \"{{language}}\", // javascript, typescript, or python\n        \"agentFramework\": \"{{agentFramework}}\" // openai, mistral, gemini, anthropic, langchain, or autogen (Python only)\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/postbot/generations/tool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"postbot",
										"generations",
										"tool"
									]
								},
								"description": "Generates code for an AI agent tool using a collection and request from the Public API Network. For more information, see [<b>Tool Generation Demo</b>](http://postman.com/explore/toolgen) in Postman's Public API Network.\n\nInclude the following in your request:\n\n- `collectionId` — A **string** value that contains the Public API Network collection's ID.\n    \n- `requestId` — A **string** value that contains the public request ID.\n    \n- `config` — An **object** that contains the following properties:\n    \n    - `language` — A **string** value that contains the programming language to use to generate the request. Accepts `javascript`, `typescript`, or `python`.\n        \n    - `agentFramework` — A **string** value that contains the AI agent framework to use. Accepts `openai`, `mistral`, `gemini`, `anthropic`, `langchain`, or `autogen` (Python only).\n        \n\n### Important\n\n- This endpoint has a rate limit of **30 calls every 3 hours**. This does not accrue Postbot usage.\n    \n- This endpoint only supports public Postman Collections and requests."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"text\": \"/**\\n * Function to query a Notion database.\\n *\\n * @param {Object} args - Arguments for the query.\\n * @param {string} args.databaseId - The ID of the Notion database to query.\\n * @param {Object} [args.filter] - The filter conditions for the query.\\n * @param {Array} [args.sorts] - The sort conditions for the query.\\n * @returns {Promise<Object>} - The result of the database query.\\n */\\nconst executeFunction = async ({ databaseId, filter, sorts }) => {\\n    // NOTE before using the tool: verify this section is correct\\n    const baseUrl = `https://api.notion.com/v1/databases/${databaseId}/query`;\\n    \\n    // NOTE! Replace this with your actual API token\\n    const token = process.env.NOTION_API_TOKEN;\\n    const notionVersion = process.env.NOTION_VERSION || '2022-06-28'; // Default version, update as needed\\n\\n    // Set up headers for the request\\n    const headers = {\\n        'Authorization': `Bearer ${token}`,\\n        'Content-Type': 'application/json',\\n        'Notion-Version': notionVersion,\\n    };\\n\\n    const body = JSON.stringify({\\n        filter,\\n        sorts,\\n    });\\n\\n    // Perform the fetch request\\n    const response = await fetch(baseUrl, {\\n        method: 'POST',\\n        headers,\\n        body\\n    });\\n\\n    // Check if the response was successful\\n    if (!response.ok) {\\n        const errorData = await response.json();\\n        throw new Error(errorData);\\n    }\\n\\n    // Parse and return the response data\\n    const data = await response.json();\\n    return data;\\n};\\n\\n/**\\n * Tool configuration for querying a Notion database.\\n * @type {Object}\\n */\\nconst apiTool = {\\n    type: 'function',\\n    function: {\\n        name: 'query_notion_database',\\n        function: executeFunction,\\n        description: 'Query a Notion database using specific filter and sort parameters.',\\n        parse: JSON.parse,\\n        parameters: {\\n            type: 'object',\\n            properties: {\\n                databaseId: {\\n                    type: 'string',\\n                    description: 'The ID of the Notion database to query.',\\n                },\\n                filter: {\\n                    type: 'object',\\n                    description: 'The filter conditions for the query.',\\n                },\\n                sorts: {\\n                    type: 'array',\\n                    description: 'The sort conditions for the query.',\\n                    items: {\\n                        type: 'object',\\n                        properties: {\\n                            property: {\\n                                type: 'string',\\n                                description: 'The database property to sort by.',\\n                            },\\n                            direction: {\\n                                type: 'string',\\n                                description: 'The direction of sorting, either \\\"ascending\\\" or \\\"descending\\\".',\\n                                enum: ['ascending', 'descending'],\\n                            },\\n                        },\\n                    },\\n                },\\n            },\\n            required: ['databaseId'],\\n            additionalProperties: false,\\n        },\\n    },\\n};\\n\\nexport default apiTool;\"\n    }\n}"
								},
								{
									"name": "Collection Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 18:38:38 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "244"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "ratelimit-reset",
											"value": "22"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "22"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=22"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999993"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999993"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "178"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "170"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "137dc1789720e603550d333e74d74b2b"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "9038769e5e5eeeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Collection does not exist or is not public\"\n}"
								},
								{
									"name": "Collection Not Public",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 18:38:38 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "244"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "ratelimit-reset",
											"value": "22"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "22"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=22"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999993"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999993"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "178"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "170"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "137dc1789720e603550d333e74d74b2b"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "9038769e5e5eeeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Collection does not exist or is not public\"\n}"
								},
								{
									"name": "Invalid Framework",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"postman\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 18:34:24 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "480"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-reset",
											"value": "37"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "37"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=37"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999995"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999995"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "129"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "182"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "e3162c57e8d4256bdeca383bb414606c"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "90387067084feeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"\\\"body.config.agentFramework\\\" must be one of [openai, mistral, gemini, anthropic, langchain, autogen]\"\n}"
								},
								{
									"name": "Invalid Language",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"js\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 18:33:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "366"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "ratelimit-reset",
											"value": "44"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "44"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=44"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999997"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999997"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "182"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "176"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "a3ba415e0e802d0046db5947a5fa1653"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "90386ec229e1eeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"\\\"body.config.language\\\" must be one of [javascript, typescript]\"\n}"
								},
								{
									"name": "Missing Property",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Missing property 'config'\",\n    \"detail\": \"POST request body for '/postbot/generations/tool' failed to validate schema. Location: /required\",\n    \"status\": 400\n}"
								},
								{
									"name": "Request Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 18:39:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "235"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-reset",
											"value": "39"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "39"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=39"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999992"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999992"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "460"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "82"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "638aae796e156c35268241163c517d0c"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "903877acdda3eeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"status\": 400,\n    \"title\": \"Bad Request\",\n    \"detail\": \"Request not found\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-Key",
												"value": "{{postman_api_key}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"status\": 500,\n    \"detail\": \"Something went wrong\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "{{postman_api_v2_accept_header}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"requestId\": \"c82dd02c-4870-4907-8fcb-593a876cf05b\",\n    \"config\": {\n        \"language\": \"javascript\",\n        \"agentFramework\": \"openai\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/postbot/generations/tool",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"postbot",
												"generations",
												"tool"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 17 Jan 2025 19:23:03 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "87"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "ratelimit-reset",
											"value": "57"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "57"
										},
										{
											"key": "ratelimit-policy",
											"value": "10000;w=60"
										},
										{
											"key": "x-ratelimit-retryafter",
											"value": "4162"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "retry-after",
											"value": "4162"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "ratelimit",
											"value": "limit=10000, remaining=9999, reset=57"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "10000"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "9999"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "x-ratelimit-remaining-month",
											"value": "999970"
										},
										{
											"key": "ratelimit-remaining-month",
											"value": "999970"
										},
										{
											"key": "x-ratelimit-limit-month",
											"value": "1000000"
										},
										{
											"key": "access-control-allow-origin",
											"value": "*"
										},
										{
											"key": "x-kong-upstream-latency",
											"value": "42"
										},
										{
											"key": "x-kong-proxy-latency",
											"value": "195"
										},
										{
											"key": "via",
											"value": "1.1 kong/3.8.0"
										},
										{
											"key": "x-kong-request-id",
											"value": "f0777a5b4dc94f40f46b961dd7709933"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "9038b7b0aea0eeb0-ATH"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/too-many-requests\",\n    \"title\": \"Too Many Requests\",\n    \"detail\": \"You have exceeded your request limit\",\n    \"status\": 429\n}"
								}
							]
						}
					],
					"description": "The **Generations** endpoints enable you to use Postbot to generate tool definition code and more from resources on Postman."
				}
			],
			"description": "The [<b>Postbot</b>](https://learning.postman.com/docs/getting-started/basics/about-postbot/) endpoints enable you to programmatically engage with Postman's AI assistant."
		},
		{
			"name": "Private API Network",
			"item": [
				{
					"name": "Element Requests",
					"item": [
						{
							"name": "Respond to an element add request",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"response\": {\n        \"message\": \"{{responderMessage}}\"\n    },\n    \"status\": \"{{responseStatus}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/network/private/network-entity/request/{{requestId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										"{{requestId}}"
									]
								},
								"description": "Responds to a user's request to add an element to your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Include the following in the request body:\n\n- `message` — A **string** value in a `response` object that contains a message that details why the user's request was denied.\n    \n- `status` — A **string** value that contains the request's status. One of:\n    \n    - `denied`\n        \n    - `approved`"
							},
							"response": [
								{
									"name": "Request Denied",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"denied\",\n    \"response\": {\n        \"message\": \"The requested collection has a lot of governance violations. Please fix them.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"request\": [\n        {\n            \"id\": 2,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            },\n            \"response\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Please fix the API issues first\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Request Approved",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"request\": [\n        {\n            \"id\": 1,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"createdBy\": 12345678,\n            \"message\": \"Please add this to the network\",\n            \"status\": \"approved\",\n            \"element\": {\n                \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n                \"createdBy\": 2272,\n                \"type\": \"api\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"This is a test API\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Request Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"RequestNotFound\",\n    \"message\": \"No request found for the corresponding ID\"\n}"
								},
								{
									"name": "Invalid Request Payload",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"accepted\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"Status type can only be denied or approved.\"\n}"
								},
								{
									"name": "Requested Element Already Published",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"requestEntityAlreadyPublished\",\n    \"message\": \"Test api has already been published to the network\"\n}"
								},
								{
									"name": "Request Already Responded To",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"approved\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/232",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"requestAlreadyResponded\",\n    \"message\": \"This request is already responded.\"\n}"
								}
							]
						},
						{
							"name": "Get all element add requests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/network/private/network-entity/request/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network",
										"private",
										"network-entity",
										"request",
										"all"
									],
									"query": [
										{
											"key": "since",
											"value": "<string>",
											"description": "Return only results created since the given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be later than the `until` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "<string>",
											"description": "Return only results created until this given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be earlier than the `since` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										},
										{
											"key": "requestedBy",
											"value": "<integer>",
											"description": "Return a user's element requests by their user ID.",
											"disabled": true
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by the element type. One of: `workspace`, `collection`, `api`.",
											"disabled": true
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Filter by the request status. One of: `pending`, `denied`.",
											"disabled": true
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Return only elements whose name includes the given value. Matching is not case-sensitive.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sort the results by the `name` or `updatedAt` properties. If you use this query parameter, you must also use the `direction` parameter.",
											"disabled": true
										},
										{
											"key": "direction",
											"value": "<string>",
											"description": "Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "The zero-based offset of the first item to return. This value defaults to `0`.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.",
											"disabled": true
										}
									]
								},
								"description": "Gets a list requests to add elements to your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/)."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/all?since=2022-09-28T13:48:09.000Z&requestedBy=12345678&offset=5&limit=10",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"all"
											],
											"query": [
												{
													"key": "since",
													"value": "2022-09-28T13:48:09.000Z"
												},
												{
													"key": "requestedBy",
													"value": "12345678"
												},
												{
													"key": "offset",
													"value": "5"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"requests\": [\n        {\n            \"id\": 1,\n            \"createdBy\": 87654321,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"status\": \"pending\",\n            \"element\": {\n                \"type\": \"api\",\n                \"id\": \"360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test api\",\n                \"summary\": \"Test api summary\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"message\": \"Please approve this collection\",\n            \"status\": \"denied\",\n            \"element\": {\n                \"type\": \"collection\",\n                \"id\": \"5360b75f-447e-467c-9299-12fd3c92450d\",\n                \"name\": \"Test Collection\",\n                \"summary\": \"This is a test collection.\"\n            },\n            \"response\": {\n                \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n                \"createdBy\": 2272,\n                \"message\": \"Too many errors, please fix and resubmit\"\n            }\n        }\n    ],\n    \"meta\": {\n        \"limit\": 10,\n        \"offset\": 5,\n        \"totalCount\": 100\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/network/private/network-entity/request/all",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"network",
												"private",
												"network-entity",
												"request",
												"all"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified request does not exist.\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage [requests](https://learning.postman.com/docs/collaborating-in-postman/private-api-network/private-network-requests/#requesting-to-add-elements-in-your-private-api-network) by users to add elements to your team's Private API Network."
				},
				{
					"name": "Get all elements and folders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/network/private",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network",
								"private"
							],
							"query": [
								{
									"key": "since",
									"value": "<string>",
									"description": "Return only results created since the given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be later than the `until` value.",
									"disabled": true
								},
								{
									"key": "until",
									"value": "<string>",
									"description": "Return only results created until this given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be earlier than the `since` value.",
									"disabled": true
								},
								{
									"key": "addedBy",
									"value": "<integer>",
									"description": "Return only elements published by the given user ID.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Return only elements whose name includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "summary",
									"value": "<string>",
									"description": "Return only elements whose summary includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "Return only elements whose description includes the given value. Matching is not case-sensitive.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sort the results by the given value. One of:\n- `createdAt`\n- `updatedAt`\n\nIf you use this query parameter, you must also use the `direction` parameter.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "<string>",
									"description": "Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.",
									"disabled": true
								},
								{
									"key": "createdBy",
									"value": "<integer>",
									"description": "Return only the elements created by the given user ID.",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "The zero-based offset of the first item to return. This value defaults to `0`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.",
									"disabled": true
								},
								{
									"key": "parentFolderId",
									"value": "<integer>",
									"description": "Return the folders and elements in a specific folder in the Private API Network. If this value is `0`, then the endpoint only returns the root folder's elements.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter by the element type. One of:\n- `folder`\n- `workspace`\n- `collection`\n- `api`",
									"disabled": true
								}
							]
						},
						"description": "Gets information about the folders and elements added to your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Elements are APIs, collections, and workspaces.\n\n**Note:**\n\nThe `limit` and `offset` parameters are separately applied to elements and folders. For example, if you query a `limit` value of `10` and an `offset` value `0`, the endpoint returns 10 elements and 10 folders for a total of 20 items. The `totalCount` property in the `meta` response is the total count of **both** elements and folders."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T13:59:34.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:26.000Z\",\n            \"type\": \"api\",\n            \"id\": \"41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\",\n            \"parentFolderId\": 2,\n            \"name\": \"Reporting API\",\n            \"summary\": \"The reporting API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/41f6dc6d-d8ab-45c6-8506-74a25acf5d5f\"\n        }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        },\n        {\n            \"id\": 2,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2022-10-17T11:54:51.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2021-03-05T06:27:24.000Z\",\n            \"name\": \"Reporting\",\n            \"description\": null,\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"
						},
						{
							"name": "List Root Folder's Elements",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private?parentFolderId=0",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									],
									"query": [
										{
											"key": "parentFolderId",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"elements\": [\n        {\n            \"addedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"addedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"type\": \"api\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"parentFolderId\": 1,\n            \"name\": \"Billing API\",\n            \"summary\": \"The payments and account services API.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\"\n        },\n        {\n            \"addedBy\": 12345678,\n            \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n            \"updatedBy\": 12345678,\n            \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n            \"type\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Billing API Collection\",\n            \"summary\": \"The Billing API collection.\",\n            \"description\": null,\n            \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"parentFolderId\": 2,\n            \"environments\": [\n                \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n                \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n        ]\n      }\n    ],\n    \"folders\": [\n        {\n            \"id\": 1,\n            \"parentFolderId\": 0,\n            \"updatedAt\": \"2021-11-29T06:31:24.000Z\",\n            \"updatedBy\": 12345678,\n            \"createdBy\": 12345678,\n            \"createdAt\": \"2020-06-01T08:32:31.000Z\",\n            \"name\": \"Billing\",\n            \"description\": \"The Billing API.\",\n            \"type\": \"folder\"\n        }\n    ],\n    \"meta\": {\n        \"limit\": 1000,\n        \"offset\": 0,\n        \"totalCount\": 2\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Add an element or folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"{{elementType}}\": {\n        \"id\": \"{{elementId}}\",\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/network/private",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network",
								"private"
							]
						},
						"description": "Publishes a element or creates a folder in your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). An element is a Postman API, collection, or workspace.\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. The object's name must be one of the following:\n    - `api`\n        \n    - `folder`\n        \n    - `collection`\n        \n    - `workspace`\n        \n\nIn the `elementType` object, include the following values:\n\n**For APIs and Workspaces:**\n\n- `id` — A **string** value that contains the element's ID.\n    \n- `parentFolderId` — An **integer** value that contains the element's parent folder ID.\n    \n\n**For Collections:**\n\n- `id` — A **string** value that contains the collection's UID (`userId`\\-`collectionId`).\n    \n- `parentFolderId` — An **integer** value that contains the collection's parent folder ID.\n    \n- `environments` — An **array of strings** that contains environment UIDs (`userId`\\-`environmentId`).\n    \n\n**For Private API Network Folders:**\n\n- `name` — A **string** value that contains the folder's name.\n    \n- `description` — A **string** value that contains the folder's description.\n    \n- `parentFolderId` — An **integer** value that contains the folder's parent folder ID. To create a folder at the root level, omit this property from the request body."
					},
					"response": [
						{
							"name": "Add an API",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Add a Collection",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": null,\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Add a Collection with Environments",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"parentFolderId\": 1,\n        \"environments\": [\n              \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n              \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n            ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": null,\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb\",\n        \"7084-461d8126-22c8-43ed-b99d-27e8a34d8eef\"\n    ]\n}"
						},
						{
							"name": "Add a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Create a Folder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T18:00:39.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:00:39.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"An error has occurred on the server.\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update an element or folder",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"{{elementType}}\": {\n        \"parentFolderId\": {{parentFolderId}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/network/private/{{elementType}}/{{elementId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network",
								"private",
								"{{elementType}}",
								"{{elementId}}"
							]
						},
						"description": "Updates an element or folder in your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). When you call this endpoint, the `elementType` property must be the `api`, `folder`, `collection`, or `workspace` value.\n\nThe `elementId` value is the `api`, `folder`, or `workspace` element's ID. For `collection`, this value is the collection's UID (`userId`\\-`collectionId`).\n\nInclude the following in the request body object:\n\n- `elementType` — The Private API Network element type. The object's name must be one of the following:\n    - `api`\n        \n    - `folder`\n        \n    - `collection`\n        \n    - `workspace`\n        \n\nIn the `elementType` object, include the following values:\n\n- `parentFolderId` — A **string** value that contains the element's new Private API Network folder ID.\n    \n\n**For Collections:**\n\n- `summary` — A **string** value that contains the collection's new summary.\n    \n\n**For Private API Network Folders:**\n\nYou can include the following optional properties:\n\n- `description` — A **string** value that contains the folder's new description.\n    \n- `name` — A **string** value that contains the folder's new name."
					},
					"response": [
						{
							"name": "Update an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-06-09T14:48:45.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2021-10-11T09:39:33.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:54:33.000Z\",\n    \"type\": \"api\",\n    \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n    \"name\": \"Billing API\",\n    \"summary\": \"The payments and account services API.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/apis/fcf87a6d-6d10-4cfa-bed2-0c234ff99f7b\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Collection",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Collection's Environments",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"parentFolderId\": 1,\n        \"environments\": {\n            \"$add\": [\n                \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n                \"02466-c837-46ca-9sa1d8-7e669d1\"\n            ],\n            \"$remove\": [\n                \"024660a6-c837-46ca-9sa1d8-7e8dd7c669d1\"\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T18:22:15.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T18:22:15.000Z\",\n    \"type\": \"collection\",\n    \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"name\": \"Billing API Collection\",\n    \"summary\": \"The Billing API collection.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"parentFolderId\": 1,\n    \"environments\": [\n        \"660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1\",\n        \"02466-c837-46ca-9sa1d8-7e669d1\"\n    ]\n}"
						},
						{
							"name": "Update a Workspace",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"workspace",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"addedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"addedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:59:23.000Z\",\n    \"updatedBy\": 12345678,\n    \"updatedAt\": \"2022-12-07T17:59:23.000Z\",\n    \"type\": \"workspace\",\n    \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"name\": \"Billing Team Workspace\",\n    \"summary\": \"The Billing team's workspace.\",\n    \"description\": null,\n    \"href\": \"https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"parentFolderId\": 1\n}"
						},
						{
							"name": "Update a Folder",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"folder\": {\n        \"name\": \"Billing\",\n        \"description\": \"The Billing API.\",\n        \"parentFolderId\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"parentFolderId\": 0,\n    \"updatedAt\": \"2022-12-07T20:27:06.000Z\",\n    \"updatedBy\": 12345678,\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2022-12-07T17:04:23.000Z\",\n    \"name\": \"Billing\",\n    \"description\": \"The Billing API.\",\n    \"type\": \"folder\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"parentFolderId\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Remove an element or folder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/network/private/{{elementType}}/{{elementId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network",
								"private",
								"{{elementType}}",
								"{{elementId}}"
							]
						},
						"description": "Removes an element or delete a folder from your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).\n\n**Note:**\n\nRemoving an API, collection, or workspace element does not delete it. It only removes it from the Private API Network folder."
					},
					"response": [
						{
							"name": "Remove an API",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"
						},
						{
							"name": "Remove a Collection",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/collection/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"collection",
										"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Remove a Workspace",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/workspace/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"workspace",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Delete a Folder",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"folder\": {\n        \"id\": \"1\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified API does not exist.\"\n    }\n}"
						},
						{
							"name": "Folder Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"Instance not found for the model Folder, id 1\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Folder Not Empty",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/folder/1234",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"folder",
										"1234"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"folderNotEmptyError\",\n    \"message\": \"You need to empty this folder before deleting it.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"parentFolderId\": 1234\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/network/private/api/5360b75f-447e-467c-9299-12fd6c92450d",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"network",
										"private",
										"api",
										"5360b75f-447e-467c-9299-12fd6c92450d"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Private API Network** endpoints enable you to manage and work with your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). These endpoints are only available on Postman [<b>Enterprise </b>plans](https://www.postman.com/pricing/#enterprise-solutions)."
		},
		{
			"name": "Pull Requests",
			"item": [
				{
					"name": "Get a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pull-requests/{{pullRequestId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pull-requests",
								"{{pullRequestId}}"
							]
						},
						"description": "Gets information about a pull request, such as the source and destination details, who reviewed the pull request, the merge's current status, and whether the element is accessible."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"createdAt\": \"2024-02-20T09:55:46.000Z\",\n    \"updatedAt\": \"2024-02-20T09:58:38.000Z\",\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"title\": \"Test PR\",\n    \"description\": \"This is a test pull request.\",\n    \"createdBy\": \"12345678\",\n    \"updatedBy\": \"12345678\",\n    \"comment\": \"Missing descriptions in requests\",\n    \"forkType\": \"collection\",\n    \"source\": {\n        \"id\": \"87654321-3b79068c-dbe5-41d5-a826-51be4bf646ef\",\n        \"name\": \"test-collection\",\n        \"forkName\": \"Taylor Lee's fork\",\n        \"exists\": true // Whether the element is present and not deleted.\n    },\n    \"destination\": {\n        \"id\": \"123456789-24f57217-1169-4b7c-a810-0e957c04eaa5\",\n        \"name\": \"test-collection\",\n        \"exists\": true // Whether the element is present and not deleted.\n    },\n    \"status\": \"declined\", // The pull request's status: declined, open, approved\n    \"merge\": {\n        \"status\": \"inactive\" // The merge's current status: inactive, inprogress, failed\n    },\n    \"reviewers\": [\n        {\n            \"id\": \"12345678\",\n            \"status\": \"declined\"\n        }\n    ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have enough permissions to perform this action.\",\n    \"status\": 403\n}"
						}
					]
				},
				{
					"name": "Review a pull request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\": \"{{pullRequestAction}}\",\n    \"comment\": \"{{declineComment}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pull-requests/{{pullRequestId}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pull-requests",
								"{{pullRequestId}}",
								"tasks"
							]
						},
						"description": "Updates the [review](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/reviewing-pull-requests/) status of a pull request. Include the following in the request body:\n\n- `action` — (Required) A **string** that contains the action to perform on the pull request review:\n    \n    - `approve` — Approve the pull request for merge.\n        \n    - `decline` — Decline the pull request.\n        \n    - `merge` — Merge the pull request into its parent element.\n        \n    - `unapprove` — Revokes a pull request's `approve` status. This action does not decline the pull request.\n        \n- `comment` — If the pull request `action` is `decline`, a **string** that contains a comment about why the pull request was declined."
					},
					"response": [
						{
							"name": "Approved",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"approve\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"reviewedBy\": {\n        \"id\": 12345678,\n        \"name\": \"Taylor Lee\",\n        \"username\": \"taylor-lee\"\n    },\n    \"status\": \"approved\",\n    \"updatedAt\": \"2024-02-21T08:19:09.000Z\"\n}"
						},
						{
							"name": "Merged",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"merge\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"reviewedBy\": {\n        \"id\": 12345678,\n        \"name\": \"Taylor Lee\",\n        \"username\": \"taylor-lee\"\n    },\n    \"status\": \"merged\",\n    \"updatedAt\": \"2024-02-21T08:19:09.000Z\"\n}"
						},
						{
							"name": "Declined",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"decline\",\n    \"comment\": \"Missing descriptions in requests\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"reviewedBy\": {\n        \"id\": 12345678,\n        \"name\": \"Taylor Lee\",\n        \"username\": \"taylor-lee\"\n    },\n    \"status\": \"declined\",\n    \"updatedAt\": \"2024-02-21T08:19:09.000Z\"\n}"
						},
						{
							"name": "Unapproved",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"unapprove\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"reviewedBy\": {\n        \"id\": 12345678,\n        \"name\": \"Taylor Lee\",\n        \"username\": \"taylor-lee\"\n    },\n    \"status\": \"open\",\n    \"updatedAt\": \"2024-02-21T08:19:09.000Z\"\n}"
						},
						{
							"name": "Action Not Allowed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"decline\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"Given action on current pull request is not allowed\",\n    \"status\": 400\n}"
						},
						{
							"name": "Invalid Action",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"reject\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Value must be one of \\\"approve\\\", \\\"unapprove\\\", \\\"decline\\\", \\\"merge\\\"\",\n    \"detail\": \"POST request body for '/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks' failed to validate schema. Location: /properties/action/enum\",\n    \"status\": 400\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"unapproved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have enough permissions to perform this action.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"unapproved\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8/tasks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8",
										"tasks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						}
					]
				},
				{
					"name": "Update a pull request",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{pullRequestTitle}}\",\n    \"description\": \"{{pullRequestDescription}}\",\n    \"reviewers\": [\n        \"{{userId}}\",\n        \"{{userId}}\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pull-requests/{{pullRequestId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pull-requests",
								"{{pullRequestId}}"
							]
						},
						"description": "Updates an open pull request. Include the following in the request body:\n\n- `title` — (Required) A **string** that contains the title of the pull request.\n- `description` — A **string** that contains a description of the pull request.\n- `reviewers` — (Required) An **array of strings** that contains an updated list of the pull request's assigned reviewers. This replaces all existing users assigned to the pull request with those you pass in the request body."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Updated PR title\",\n    \"description\": \"Updated description of the pull request.\",\n    \"reviewers\": [\n        \"12345678\",\n        \"87654321\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4e1a6609-1a29-4037-a411-89ecc14c6cd8\",\n    \"createdAt\": \"2024-02-20T09:58:57.000Z\",\n    \"updatedAt\": \"2024-02-20T09:58:57.000Z\",\n    \"sourceId\": \"87654321-3b79068c-dbe5-41d5-a826-51be4bf646ef\",\n    \"destinationId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n    \"title\": \"Updated PR title\",\n    \"description\": \"Updated description of the pull request.\",\n    \"createdBy\": \"12345678\",\n    \"status\": \"open\",\n    \"forkType\": \"collection\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Updated PR title\",\n    \"description\": \"Updated description of the pull request.\",\n    \"reviewers\": [\n        \"12345678\",\n        \"87654321\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"You do not have enough permissions to perform this action.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Updated PR title\",\n    \"description\": \"Updated description of the pull request.\",\n    \"reviewers\": [\n        \"12345678\",\n        \"87654321\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/pull-requests/4e1a6609-1a29-4037-a411-89ecc14c6cd8",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"pull-requests",
										"4e1a6609-1a29-4037-a411-89ecc14c6cd8"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/conflict\",\n    \"title\": \"Conflict\",\n    \"detail\": \"You cannot modify a pull request which is already merged or declined.\",\n    \"status\": 409\n}"
						}
					]
				}
			],
			"description": "The **Pull Requests** endpoints enable you to manage your [pull requests](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/creating-pull-requests/) in Postman. Pull requests allow reviewers to look at your changes. Reviewers can make comments on your changes and will decide whether to approve them and merge them into the parent element."
		},
		{
			"name": "SCIM",
			"item": [
				{
					"name": "User Provisioning",
					"item": [
						{
							"name": "Get a user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Gets information about a Postman team member."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"{{userEmail}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"active\": {{boolean}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Updates a user in Postman.\n\n- `schemas` — An **array** that contains the `urn:ietf:params:scim:schemas:core:2.0:User` value.\n    \n- `userName` — A **string** value that contains the new user email address. The address must be a verified domain.\n    \n- `name` — An **object** that contains the user's `givenName` (first name) and `familyName` (last name).\n    \n- `active` — A **boolean** value set to one of the following values:\n    \n    - `true` — Activates the user. This lets them authenticate in to your Postman team.\n        \n    - `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.\n        \n\n### Reactivating users\n\nBy setting the `active` property from `false` to `true`, this reactivates an account. This allows the account to authenticate in to Postman and adds the account back on to your Postman team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Update User Email",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor.lee@example.com\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor.lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Unverified Domain",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor.lee@example.com\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to update the username for this user. - Domain is not verified\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid User Email Address",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor.lee@example.com\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to update the username for this user. - Please provide a valid email\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Action Not Allowed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "User Not in Team",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n        ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"locale\": \"en-US\",\n    \"groups\": [],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Create a user",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"{{userEmail}}\",\n    \"name\": {\n        \"givenName\": \"{{firstName}}\",\n        \"familyName\": \"{{lastName}}\"\n    },\n    \"externalId\": {{externalUserId}},\n    \"locale\": \"{{locale}}\",\n    \"groups\": [\n        \"{{groupId}}\"\n    ],\n    \"active\": {{boolean}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									]
								},
								"description": "Creates a new user account in Postman and adds the user to your organization's Postman team.\n\n- If the account does not exist, this also activates the user so they can authenticate in to your Postman team.\n    \n- If an account matching the email ID exists, the user receives [email invite](https://learning.postman.com/docs/administration/managing-your-team/manage-team-members/#manage-invites) to join the Postman team. The user joins the team when they accept the invite.\n    \n- If the user's email domain matches your team's verified domains, the user is immediately added to the team.\n    \n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/manage-team-members/#manage-team-roles).\n\n**Note:**\n\n- Users must join the team before you can assign them to any groups.\n    \n- If the user is a member of a different team during SCIM provisioning and their email domain is **not** verified with your Postman team, then the user is **not** provisioned. The endpoint returns an HTTP `409 Conflict` response."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Create User In Group",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"groups\": [\n        \"g3d420314611061d6461b2b27487dcf2e58e39d744c8542f\"\n    ],\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"taylor-lee@example.com\",\n            \"type\": \"work\",\n            \"display\": \"taylor-lee@example.com\"\n        }\n    ],\n    \"externalId\": \"12345678\",\n    \"active\": true,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "No Slots Available",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person is already a member of the team.\",\n    \"scimType\": \"uniqueness\",\n    \"status\": \"409\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"displayName\": \"Taylor Lee\",\n    \"locale\": \"en-US\",\n    \"active\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Get all users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "<integer>",
											"description": "The index entry by which to begin the list of returned results. Must be a value of `1` or greater.",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Filter results by a specific word or phrase. This query parameter accepts the following:\n- `userName` — Filter values are case-sensitive, and special characters and spaces must be URL encoded.\n- `active` — Return only users who are active (`true`) or inactive (`false`).",
											"disabled": true
										},
										{
											"key": "count",
											"value": "<integer>",
											"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users.",
											"disabled": true
										}
									]
								},
								"description": "Gets information about all Postman team members."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "50"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"alex.cruz@example.com\",\n            \"name\": {\n                \"givenName\": \"Alex\",\n                \"familyName\": \"Cruz\"\n            },\n            \"externalId\": \"87654321\",\n            \"active\": false,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "No Results Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 0,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"
								},
								{
									"name": "Filter Results",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=userName eq \"taylor%2Dlee@example.com\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "userName eq \"taylor%2Dlee@example.com\""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 1,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"taylor-lee@example.com\",\n            \"name\": {\n                \"givenName\": \"Taylor\",\n                \"familyName\": \"Lee\"\n            },\n            \"externalId\": \"12345678\",\n            \"active\": true,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Filter Inactive Users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=active eq \"false\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "active eq \"false\""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 1,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:User\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"userName\": \"alex.cruz@example.com\",\n            \"name\": {\n                \"givenName\": \"Alex\",\n                \"familyName\": \"Cruz\"\n            },\n            \"externalId\": \"87654321\",\n            \"active\": false,\n            \"meta\": {\n                \"resourceType\": \"User\",\n                \"created\": \"2021-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "No Filter Results Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=userName eq \"taylor%2Dlee@example.com\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "userName eq \"taylor%2Dlee@example.com\""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 0,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"
								},
								{
									"name": "Invalid Filter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?filter=userName ne \"taylor%2Dlee@example.com\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "filter",
													"value": "userName ne \"taylor%2Dlee@example.com\""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users?startIndex=1&count=50",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "50"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "10",
													"disabled": true
												}
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": {{boolean}}\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users/{{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users",
										"{{userId}}"
									]
								},
								"description": "Updates a user in Postman.\n\nWhen updating the user's `active` state, include the following in the `Operations` array of objects:\n\n- `op` — A **string** value that contains the operation to perform. Accepts `replace`.\n    \n- `value` — An **object** that contains the following:\n    \n    - `active` — A **boolean** value set to one of the following values:\n        \n        - `true` — Activates the user. This lets them authenticate in to your Postman team.\n            \n        - `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.\n            \n\nWhen updating a username, include the following in the `Operations` array of objects:\n\n- `op` — A **string** value that contains the operation to perform. Accepts `replace`.\n    \n- `path` — A **string** that contains the `userName` value.\n    \n- `value` — A **string** value that contains the new username (email address). The address must be a verified domain.\n    \n\n### Reactivating users\n\nBy setting the `active` property from `false` to `true`, this reactivates an account. This allows the account to authenticate in to Postman and adds the account back on to your Postman team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor-lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": false,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Update User Email",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"userName\",\n            \"value\": \"taylor.lee@example.com\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n    \"userName\": \"taylor.lee@example.com\",\n    \"name\": {\n        \"givenName\": \"Taylor\",\n        \"familyName\": \"Lee\"\n    },\n    \"externalId\": \"12345678\",\n    \"active\": false,\n    \"meta\": {\n        \"resourceType\": \"User\",\n        \"created\": \"2021-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2021-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"You’ve used operation that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unverified Domain",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"userName\",\n            \"value\": \"taylor.lee@example.com\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to update the username for this user. - Domain is not verified\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid User Email Address",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"userName\",\n            \"value\": \"taylor.lee@example.com\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to update the username for this user. - Please provide a valid email\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Team doesn't exist.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Team Mismatch",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Too Many Requests",
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{SCIM-apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Users/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to provision and manage your Postman users.\n\n> You can only deactivate users with the SCIM API. You cannot permanently delete users with the API. \n  \n\n### Provisioning users with the SCIM API\n\n- Users created with the SCIM API are automatically created in Postman.\n    \n    - If the account's email ID does not exist, the user is also added to their organization's Postman team.\n        \n    - If the account's email ID already exists, the system sends the user an email invite to join the Postman team. After they accept the invite, the are added to the team.\n        \n    - If the user's email domain matches your team's verified domains, the user is immediately added to the team.\n        \n- By default, new users are given the developer role in Postman. Postman user roles cannot be updated via the SCIM API. You must manage user and group roles in Postman."
				},
				{
					"name": "Group Provisioning",
					"item": [
						{
							"name": "Get all groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Groups"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "<integer>",
											"description": "The index entry by which to begin the list of returned results. Must be a value of `1` or greater.",
											"disabled": true
										},
										{
											"key": "count",
											"value": "<integer>",
											"description": "Limit the number of results returned in a single response. By default, the system returns a list of 100 users.",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "displayName",
											"description": "Filter results by a specific word or phrase. This query parameter only supports the `displayName` filter and has the following requirements:\n- Filter values are case-sensitive.\n- Special characters and spaces must be URL encoded.",
											"disabled": true
										}
									]
								},
								"description": "Gets all Postman groups within the team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 2,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 2,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"TestAPI\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        },\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"displayName\": \"Test Group\",\n            \"members\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"Taylor Lee\"\n                },\n                {\n                    \"value\": \"ghc794f24f4c49f4b5d503a4cb2686e90\",\n                    \"display\": \"Alex Cruz\"\n                }\n            ],\n            \"externalId\": \"4321\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "Filter Results",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?filter=displayName eq \"TestAPI\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "filter",
													"value": "displayName eq \"TestAPI\""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 1,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 1,\n    \"Resources\": [\n        {\n            \"schemas\": [\n                \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n            ],\n            \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n            \"displayName\": \"TestAPI\",\n            \"members\": [\n                {\n                    \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n                    \"display\": \"Taylor Lee\"\n                }\n            ],\n            \"externalId\": \"1234\",\n            \"meta\": {\n                \"resourceType\": \"Group\",\n                \"created\": \"2022-02-22T04:24:13.000Z\",\n                \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n            }\n        }\n    ]\n}"
								},
								{
									"name": "No Results Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n    ],\n    \"totalResults\": 0,\n    \"startIndex\": 1,\n    \"itemsPerPage\": 0,\n    \"Resources\": []\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Filter",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups?startIndex=1&count=2&filter=displayName ne \"TestAPI\"",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "2"
												},
												{
													"key": "filter",
													"value": "displayName ne \"TestAPI\""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t fetch members of the team.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Update a group",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PutOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"{{operation}}\",\n            \"value\": {\n                \"id\": \"{{groupId}}\",\n                \"displayName\": \"{{userGroupName}}\"\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Groups/{{groupId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Updates a group's information. Using this endpoint you can:\n\n- Update a group's name.\n- Add or remove members from a Postman group.\n    \n\nInclude the following properties in the request body:\n\n- `Operations` — An **object** that contains the following properties:\n    - `op` — The operation to perform. One of:\n        - `add`\n        - `remove`\n        - `replace`\n    - `value` — An **object** that contains the following properties:\n        - `id` — The group's ID.\n        - `displayName` — The group's display name."
							},
							"response": [
								{
									"name": "Update a Group Name",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"TestAPI\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": null,\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Add Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Remove Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Replace Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                },\n                {\n                    \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n                    \"display\": \"alex.cruz@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        },\n        {\n            \"value\": \"89bb1940b90545759e7f6f887cfb368e\",\n            \"display\": \"alex.cruz@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Add and Remove Team Members",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"members[value eq \\\"89bb1940b90545759e7f6f887cfb368e\\\"]\"\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"members\",\n            \"value\": [\n                {\n                    \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n                    \"display\": \"taylor.lee@example.com\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"23a35c2723d34c03b4c56443c09e7173\",\n            \"display\": \"taylor.lee@example.com\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s username. Try again — it should work next time around.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Admin Team Mismatch",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"The admin is not allowed to perform this action.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This person isn’t a member of the team.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n    ],\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                \"displayName\": \"Test-API\"\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Get a group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Groups/{{groupId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Gets information about a Postman group within the team."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Create a group",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:Group\"],\n    \"displayName\": {{ userGroup }},\n    \"members\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Groups"
									]
								},
								"description": "Creates a new user group in Postman and creates a new account for each group member.\n\nEach account is added to your Postman team and authentication is activated for each user. If an existing Postman account uses an email that matches a group member's email ID, an [email invite](https://postman.postman.co/docs/administration/managing-your-team/managing-your-team/#invites) to join your Postman team is sent to that user. Once the user accepts the invite, they'll be added to your team.\n\nBy default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles)."
							},
							"response": [
								{
									"name": "Group Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Group Created with Members",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n    \"displayName\": \"TestAPI\",\n    \"members\": [\n        {\n            \"value\": \"b1c794f24f4c49f4b5d503a4cb2686ea\",\n            \"display\": \"Taylor Lee\"\n        }\n    ],\n    \"externalId\": \"1234\",\n    \"meta\": {\n        \"resourceType\": \"Group\",\n        \"created\": \"2022-02-22T04:24:13.000Z\",\n        \"lastModified\": \"2022-02-22T04:24:13.000Z\"\n    }\n}"
								},
								{
									"name": "Invalid Syntax",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"invalidSyntax\",\n    \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Invalid Team",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "No Slots Available",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"scimType\": \"uniqueness\",\n    \"detail\": \"This person is already a member of the team.\",\n    \"status\": \"409\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    ],\n    \"displayName\": \"TestAPI\",\n    \"members\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n    \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Delete a group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Groups/{{groupId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Groups",
										"{{groupId}}"
									]
								},
								"description": "Deletes a group in Postman. On success, this returns an HTTP `204 No Content` response.\n\nUser accounts that were in the deleted group are deactivated in Postman if the app is assigned to the user only with the deleted group.\n\nUser accounts and the data corresponding to them are **not** deleted. To permanently delete user accounts and their data, [contact Postman support](https://www.postman.com/support/)."
							},
							"response": [
								{
									"name": "Group Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apikey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This Postman team doesn’t exist anymore.\",\n    \"status\": \"400\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "invalidApiKey"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n    \"status\": \"401\"\n}"
								},
								{
									"name": "Invalid API Key",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n    \"status\": \"403\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"This group isn’t a member of the team.\",\n    \"status\": \"404\"\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n    \"status\": 429\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{apiKey}}"
											}
										],
										"url": {
											"raw": "https://api.getpostman.com/scim/v2/Groups/405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"scim",
												"v2",
												"Groups",
												"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:api:messages:2.0:Error\"\n    ],\n    \"detail\": \"Unable to fetch information about this team member.\",\n    \"status\": \"500\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to provision and manage your Postman groups."
				},
				{
					"name": "Get resource types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/ResourceTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"ResourceTypes"
							]
						},
						"description": "Gets all the resource types supported by Postman's SCIM API."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/scim/v2/ResourceTypes",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"scim",
										"v2",
										"ResourceTypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"\n        ],\n        \"id\": \"User\",\n        \"name\": \"User\",\n        \"endpoint\": \"/Users\",\n        \"description\": \"User Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:User\",\n        \"schemaExtensions\": [\n            {\n                \"schema\": \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\",\n                \"required\": true\n            }\n        ]\n    },\n    {\n        \"schemas\": [\n            \"urn:ietf:params:scim:schemas:core:2.0:ResourceType\"\n        ],\n        \"id\": \"Group\",\n        \"name\": \"Group\",\n        \"endpoint\": \"/Groups\",\n        \"description\": \"Group Account\",\n        \"schema\": \"urn:ietf:params:scim:schemas:core:2.0:Group\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get service provider configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/ServiceProviderConfig",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"ServiceProviderConfig"
							]
						},
						"description": "Gets the Postman SCIM API configuration information. This includes a list of supported operations."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/ServiceProviderConfig",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"ServiceProviderConfig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\"\n    ],\n    \"documentationUri\": \"https://learning.postman.com/docs/administration/managing-your-team/configuring-scim\",\n    \"patch\": {\n        \"supported\": true\n    },\n    \"bulk\": {\n        \"supported\": false,\n        \"maxOperations\": 0,\n        \"maxPayloadSize\": 0\n    },\n    \"filter\": {\n        \"supported\": true,\n        \"maxResults\": 100\n    },\n    \"changePassword\": {\n        \"supported\": false\n    },\n    \"sort\": {\n        \"supported\": false\n    },\n    \"etag\": {\n        \"supported\": false\n    },\n    \"authenticationSchemes\": [\n        {\n            \"name\": \"OAuth Bearer Token\",\n            \"description\": \"Authentication scheme using the OAuth Bearer Token Standard\",\n            \"specUri\": \"http://www.rfc-editor.org/info/rfc6750\",\n            \"type\": \"oauthbearertoken\"\n        }\n    ],\n    \"meta\": {\n        \"resourceType\": \"ServiceProviderConfig\",\n        \"location\": \"https://api.getpostman.com/scim/v2/ServiceProviderConfig\"\n    }\n}"
						}
					]
				}
			],
			"description": "Postman supports [SCIM](https://learning.postman.com/docs/administration/scim-provisioning/scim-provisioning-overview/) (System for Cross-domain Identity Management), which allows you to automate your team's provisioning. You can deploy Postman at scale across your organization and control access to it with your identity provider.\n\nSCIM provisioning is only available with a Postman [<b>Enterprise</b> plan](https://www.postman.com/pricing).\n\n**Note:**\n\n- While all other endpoints in this collection require a Postman API key, **these endpoints require a** [<b>SCIM API key</b>](https://learning.postman.com/docs/administration/scim-provisioning/scim-provisioning-overview/#generating-scim-api-key)**.**\n    \n- You must be a [Team Admin](http://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) to enable SCIM.\n    \n- To use SCIM, you must have only **one** SSO method configured. If you have more than one SSO method enabled, you cannot generate an SCIM API key.\n    \n- You can only deactivate users with the SCIM API. You cannot permanently delete users with the API.\n    \n- You must [configure SSO](https://learning.postman.com/docs/administration/sso/admin-sso/) and [enable SCIM](http://learning.postman.com/docs/administration/managing-your-team/configuring-scim/#enabling-scim-provisioning) for your Postman team to use these endpoints.\n    \n\n### Rate limits\n\nFor your organization's team, Postman applies per-minute rate limits across all SCIM API endpoints. This helps ensure that you have the best experience using Postman's SCIM API. The rate limits apply as follows:\n\n- **Write (POST, PUT, PATCH)** — 180 requests per minute.\n    \n- **Read (GET)** — 300 requests per minute.\n    \n\nIf you reach the rate limit, the API will return an HTTP `429 Too Many Requests` response.",
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "key",
						"value": "Authorization",
						"type": "string"
					},
					{
						"key": "value",
						"value": "{{SCIM-apiKey}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "Secret Scanner",
			"item": [
				{
					"name": "Detected Secrets",
					"item": [
						{
							"name": "Update detected secret resolution status",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"resolution\": \"{{secretResolutionStatus}}\",\n    \"workspaceId\": \"{{workspaceId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/detected-secrets/{{secretId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"detected-secrets",
										"{{secretId}}"
									]
								},
								"description": "Updates the resolution status of a secret detected in a workspace.\n\nInclude the following in the request body:\n\n- `resolution` — A **string** value that contains the secret's updated resolution status:\n    \n    - `FALSE_POSITIVE` — The discovered secret is not an actual secret.\n        \n    - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.\n        \n    - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of publishing it.\n        \n- `workspaceId` — A **string** value that contains the ID of the workspace that contains the secret."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"secretHash\": \"50dbd2...\",\n    \"workspaceId\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"history\": [\n        {\n            \"actor\": 12345678,\n            \"createdAt\": \"2024-09-18T18:46:26.000Z\",\n            \"resolution\": \"FALSE_POSITIVE\"\n        },\n        {\n            \"actor\": 12345678,\n            \"createdAt\": \"2024-09-18T18:43:11.000Z\",\n            \"resolution\": \"ACCEPTED_RISK\"\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"
								},
								{
									"name": "Missing Advanced Security Administration Add-On",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"FORBIDDEN\",\n    \"title\": \"This feature is only available with \\\"Advanced Security Administration\\\" add-on. Contact your team admin to purchase this add-on.\",\n    \"instance\": \"\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"ACCEPTED_RISK\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"
								}
							]
						},
						{
							"name": "Get detected secrets locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/detected-secrets/{{secretId}}/locations?workspaceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"detected-secrets",
										"{{secretId}}",
										"locations"
									],
									"query": [
										{
											"key": "workspaceId",
											"value": "<string>",
											"description": "(Required) The workspace's ID."
										},
										{
											"key": "resourceType",
											"value": "<string>",
											"description": "Return only results that match the given resource type. One of:\n- `collection`\n- `environment`\n- `extensible-collection`\n- `globals`\n- `example`\n- `request`\n- `folder`\n- `extensible-collection-meta`\n- `extensible-request`\n- `extensible-folder`\n- `extensible-example`\n- `extensible-message`\n- `api-definition-file`\n- `api-definition`",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "<string>",
											"description": "Return only results created since the given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be later than the `until` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "<string>",
											"description": "Return only results created until this given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be earlier than the `since` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										}
									]
								},
								"description": "Gets the locations of secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/)."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"isResourceDeleted\": false,\n      \"leakedBy\": 12345678,\n      \"location\": \"Headers\",\n      \"occurrences\": 1,\n      \"parentResourceId\": \"12345678-14728df4-c7af-424f-b665-5047b7d25866\",\n      \"resourceId\": \"12345678-e0df25e0-d245-40dd-89b5-68720d186d3f\",\n      \"resourceType\": \"example\",\n      \"detectedAt\": \"2023-04-25T08:13:48.000Z\",\n      \"url\": \"https://go.postman.co/build/workspace/80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0/example/12345678-e0df25e0-d245-40dd-89b5-68720d186d3f\"\n    }\n  ],\n  \"meta\": {\n    \"activityFeed\": [\n      {\n        \"resolvedBy\": null,\n        \"status\": \"ACTIVE\",\n        \"resolvedAt\": null\n      }\n    ],\n    \"cursor\": \"MTIyNjY5Nw==\",\n    \"limit\": 2,\n    \"nextCursor\": null,\n    \"obfuscatedSecret\": \"PMAK-644781584627df042afa6655-******ba\",\n    \"secretHash\": \"0096b35ef6621d7571f106fefee5b10e8ed360cc9bf04f343f267ca4ff65bb5d\",\n    \"secretType\": \"Postman API Key\",\n    \"total\": 3\n  }\n}"
								},
								{
									"name": "Filter by resourceType",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&resourceType=example",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "resourceType",
													"value": "example"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"total\": 6,\n        \"obfuscatedSecret\": \"Basic Q2******\",\n        \"secretType\": \"Basic Auth\",\n        \"secretHash\": \"0096b35ef6621d7571f106fefee5b10e8ed360cc9bf04f343f267ca4ff65bb5d\",\n        \"limit\": 30,\n        \"cursor\": null,\n        \"nextCursor\": null,\n        \"activityFeed\": [\n            {\n                \"status\": \"ACTIVE\",\n                \"resolvedAt\": null,\n                \"resolvedBy\": null\n            }\n        ]\n    },\n    \"data\": [\n        {\n            \"resourceId\": \"12345678-400005df-3cad-480c-a027-ea68aed35b60\",\n            \"resourceType\": \"example\",\n            \"location\": \"Headers\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-320cdb51-d3e2-496b-be0d-d0854e07f90b\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n        },\n        {\n            \"resourceId\": \"12345678-400005df-3cad-480c-a027-ea68aed35b60\",\n            \"resourceType\": \"example\",\n            \"location\": \"Request Query Params\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-320cdb51-d3e2-496b-be0d-d0854e07f90b\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n        },\n        {\n            \"resourceId\": \"12345678-400005df-3cad-480c-a027-ea68aed35b60\",\n            \"resourceType\": \"example\",\n            \"location\": \"Response Body\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-320cdb51-d3e2-496b-be0d-d0854e07f90b\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n        },\n        {\n            \"resourceId\": \"12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\",\n            \"resourceType\": \"example\",\n            \"location\": \"Headers\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-e6a5c06e-c523-40de-94af-c6d01af494bb\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\"\n        },\n        {\n            \"resourceId\": \"12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\",\n            \"resourceType\": \"example\",\n            \"location\": \"Request Query Params\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-e6a5c06e-c523-40de-94af-c6d01af494bb\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\"\n        },\n        {\n            \"resourceId\": \"12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\",\n            \"resourceType\": \"example\",\n            \"location\": \"Response Body\",\n            \"occurrences\": 1,\n            \"leakedBy\": 12345678,\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"isResourceDeleted\": false,\n            \"parentResourceId\": \"12345678-e6a5c06e-c523-40de-94af-c6d01af494bb\",\n            \"url\": \"https://go.postman.co/build/workspace/01cb2666-9e05-47d3-9043-3b4743f42f1a/example/12345678-1e09e897-7ce8-4aea-bbfd-113b8a5ce083\"\n        }\n    ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"aaa\",\n    \"status\": 400,\n    \"title\": \"limit specified is invalid\",\n    \"type\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Invalid Resolution Type",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolution\": \"TEST\",\n    \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/MTc0ODA0Mw==",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"MTc0ODA0Mw=="
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"BAD_REQUEST\",\n    \"title\": \"`resolution` must be one of FALSE_POSITIVE, ACCEPTED_RISK, REVOKED, ACTIVE\",\n    \"instance\": \"TEST\",\n    \"status\": 400\n}"
								},
								{
									"name": "Invalid resourceType Filter",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&resourceType=collections",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "resourceType",
													"value": "collections"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"BAD_REQUEST\",\n    \"title\": \"Invalid resourceType specified\",\n    \"instance\": \"collections\",\n    \"status\": 400\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"
								},
								{
									"name": "Missing Advanced Security Administration Add-On",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"FORBIDDEN\",\n    \"title\": \"This feature is only available with \\\"Advanced Security Administration\\\" add-on. Contact your team admin to purchase this add-on.\",\n    \"instance\": \"\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets/OTI3OTYx/locations?workspaceId=e361eeb4-00dd-4225-9774-6146a2555999&limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets",
												"OTI3OTYx",
												"locations"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "e361eeb4-00dd-4225-9774-6146a2555999"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"
								}
							]
						},
						{
							"name": "Search detected secrets",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secretTypes\": [\n        \"{{secretTypeIds}}\"\n    ],\n    \"resolved\": {{boolean}},\n    \"statuses\": [\n        \"{{secretStatuses}}\"\n    ],\n    \"resources\": [\n        {\n            \"type\": {{resourceType}},\n            \"ids\": [\n                \"{{resourceID}}\"\n            ]\n        }\n    ],\n    \"workspaceIds\": [\n        \"{{workspaceIds}}\"\n    ],\n    \"workspaceVisibilities\": [\n        \"{{workspaceVisibility}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/detected-secrets-queries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"detected-secrets-queries"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of rows to return in the response.",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "The pointer to the first record of the set of paginated results.",
											"disabled": true
										},
										{
											"key": "include",
											"value": "<string>",
											"description": "The additional fields to be included as a part of the request:\n- `meta.total` — Include the total records found in the `meta` response object.",
											"disabled": true
										},
										{
											"key": "since",
											"value": "<string>",
											"description": "Return only results created since the given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be later than the `until` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										},
										{
											"key": "until",
											"value": "<string>",
											"description": "Return only results created until this given time, in [ISO 8601](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. This value cannot be earlier than the `since` value.\n\nTo use time-numoffset format, you must use `%2B` URL-encoding for the `+` character.",
											"disabled": true
										}
									]
								},
								"description": "Returns all secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/), grouped by workspace or resource. If you pass an empty request body, this endpoint returns all results.\n\nYou can include the following properties in the request body:\n\n- `secretTypes` — An **array** that contains a list of secrets types to query. For a list of valid IDs, use the GET `/secret-types` endpoint.\n    \n- `resolved` — A **boolean** value that, if true, return secrets with a `resolved` status.\n    \n- `statuses` — An **array** that contains a list of the secret resolution status type:\n    \n    - `FALSE_POSITIVE` — The discovered secret is not an actual secret.\n        \n    - `REVOKED` — The secret is valid, but the user rotated their key to resolve the issue.\n        \n    - `ACCEPTED_RISK` — The Secret Scanner found the secret, but user accepts the risk of publishing it.\n        \n- `resources` — An **array of objects** that contains a list of resources to query:\n    \n    - `type` — The type of resource:\n        \n        - `collection`\n            \n        - `environment`\n            \n        - `extensible-collection`\n            \n        - `globals`\n            \n        - `example`\n            \n        - `request`\n            \n        - `folder`\n            \n        - `extensible-collection-meta`\n            \n        - `extensible-request`\n            \n        - `extensible-folder`\n            \n        - `extensible-example`\n            \n        - `extensible-message`\n            \n        - `api-definition-file`\n            \n        - `api-definition`\n            \n    - `ids` — An **array of string** containing the element IDs to search.\n        \n- `workspaceIds` — An **array** that contains a list of workspaces IDs to query.\n    \n- `workspaceVisibilities` — An **array** that contains a list of workspace [visibility settings](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) to query. This currently supports the `team` and `public` settings.\n    \n\n**Note:**\n\nThe `workspaceIds` and `resources` properties are mutually exclusive. You can only use one in a request. If you pass both, the API returns an HTTP 400 `Bad Request` response."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"limit\": 2,\n        \"nextCursor\": \"MTA4\"\n    },\n    \"data\": [\n        {\n            \"detectedAt\": \"2023-05-19T02:45:31.000Z\",\n            \"secretType\": \"Airtable API Key\",\n            \"workspaceVisibility\": \"team\",\n            \"secretHash\": \"07afd1f787f3555d441b04870dbe1025db8309fbeb31f25b3a20f2f1241478b3\",\n            \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n            \"secretId\": \"OTI3OTYx\",\n            \"obfuscatedSecret\": \"keyTF2WAH******\",\n            \"resolution\": \"FALSE_POSITIVE\",\n            \"occurrences\": 3\n        },\n        {\n            \"detectedAt\": \"2023-03-23T19:38:49.000Z\",\n            \"secretType\": \"Slack Access Token\",\n            \"workspaceVisibility\": \"team\",\n            \"secretHash\": \"08074c0954fd29d1ee82ab5af9b4ad16f56b0907eca72446e98dc97e10da80a3\",\n            \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n            \"secretId\": \"NDcyMjA=\",\n            \"obfuscatedSecret\": \"xoxp-25519******\",\n            \"resolution\": \"ACCEPTED_RISK\",\n            \"occurrences\": 1\n        }\n    ]\n}"
								},
								{
									"name": "With include Query Parameter",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?include=meta.total",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "include",
													"value": "meta.total"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"limit\": 2,\n        \"nextCursor\": \"MTA4\",\n        \"total\": 10\n    },\n    \"data\": [\n        {\n            \"detectedAt\": \"2023-05-19T02:45:31.000Z\",\n            \"secretType\": \"Airtable API Key\",\n            \"workspaceVisibility\": \"team\",\n            \"secretHash\": \"07afd1f787f3555d441b04870dbe1025db8309fbeb31f25b3a20f2f1241478b3\",\n            \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n            \"secretId\": \"OTI3OTYx\",\n            \"obfuscatedSecret\": \"keyTF2WAH******\",\n            \"resolution\": \"FALSE_POSITIVE\",\n            \"occurrences\": 3\n        },\n        {\n            \"detectedAt\": \"2023-03-23T19:38:49.000Z\",\n            \"secretType\": \"Slack Access Token\",\n            \"workspaceVisibility\": \"team\",\n            \"secretHash\": \"08074c0954fd29d1ee82ab5af9b4ad16f56b0907eca72446e98dc97e10da80a3\",\n            \"workspaceId\": \"e361eeb4-00dd-4225-9774-6146a2555999\",\n            \"secretId\": \"NDcyMjA=\",\n            \"obfuscatedSecret\": \"xoxp-25519******\",\n            \"resolution\": \"ACCEPTED_RISK\",\n            \"occurrences\": 1\n        }\n    ]\n}"
								},
								{
									"name": "Filter by Resource Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolved\": false,\n    \"resources\": [\n        {\n            \"type\": \"example\",\n            \"ids\": [\n                \"12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n              ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"limit\": \"30\",\n        \"nextCursor\": null\n    },\n    \"data\": [\n        {\n            \"detectedAt\": \"2023-03-23T19:30:58.000Z\",\n            \"secretType\": \"Basic Auth\",\n            \"workspaceVisibility\": \"team\",\n            \"secretHash\": \"3b4db9cb32935e885468d80744a65194b7abdb18bb91ce6cbc2ad7852057d96e\",\n            \"workspaceId\": \"01cb2666-9e05-47d3-9043-3b4743f42f1a\",\n            \"resourceId\": \"12345678-400005df-3cad-480c-a027-ea68aed35b60\",\n            \"resourceType\": \"example\",\n            \"secretId\": \"MTAxOTQ0Mw==\",\n            \"obfuscatedSecret\": \"Basic Q2******\",\n            \"resolution\": \"ACTIVE\",\n            \"occurrences\": 3\n        }\n    ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=aaa",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "aaa"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"aaa\",\n    \"status\": 400,\n    \"title\": \"limit specified is invalid\",\n    \"type\": \"BAD_REQUEST\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"
								},
								{
									"name": "Invalid Filters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolved\": true,\n    \"resources\": [\n        {\n            \"type\": \"example\",\n            \"ids\": [\n                \"12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n              ]\n        }\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"BAD_REQUEST\",\n    \"title\": \"Invalid filters specified\",\n    \"instance\": \"\",\n    \"status\": 400,\n    \"detail\": \"`workspaceIds` and `resources` filters are exclusive - only one can be applied at a time.\"\n}"
								},
								{
									"name": "Missing Resource Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resolved\": false,\n    \"resources\": [\n        {\n            \"ids\": [\n                \"12345678-400005df-3cad-480c-a027-ea68aed35b60\"\n              ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"BAD_REQUEST\",\n    \"title\": \"Invalid resources specified\",\n    \"instance\": \"\",\n    \"status\": 400,\n    \"detail\": \"one or more `resources` are invalid.\"\n}"
								},
								{
									"name": "Missing Advanced Security Administration Add-On",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"FORBIDDEN\",\n    \"title\": \"This feature is only available with \\\"Advanced Security Administration\\\" add-on. Contact your team admin to purchase this add-on.\",\n    \"instance\": \"\",\n    \"status\": 403\n}"
								},
								{
									"name": "Feature Unavailable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"secretTypes\": [\n        \"1a7ec5d1-dcba-4ec7-8220-3c1ee490416b\",\n        \"3b6ec9d2-dabc-5e67-1220-6coie490416b\"\n    ],\n    \"resolved\": true,\n    \"statuses\": [\n        \"ACCEPTED_RISK\",\n        \"REVOKED\"\n    ],\n    \"workspaceIds\": [\n        \"0fe6c2f2-022d-48f7-8e7e-3244369445b0\",\n        \"80ab14ae-c17d-4fd6-88d5-99bf13f0b7f0\"\n    ],\n    \"workspaceVisibilities\": [\n        \"team\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/detected-secrets-queries?limit=2",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"detected-secrets-queries"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage secrets detected by the Postman [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/)."
				},
				{
					"name": "Get secret types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/secret-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret-types"
							]
						},
						"description": "Gets the metadata of the secret types supported by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/). You can use a secret type's ID in the response to query data with the POST `/detected-secrets/{secretId}` endpoint."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"total\": 4\n    },\n    \"data\": [\n        {\n            \"name\": \"Postman Collection Key\",\n            \"id\": \"04084949-0dda-4735-ace5-f83038f7b200\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Planetscale API Token\",\n            \"id\": \"082351ca-810e-476b-8437-d098b20fba4b\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Open AI API Key\",\n            \"id\": \"0987c237-c1d0-4f07-a1af-a5772facf866\",\n            \"type\": \"DEFAULT\"\n        },\n        {\n            \"name\": \"Picatic API Key\",\n            \"id\": \"0eac968d-f65e-4f3d-9a34-c02138072835\",\n            \"type\": \"DEFAULT\"\n        }\n    ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"instance\": \"\",\n    \"status\": 401,\n    \"title\": \"Unauthorized. Please try again with valid credentials.\",\n    \"type\": \"UNAUTHORIZED\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"instance\": \"\",\n    \"status\": 403,\n    \"title\": \"Only members with Superadmin, Admin, or Workspace Admin roles can view the detected secrets.\",\n    \"type\": \"FORBIDDEN\"\n}"
						},
						{
							"name": "Missing Advanced Security Administration Add-On",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"FORBIDDEN\",\n    \"title\": \"This feature is only available with \\\"Advanced Security Administration\\\" add-on. Contact your team admin to purchase this add-on.\",\n    \"instance\": \"\",\n    \"status\": 403\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/secret-types",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"secret-types"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"instance\": \"\",\n    \"status\": 500,\n    \"title\": \"An error occurred\",\n    \"type\": \"SERVER_ERROR\"\n}"
						}
					]
				}
			],
			"description": "The **Secret Scanner** endpoints enable you to manage the secrets detected by Postman's [Secret Scanner](https://learning.postman.com/docs/administration/secret-scanner/). These endpoints are only available on Postman [<b>Enterprise</b> plans](https://www.postman.com/pricing/#enterprise-solutions) with the **Advanced Security Administration** add-on feature."
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get elements by tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags/{{slugId}}/entities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"{{slugId}}",
								"entities"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of tagged elements to return in a single call.",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "<string>",
									"description": "The ascending (`asc`) or descending (`desc`) order to sort the results by, based on the time of the element's tagging.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "The cursor to get the next set of results in the paginated response. Use the `nextCursor` value in the response's `meta` object for this value.\n\nIf you pass an invalid value, the API only returns the first set of results.",
									"disabled": true
								},
								{
									"key": "entityType",
									"value": "<string>",
									"description": "Filter results for the given element type:\n- `api`\n- `collection`\n- `workspace`",
									"disabled": true
								}
							]
						},
						"description": "Gets Postman elements (entities) by a given tag. Tags enable you to organize and search [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#tagging-a-workspace), [APIs](https://learning.postman.com/docs/designing-and-developing-your-api/managing-apis/#tagging-apis), and [collections](https://learning.postman.com/docs/collections/using-collections/#tagging-a-collection) that contain shared tags.\n\n**Note:**\n\nTagging is available on [Postman Enterprise plans](https://www.postman.com/pricing/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"entities\": [\n            {\n                \"entityId\": \"8b86dfe8-de72-44e6-81ea-79d19805bc6a\",\n                \"entityType\": \"api\"\n            }\n        ]\n    },\n    \"meta\": {\n        \"count\": 1\n    }\n}"
						},
						{
							"name": "Successful Response With Next Cursor",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities?cursor=eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									],
									"query": [
										{
											"key": "cursor",
											"value": "eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ=="
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"entities\": [\n      {\n        \"entityId\": \"12345678-6fd634a3-79ba-451d-8f07-56a953f96667\",\n        \"entityType\": \"collection\"\n      },\n      {\n        \"entityId\": \"7a95cfe8-de72-44e6-81ea-79d19805bd7b\",\n        \"entityType\": \"api\"\n      }\n    ]\n  },\n  \"meta\": {\n    \"count\": 2,\n    \"nextCursor\": \"eyJpZCI6ODYsImVudGl0eVR5cGUiOiJhcGkifQ==\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/23894fhsjrs/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"23894fhsjrs",
										"entities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Bad Request\",\n    \"message\": \"params/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"statusCode\": 400\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Resource Not Found\",\n    \"detail\": \"Slug 'needs-review' does not exist\",\n    \"status\": 404,\n    \"instance\": \"/slugs/needs-review/entities\"\n}"
						},
						{
							"name": "Unexpected Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/tags/needs-review/entities",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"tags",
										"needs-review",
										"entities"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/problem+json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Something went wrong\",\n    \"detail\": \"Something went wrong while fetching entities having the provided slug\",\n    \"status\": 500,\n    \"instance\": \"/tags/hello-world/entities\"\n}"
						}
					]
				}
			],
			"description": "The **Tags** endpoints enable you to manage Postman's tagging feature. You can add tags to collections, APIs, and workspaces. Tags enable users [search Postman elements](https://learning.postman.com/docs/getting-started/navigating-postman/#search-postman) using these tags. Tagging is available on Postman [<b>Enterprise</b> plans](https://www.postman.com/pricing/)."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						},
						"description": "Gets information about the authenticated user.\n\n**Note:**\n\n- This API returns a different response for users with the [Guest and Partner roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).\n    \n- The `flow_count` response only returns for users on [Free plans](https://www.postman.com/pricing/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://res.cloudinary.com/postman/image/upload/t_user_profile_300/v1/user/default-6\",\n        \"isPublic\": true,\n        \"teamId\": 123,\n        \"teamName\": \"Test Team\",\n        \"teamDomain\": \"test-team\",\n        \"roles\": [\n            \"user\",\n            \"flow-editor\",\n            \"community-manager\"\n        ]\n    },\n    \"operations\": [\n        {\n            \"name\": \"api_object_usage\",\n            \"limit\": 99999999,\n            \"usage\": 8872,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"collection_run_limit\",\n            \"limit\": 99999999,\n            \"usage\": 226,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"file_storage_limit\",\n            \"limit\": 1,\n            \"usage\": 0.28,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"flow_requests\",\n            \"limit\": 1000000,\n            \"usage\": 1852,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"performance_test_limit\",\n            \"limit\": 99999999,\n            \"usage\": 10,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"reusable_packages\",\n            \"limit\": 100,\n            \"usage\": 48,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"test_data_retrieval\",\n            \"limit\": 1000,\n            \"usage\": 180,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"test_data_storage\",\n            \"limit\": 10,\n            \"usage\": 0.55,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"postbot_calls\",\n            \"limit\": 2500,\n            \"usage\": 0,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"mock_usage\",\n            \"limit\": 1000000,\n            \"usage\": 79948,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"monitor_request_runs\",\n            \"limit\": 15000000,\n            \"usage\": 4493710,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"api_usage\",\n            \"limit\": 1000000,\n            \"usage\": 10788,\n            \"overage\": 0\n        }\n    ]\n}"
						},
						{
							"name": "Guest and Partner User Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": null,\n        \"isPublic\": true,\n        \"teamId\": 123,\n        \"teamName\": \"Test Team\",\n        \"teamDomain\": \"test-team\",\n        \"roles\": [\n            \"user\"\n        ]\n    }\n}"
						},
						{
							"name": "No Assigned Team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": null,\n        \"isPublic\": true,\n        \"teamId\": 0, // This value indicates that the user is not assigned to a Postman team.\n        \"teamName\": \"\",\n        \"teamDomain\": \"\",\n        \"roles\": [\n            \"user\"\n        ]\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"AuthenticationError\",\n        \"message\": \"Invalid API Key. Every request requires a valid API Key to be sent.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all team users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "groupId",
									"value": "{{groupId}}",
									"description": "Filter results by the given [group](https://learning.postman.com/docs/collaborating-in-postman/user-groups/) ID. To get group IDs, use the GET `/groups` endpoint.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about all users on the [Postman team](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/collaboration-overview/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Taylor Lee\",\n            \"username\": \"taylor-lee\",\n            \"email\": \"taylor.lee@example.com\",\n            \"roles\": [\n                \"admin\",\n                \"user\"\n            ],\n            \"joinedAt\": \"2022-11-23T14:38:25.000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Alex Cruz\",\n            \"username\": \"alex-cruz\",\n            \"email\": \"alex.cruz@example.com\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"joinedAt\": \"2022-11-24T10:18:11.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by groupId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?groupId=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "groupId",
											"value": "123"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Taylor Lee\",\n            \"username\": \"taylor-lee\",\n            \"email\": \"taylor.lee@example.com\",\n            \"roles\": [\n                \"admin\",\n                \"user\"\n            ],\n            \"joinedAt\": \"2022-11-23T14:38:25.000Z\"\n        }\n    ]\n}"
						},
						{
							"name": "No Group Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?groupId=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "groupId",
											"value": "123"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": []\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
						}
					]
				},
				{
					"name": "Get a team user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "The user's ID."
								}
							]
						},
						"description": "Gets information about a user on the Postman team."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/users/:userId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Taylor Lee\",\n    \"username\": \"taylor-lee\",\n    \"email\": \"taylor.lee@example.com\",\n    \"roles\": [\n        \"user\",\n        \"admin\"\n    ],\n    \"joinedAt\": \"2022-11-23T14:38:25.000Z\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/users/:userId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "12345678"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"Bad Request\",\n    \"status\": 400\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/users/:userId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/users/:userId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/users/:userId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
						}
					]
				}
			],
			"description": "The **Users** endpoints enable you to get information about Postman users."
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Get all groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Gets all of a team's Postman [groups](https://learning.postman.com/docs/collaborating-in-postman/user-groups/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"updatedAt\": \"2024-10-03T14:05:05.000Z\",\n            \"members\": [\n                12345678,\n                87654321,\n                56781234\n            ],\n            \"teamId\": 1,\n            \"id\": 123,\n            \"name\": \"API Test Group\",\n            \"summary\": \"API testing group.\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"createdAt\": \"2024-10-03T14:05:05.000Z\",\n            \"createdBy\": 12345678\n        },\n        {\n            \"updatedAt\": \"2024-04-04T13:36:11.000Z\",\n            \"members\": [\n                56789012\n            ],\n            \"teamId\": 1,\n            \"id\": 456,\n            \"name\": \"Billing\",\n            \"summary\": \"\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"createdAt\": \"2024-03-06T11:01:42.000Z\",\n            \"createdBy\": 12345678\n        },\n        {\n            \"updatedAt\": \"2024-03-15T19:44:20.000Z\",\n            \"members\": [\n                12345678,\n                87654321,\n                56781234,\n                78906531,\n                45507812\n            ],\n            \"teamId\": 1,\n            \"id\": 789,\n            \"name\": \"Collaboration\",\n            \"summary\": \"\",\n            \"roles\": [\n                \"user\"\n            ],\n            \"createdAt\": \"2024-03-15T19:44:20.000Z\",\n            \"createdBy\": 12345678\n        }\n    ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.getpostman.com/groups",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
						}
					]
				},
				{
					"name": "Get a group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "{{groupId}}",
									"description": "The group's ID."
								}
							]
						},
						"description": "Gets information about a Postman [user group](https://learning.postman.com/docs/collaborating-in-postman/user-groups/)."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "123",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 123,\n    \"teamId\": 1,\n    \"name\": \"API Test Group\",\n    \"summary\": \"API testing group.\",\n    \"createdBy\": 12345678,\n    \"createdAt\": \"2024-10-03T14:05:05.000Z\",\n    \"updatedAt\": \"2024-10-03T14:05:05.000Z\",\n    \"members\": [\n        12345678,\n        87654321,\n        56781234\n    ],\n    \"roles\": [\n        \"user\"\n    ],\n    \"managers\": [\n        12345678\n    ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/bad-request\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"Bad Request\",\n    \"status\": 400\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "123",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"Unauthorized\",\n    \"status\": 401\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "123",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"Forbidden\",\n    \"status\": 403\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "123",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/not-found\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"status\": 404\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/groups/:groupId",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "123",
											"description": "The group's ID."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
						}
					]
				}
			],
			"description": "The **Groups** endpoints enable you to manage user [groups](https://learning.postman.com/docs/collaborating-in-postman/user-groups/) in Postman. With groups, you can arrange users into groups that reflect your organizational structure."
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Create a webhook",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhook\":{\n        \"name\": \"{{webhookName}}\",\n        \"collection\": \"{{collectionUid}}\",\n        \"environment\": \"{{environmentUid}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "<string>",
									"description": "A workspace ID in which to create the webhook.\n\nIf you do not include this query parameter, the system creates the webhook in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a webhook that triggers a collection with a custom payload. You can get the webhook's URL from the `webhookUrl` property in the endpoint's response.\n\nInclude the following properties in a `webhook` object in the request body:\n\n- `name` — A **string** value that contains the webhook's name. On success, the system creates a new monitor with this name in the **Monitors** tab.\n    \n- `collection` — A **string** value that contains the collection UID to trigger when calling this webhook.\n    \n\nYou can include the following optional properties in the request body:\n\n- `environments` — A **string** value that contains the environment UID to trigger when calling this webhook."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"webhook\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"webhookUrl\": \"https://newman-api.getpostman.com/run/12345678/267a6e99-b6da-407c-a96f-03be2d6282fb\",\n        \"uid\": \"12345678-1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Missing Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": [\n                \"collection\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Feature Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Forbidden\",\n    \"detail\": \"This feature isn't available in your region.\",\n    \"status\": 403\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-workspace-id",
										"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\":{\n        \"name\": \"Test Webhook\",\n        \"collection\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/webhooks?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Webhooks** endpoints enable you to manage [custom webhooks](https://learning.postman.com/docs/running-collections/collection-webhooks/)."
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Tags",
					"item": [
						{
							"name": "Get a workspace's tags",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"tags"
									]
								},
								"description": "Gets all the tags associated with a workspace."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "No View Permissions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/workspaces/12345678-e361eeb4-00dd-4225-9774-6146a2555999\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update a workspace's tags",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"{{tagName}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"tags"
									]
								},
								"description": "Updates a workspace's associated tags. This endpoint replaces all existing tags with those you pass in the request body.\n\n**Note:**\n\n- You can only add a maximum of five tags to an API.\n- Tags must be between 2 and 64 characters long.\n    \n- Tags must follow the `^[a-z][a-z0-9-]\\\\\\\\\\*[a-z0-9]+$` pattern."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}"
								},
								{
									"name": "Tag Exceeds Max Size",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"oS1Z9gHS9lDaAhX3xu0ekJRZwt0CPIikGYApohSPJVu3n3iiHxdISMqMFVo6wPf8N\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must NOT have more than 64 characters\",\n    \"status\": 400\n}"
								},
								{
									"name": "Exceeds Max Number of Tags",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        },\n        {\n            \"slug\": \"test-collection\"\n        },\n        {\n            \"slug\": \"preview\"\n        },\n        {\n            \"slug\": \"pre-release\"\n        },\n        {\n            \"slug\": \"api-team\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/badrequest\",\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags must NOT have more than 5 items\",\n    \"status\": 400\n}"
								},
								{
									"name": "Special Character Present",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"test-api!\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Missing tags Object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"statusCode\": 400,\n    \"error\": \"Bad Request\",\n    \"message\": \"body must have required property 'tags'\"\n}"
								},
								{
									"name": "Tag Does Not Start with Letter",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"1test\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"Bad Request\",\n    \"detail\": \"body/tags/0/slug must match pattern \\\"^[a-z][a-z0-9-]*[a-z0-9]+$\\\"\",\n    \"status\": 400\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"status\": 401\n}"
								},
								{
									"name": "Invalid Credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"The request lacks valid credentials.\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"You do not have developer role. Ask your (super)admin to grant you developer role\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Enterprise",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"detail\": \"The tags feature is only available to enterprise teams\",\n    \"status\": 403\n}"
								},
								{
									"name": "No View Permissions",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Access Denied\",\n    \"status\": 403,\n    \"detail\": \"You do not have view permission\",\n    \"instance\": \"/tags/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        {\n            \"slug\": \"needs-review\"\n        },\n        {\n            \"slug\": \"test-api\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/e361eeb4-00dd-4225-9774-6146a2555999/tags",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"e361eeb4-00dd-4225-9774-6146a2555999",
												"tags"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage workspace tags with Postman's [tagging](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#tagging-a-workspace) feature. Tagging is available on [Postman <b>Enterprise</b> plans](https://www.postman.com/pricing/)."
				},
				{
					"name": "Global Variables",
					"item": [
						{
							"name": "Get global variables",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/global-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"global-variables"
									]
								},
								"description": "Gets a workspace's global [variables](https://learning.postman.com/docs/sending-requests/variables/#variable-scopes). Global variables enable you to access data between collections, requests, scripts, and environments and are available throughout a workspace."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"global-variables"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"values\": [\n        {\n            \"value\": \"PMAK-XXXX\",\n            \"key\": \"api-key\",\n            \"enabled\": true,\n            \"type\": \"secret\"\n        },\n        {\n            \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"key\": \"collection_uid\",\n            \"enabled\": true,\n            \"type\": \"default\"\n        }\n    ]\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"global-variables"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/servererror\",\n    \"title\": \"Internal server error\",\n    \"detail\": \"Details about the error\"\n}"
								}
							]
						},
						{
							"name": "Update global variables",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"values\": [\n    {\n      \"key\": \"{{keyName}}\",\n      \"type\": \"{{keyType}}\",\n      \"value\": \"{{keyValue}}\",\n      \"enabled\": {{boolean}}\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/global-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"global-variables"
									]
								},
								"description": "Updates and replaces a workspace's global [variables](https://learning.postman.com/docs/sending-requests/variables/#variable-scopes). This endpoint replaces all existing global variables with the variables you pass in the request body:\n\n- `key` — A **string** value that contains the variable's name.\n    \n- `type` — A **string** value that contains the [type](https://learning.postman.com/docs/sending-requests/variables/#variable-types) of variable. Accepts `default` or `secret`.\n    \n- `value` — A **string** value that contains the variable's value.\n    \n- `enabled` — A **boolean** value that, if true, enables the variable."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"key\": \"api-key\",\n      \"type\": \"secret\",\n      \"value\": \"PMAK-XXXX\",\n      \"enabled\": true\n    },\n    {\n      \"key\": \"collection_uid\",\n      \"type\": \"default\",\n      \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n      \"enabled\": true\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"global-variables"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"values\": [\n        {\n            \"value\": \"PMAK-XXXX\",\n            \"key\": \"api-key\",\n            \"enabled\": true,\n            \"type\": \"secret\"\n        },\n        {\n            \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"key\": \"collection_uid\",\n            \"enabled\": true,\n            \"type\": \"default\"\n        }\n    ]\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"key\": \"api-key\",\n      \"type\": \"secret\",\n      \"value\": \"PMAK-XXXX\",\n      \"enabled\": true\n    },\n    {\n      \"key\": \"collection_uid\",\n      \"type\": \"default\",\n      \"value\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n      \"enabled\": true\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/global-variables",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"global-variables"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/servererror\",\n    \"title\": \"Internal server error\",\n    \"detail\": \"Details about the error\"\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage global [variables](https://learning.postman.com/docs/sending-requests/variables/). Global variables are available throughout a workspace and have the broadest scope in Postman."
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Get all roles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workspaces-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces-roles"
									]
								},
								"description": "Gets information about all roles in a workspace, based on the team's [plan](https://www.postman.com/pricing/)."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces-roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces-roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": {\n        \"user\": [\n            {\n                \"id\": \"3\",\n                \"displayName\": \"Admin\",\n                \"description\": \"Can manage workspace details and members.\"\n            },\n            {\n                \"id\": \"1\",\n                \"displayName\": \"Viewer\",\n                \"description\": \"Can view, fork, and export workspace resources.\"\n            },\n            {\n                \"id\": \"2\",\n                \"displayName\": \"Editor\",\n                \"description\": \"Can create and edit workspace resources.\"\n            }\n        ],\n        \"usergroup\": [\n            {\n                \"id\": \"3\",\n                \"displayName\": \"Admin\",\n                \"description\": \"Can manage workspace details and members.\"\n            },\n            {\n                \"id\": \"1\",\n                \"displayName\": \"Viewer\",\n                \"description\": \"Can view, fork, and export workspace resources.\"\n            },\n            {\n                \"id\": \"2\",\n                \"displayName\": \"Editor\",\n                \"description\": \"Can create and edit workspace resources.\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces-roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces-roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces-roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces-roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces-roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces-roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Get a workspace's roles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"roles"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>",
											"description": "Include the following information in the endpoint's response:\n- `scim` — Return IDs as SCIM user and group IDs.",
											"disabled": true
										}
									]
								},
								"description": "Gets the roles of users and user groups in a workspace:\n\n- `Viewer` — Can view, fork, and export workspace resources.\n    \n- `Editor` — Can create and edit workspace resources.\n    \n- `Admin` — Can manage workspace details and members."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"id\": \"3\",\n            \"displayName\": \"Admin\",\n            \"user\": [\n                \"12345678\"\n            ],\n            \"group\": [\n                \"123\"\n            ]\n        }\n    ]\n}"
								},
								{
									"name": "Return SCIM IDs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles?include=scim",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											],
											"query": [
												{
													"key": "include",
													"value": "scim"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"id\": \"3\",\n            \"displayName\": \"Admin\",\n            \"user\": [\n                \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\"\n            ],\n            \"group\": [\n                \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\"\n            ]\n        }\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": 1\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": 1\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": 2\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": 3\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"https://api.postman.com/problems/not-found\",\n    \"type\": \"Resource not found\",\n    \"detail\": \"\",\n    \"status\": 404\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						},
						{
							"name": "Update user or user group roles",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "identifierType",
										"value": "",
										"description": "Use SCIM user IDs instead of Postman user IDs.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"{{operationType}}\",\n            \"path\": \"{{pathValue}}\",\n            \"value\": [\n                {\n                    \"id\": \"{{id}}\", // To use SCIM IDs, include the `identifierType=scim` header.\n                    \"role\": \"{{workspaceRoleId}}\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces/{{workspaceId}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										"{{workspaceId}}",
										"roles"
									]
								},
								"description": "Updates the roles of users or [user groups](https://learning.postman.com/docs/collaborating-in-postman/user-groups/) in a workspace. To get a list of roles, use the [GET /workspace-roles](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-f4250b7c-87a6-46ba-a58b-02081131a67c) endpoint.\n\nInclude the following values in the `roles` array of objects:\n\n- `op` — (Required) A **string** value that contains the operation to perform. Accepts the `add` or `remove` value.\n    \n- `path` — (Required) A **string** value that contains the resource to perform the action on. Accepts the `/user` or `/usergroup` value.\n    \n- `value` — (Required) A list of objects that contain user or user group IDs and an assigned role ID.\n    \n    - `id` — (Required) A **string** value that contains the user or user group ID. To use SCIM IDs for users or groups, include the `identifierType=scim` header in the request.\n        \n    - `role` — (Required) A **string** value that contains the workspace role's ID:\n        \n        - `1` — Viewer. Can view, fork, and export workspace resources\n            \n        - `2` — Editor. Can create and edit workspace resources.\n            \n        - `3` — Admin. Can manage workspace details and members.\n            \n\n**Note:**\n\n- Groups are available on Postman [Enterprise plans](https://www.postman.com/pricing).\n    \n- To use SCIM IDs, include the `identifierType=scim` header when you call this endpoint. To get SCIM user IDs, use the `include=scim` query parameter when calling the [GET /workspaces/{workspaceId}](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-3a56b6f8-8d0c-410f-a933-03e26589c742?ctx=documentation) or [GET /workspaces](https://www.postman.com/postman/workspace/postman-public-workspace/request/12959542-f027a0fa-9012-4654-a65d-2b751a3154a9) endpoints.\n    \n- You cannot set roles for users in personal and partner workspaces.\n    \n- This endpoint does not support the external [Partner or Guest roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).\n    \n- This endpoint is restricted to 50 operations per call.\n    \n- The request body must contain one unique action per user or user group. For example, you cannot add and remove multiple roles for a user in the same request body."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": \"1\"\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": \"1\"\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"displayName\": \"Viewer\",\n            \"user\": [\n                12345678\n            ],\n            \"group\": [\n                123\n            ]\n        },\n        {\n            \"id\": 2,\n            \"displayName\": \"Editor\",\n            \"user\": [\n                87654321\n            ],\n            \"group\": [\n                123\n            ]\n        },\n        {\n            \"id\": 3,\n            \"displayName\": \"Admin\",\n            \"user\": [\n                13428756\n            ],\n            \"group\": [\n                132\n            ]\n        }\n    ]\n}"
								},
								{
									"name": "Update Role with SCIM ID",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "identifierType",
												"value": "scim"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n                    \"role\": \"1\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"id\": 1,\n            \"displayName\": \"Viewer\",\n            \"user\": [\n                \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\"\n            ]\n        }\n    ]\n}"
								},
								{
									"name": "Update Role and Group with SCIM IDs",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "identifierType",
												"value": "scim"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n                    \"role\": \"3\"\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"displayName\": \"Admin\",\n            \"group\": [\n                \"561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00\"\n            ],\n            \"user\": [\n                \"e982929dadd02cf627e8c111925fc37a93dbc86f510840db\"\n            ],\n            \"id\": \"3\"\n        }\n    ]\n}"
								},
								{
									"name": "Add Workspace Group Role",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "identifierType",
												"value": "scim"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"1234\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"group\": [\n                \"1234\"\n            ],\n            \"user\": [\n                \"12345678\"\n            ],\n            \"id\": \"3\",\n            \"displayName\": \"Admin\"\n        }\n    ]\n}"
								},
								{
									"name": "Remove Workspace Group Role",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "identifierType",
												"value": "scim"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"1234\",\n                    \"role\": \"1\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": [\n        {\n            \"group\": [\n                \"1234\"\n            ],\n            \"user\": [\n                \"12345678\"\n            ],\n            \"id\": \"3\",\n            \"displayName\": \"Admin\"\n        }\n    ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"id\": \"1\",\n            \"user\": [\n                \"12345678\"\n            ],\n            \"usergroup\": [\n                \"123\"\n            ],\n            \"displayName\": \"Viewer\"\n        },\n        {\n            \"id\": \"2\",\n            \"user\": [\n                \"87654321\"\n            ],\n            \"usergroup\": [\n                \"321\"\n            ],\n            \"displayName\": \"Editor\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"detail\": \"\",\n    \"title\": \"body.roles[0] should have required property 'op'\",\n    \"type\": \"invalidParamError\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": \"1\"\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": \"1\"\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/unauthorized\",\n    \"title\": \"Unauthorized\",\n    \"detail\": \"An API key must be provided in the request header or query string\",\n    \"status\": 401\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": \"1\"\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": \"1\"\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/forbidden\",\n    \"title\": \"Resource cannot be accessed\",\n    \"detail\": \"Inadequate permissions. Resource access forbidden.\",\n    \"status\": 403\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"id\": \"1\",\n            \"user\": [\n                \"12345678\"\n            ],\n            \"usergroup\": [\n                \"123\"\n            ],\n            \"displayName\": \"Viewer\"\n        },\n        {\n            \"id\": \"2\",\n            \"user\": [\n                \"87654321\"\n            ],\n            \"usergroup\": [\n                \"321\"\n            ],\n            \"displayName\": \"Editor\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"title\": \"https://api.postman.com/problems/not-found\",\n    \"type\": \"Resource not found\",\n    \"detail\": \"\",\n    \"status\": 404\n}"
								},
								{
									"name": "Partner and Personal Workspace Roles Unsupported",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"id\": \"1\",\n            \"user\": [\n                \"12345678\"\n            ],\n            \"usergroup\": [\n                \"123\"\n            ],\n            \"displayName\": \"Viewer\"\n        },\n        {\n            \"id\": \"2\",\n            \"user\": [\n                \"87654321\"\n            ],\n            \"usergroup\": [\n                \"321\"\n            ],\n            \"displayName\": \"Editor\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"detail\": \"Roles are not supported for personal and partner workspaces.\",\n    \"status\": 422,\n    \"title\": \"Cannot process the request.\",\n    \"link\": \"https://api.postman.com/problems/unprocessable-entity\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\n        {\n            \"op\": \"add\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"12345678\",\n                    \"role\": \"1\"\n                },\n                {\n                    \"id\": \"87654321\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/user\",\n            \"value\": [\n                {\n                    \"id\": \"87612345\",\n                    \"role\": \"1\"\n                }\n            ]\n        },\n        {\n            \"op\": \"add\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"123\",\n                    \"role\": \"2\"\n                }\n            ]\n        },\n        {\n            \"op\": \"remove\",\n            \"path\": \"/usergroup\",\n            \"value\": [\n                {\n                    \"id\": \"312\",\n                    \"role\": \"3\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9/roles",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"workspaces",
												"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
												"roles"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://api.postman.com/problems/internal-server-error\",\n    \"title\": \"Internal Server Error\",\n    \"detail\": \"Internal Server Error\",\n    \"status\": 500\n}"
								}
							]
						}
					],
					"description": "These endpoints enable you to manage [workspace roles](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#workspace-roles). Roles define user permissions within a Postman workspace."
				},
				{
					"name": "Update a workspace",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							]
						},
						"description": "Updates a workspace. Include the following properties in the request body:\n\n- `name` — A **string** value that contains the workspace's new name.\n    \n- `description` — A **string** value that contains the new workspace description.\n    \n- `type` — A **string** value that contains the new workspace visibility [type](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility). This property does <u>not</u> support the following workspace visibility changes:\n    \n    - `private` to `public`, `public` to `private`, and `private` to `personal` for Free and Basic [plans](https://www.postman.com/pricing/).\n        \n    - `public` to `personal` for team users only.\n        \n\n**Note:**\n\n- There are rate limits when publishing public workspaces.\n    \n- Public team workspace names must be unique.\n    \n\n### **Important**\n\nWe deprecated linking collections or environments between workspaces. We do <u>not</u> recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does not create a clone of a collection or environment.\n    \n- Any changes you make to a linked collection or environment changes them in all workspaces.\n    \n- If you delete a collection or environment linked between workspaces, the system deletes it in all the workspaces."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Test Workspace\"\n    }\n}"
						},
						{
							"name": "Cannot Convert Private to Public",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Private Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a private workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"cannotConvertToPublicWorkspace\",\n        \"message\": \"Can not convert workspaces to public workspaces for team user. First convert to team.\"\n    }\n}"
						},
						{
							"name": "Cannot Convert to Personal",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not authorized to perform this action\"\n    }\n}"
						},
						{
							"name": "Cannot Convert from Public",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"private\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"cannotConvertFromPublicWorkspace\",\n        \"message\": \"Can not convert workspaces from public workspaces for team user. First convert to team.\"\n    }\n}"
						},
						{
							"name": "Workspace Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Workspace\",\n    \"type\": \"team\",\n    \"description\": \"This is a team workspace.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"'workspace' object missing in the request\"\n    }\n}"
						},
						{
							"name": "Publish Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"rateLimit\",\n        \"message\": \"team~1234\"\n    }\n}"
						},
						{
							"name": "Not a Unique Public Workspace Name",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"workspaceSlugNotUniqueError\",\n        \"message\": \"Workspace Slug is not unique in the account context\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified workspace with id 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9 does not exist.\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have access to update this workspace.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Create a workspace",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"workspace\": {\n        \"name\": \"{{workspaceName}}\",\n        \"type\": \"{{workspaceType}}\",\n        \"description\": \"{{workspaceDescription}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workspaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces"
							]
						},
						"description": "Creates a new [workspace](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). Include the following properties in the request body:\n\n- `name` — A **string** value that contains the workspace's name.\n    \n- `type` — A **string** value that contains the workspace type:\n    \n    - `personal`\n        \n    - `private` — Private workspaces are available on Postman [<b>Professional</b> and <b>Enterprise</b> plans](https://www.postman.com/pricing).\n        \n    - `public`\n        \n    - `team`\n        \n    - `partner` — [Partner Workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) are available on Postman [<b>Professional</b> and <b>Enterprise</b> plans](https://www.postman.com/pricing).\n        \n- `description` — (Optional) A **string** value that contains a description of the workspace.\n    \n\n**Note:**\n\n- This endpoint returns a 403 `Forbidden` response if the user does not have permission to create workspaces. [Admins and Super Admins](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) can configure workspace permissions to restrict users and/or user groups from creating workspaces or require approvals for the creation of team workspaces.\n    \n- There are rate limits when publishing public workspaces.\n    \n- Public team workspace names must be unique.\n    \n\n### Important\n\nWe deprecated linking collections or environments between workspaces. We do <u>not</u> recommend that you do this.\n\nIf you have a linked collection or environment, note the following:\n\n- The endpoint does not create a clone of a collection or environment.\n    \n- Any changes you make to a linked collection or environment changes them in all workspaces.\n    \n- If you delete a collection or environment linked between workspaces, the system deletes it in all the workspaces."
					},
					"response": [
						{
							"name": "Create a Personal Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Personal Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Public Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Private Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Private Workspace\",\n        \"type\": \"private\",\n        \"description\": \"This is a private workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Team Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\"\n    }\n}"
						},
						{
							"name": "Create a Partner Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Partner Workspace\",\n        \"type\": \"partner\",\n        \"description\": \"This is a partner workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\"\n    }\n}"
						},
						{
							"name": "Workspace Missing",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Public Workspace\",\n    \"type\": \"public\",\n    \"description\": \"This is a public workspace.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"'workspace' object missing in the request\"\n    }\n}"
						},
						{
							"name": "Publish Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"rateLimit\",\n        \"message\": \"team~1234\"\n    }\n}"
						},
						{
							"name": "Not a Unique Public Workspace Name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Public Workspace\",\n        \"type\": \"public\",\n        \"description\": \"This is a public workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"rateLimit\",\n        \"message\": \"team~1234\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"type\": \"personal\",\n        \"description\": \"This is a test personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamError\",\n        \"message\": \"body should have required property 'name'\"\n    }\n}"
						},
						{
							"name": "No Permission",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"status\": 403,\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not authorized to perform this action\",\n        \"detail\": \"You do not have permission to create team workspaces.\",\n        \"instance\": \"\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"workspace\": {\n        \"name\": \"Personal Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is a personal workspace.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get a workspace",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Include the following information in the endpoint's response:\n- `mocks:deactivated` — Include all deactivated mock servers in the response.\n- `scim` — Return the SCIM user IDs of the workspace creator and who last modified it.",
									"disabled": true
								}
							]
						},
						"description": "Gets information about a workspace.\n\n**Note:**\n\nThis endpoint's response also contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n- `team` — All team members can access the workspace.\n- `private` — Only invited team members can access the workspace ([<b>Professional</b> and <b>Enterprise</b> plans only](https://www.postman.com/pricing)).\n    \n- `public` — Everyone can access the workspace.\n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([<b>Professional</b> and <b>Enterprise</b> plans only](https://www.postman.com/pricing)).\n    \n\n### Important\n\nWe have deprecated the `name` and `uid` responses in the following array of objects:\n\n- `collections`\n- `environments`\n- `mocks`\n- `monitors`\n- `apis`"
					},
					"response": [
						{
							"name": "Include SCIM IDs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9?include=scim",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									],
									"query": [
										{
											"key": "include",
											"value": "scim"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a partner workspace.\",\n        \"visibility\": \"partner\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ],\n        \"scim\": {\n            \"createdBy\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n            \"updatedBy\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\"\n        }\n    }\n}"
						},
						{
							"name": "Get a Personal Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"My Workspace\",\n        \"type\": \"personal\",\n        \"description\": \"This is your personal, private workspace to play around in. Only you can see the collections and APIs you create here - unless you share them with your team.\",\n        \"visibility\": \"personal\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Public Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Public Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a public workspace.\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Private Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Private Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a private workspace.\",\n        \"visibility\": \"private\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Team Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Team Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a team workspace.\",\n        \"visibility\": \"team\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get a Partner Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n        \"name\": \"Partner Workspace\",\n        \"type\": \"team\",\n        \"description\": \"This is a partner workspace.\",\n        \"visibility\": \"partner\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2022-07-06T16:18:32.000Z\",\n        \"updatedAt\": \"2022-07-06T20:55:13.000Z\",\n        \"collections\": [\n            {\n                \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n                \"name\": \"Test Collection\",\n                \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        ],\n        \"environments\": [\n            {\n                \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n                \"name\": \"Test Environment\",\n                \"uid\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\"\n            }\n        ],\n        \"mocks\": [\n            {\n                \"id\": \"e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"name\": \"Test Mock\",\n                \"uid\": \"12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289\",\n                \"deactivated\": false\n            }\n        ],\n        \"monitors\": [\n            {\n                \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"name\": \"Test Monitor\",\n                \"uid\": \"12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n                \"deactivated\": false\n            }\n        ],\n        \"apis\": [\n            {\n                \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n                \"name\": \"Test API\",\n                \"uid\": \"12345678-387c2863-6ee3-4a56-8210-225f774edade\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "The mime type of this content",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"workspaceNotFoundError\",\n        \"message\": \"Workspace not found\",\n        \"statusCode\": 404\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Get all workspaces",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workspaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces"
							],
							"query": [
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of workspace to filter the response by:\n\n* `personal`\n* `team`\n* `private`\n* `public`\n* `partner`",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>",
									"description": "Include the following information in the endpoint's response:\n- `mocks:deactivated` — Include all deactivated mock servers in the response.\n- `scim` — Return the SCIM user IDs of the workspace creator and who last modified it.",
									"disabled": true
								},
								{
									"key": "createdBy",
									"value": "<string>",
									"description": "Return only workspaces created by a specific user ID. For multiple users, pass this value as a comma-separated list of user IDs. The response only returns workspaces that you have access to.",
									"disabled": true
								}
							]
						},
						"description": "Gets all [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). The response includes your workspaces and any workspaces that you have access to.\n\n**Note:**\n\nThis endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:\n\n- `personal` — Only you can access the workspace.\n    \n- `team` — All team members can access the workspace.\n    \n- `private` — Only invited team members can access the workspace ([<b>Professional</b> and <b>Enterprise</b> plans only](https://www.postman.com/pricing)).\n    \n- `public` — Everyone can access the workspace.\n    \n- `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([<b>Professional</b> and <b>Enterprise</b> plans only](https://www.postman.com/pricing))."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n            \"name\": \"My Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"personal\",\n            \"visibility\": \"personal\"\n        },\n        {\n            \"id\": \"a0f46158-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Private Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Public Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"public\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Partner Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"partner\"\n        }\n    ]\n}"
						},
						{
							"name": "Include SCIM IDs",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces?include=scim",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "include",
											"value": "scim"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n            \"name\": \"My Workspace\",\n            \"createdBy\": \"12345678\",\n            \"scim\": {\n                \"createdBy\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\"\n            },\n            \"type\": \"personal\",\n            \"visibility\": \"personal\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces?type=team",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "type",
											"value": "team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Team Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        }\n    ]\n}"
						},
						{
							"name": "Filter by createdBy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces?createdBy=12345678,87654321,56784321",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "createdBy",
											"value": "12345678,87654321,56784321"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspaces\": [\n        {\n            \"id\": \"a0f46158-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Test Workspace\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n            \"name\": \"Teamwork\",\n            \"createdBy\": \"12345678\",\n            \"type\": \"team\",\n            \"visibility\": \"team\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Public Examples\",\n            \"createdBy\": \"87654321\",\n            \"type\": \"team\",\n            \"visibility\": \"public\"\n        },\n        {\n            \"id\": \"74dbfab8-1529-11ee-be56-0242ac120002\",\n            \"name\": \"Partner Workspace\",\n            \"createdBy\": \"87654321\",\n            \"type\": \"team\",\n            \"visibility\": \"partner\"\n        },\n        {\n            \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\",\n            \"name\": \"My Workspace\",\n            \"createdBy\": \"56784321\",\n            \"type\": \"personal\",\n            \"visibility\": \"personal\"\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Delete a workspace",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces",
								"{{workspaceId}}"
							]
						},
						"description": "Deletes an existing workspace.\n\n### **Important**\n\nIf you delete a workspace that has a linked collection or environment with another workspace, this will delete the collection and environment in all workspaces."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"workspace\": {\n        \"id\": \"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified workspace does not exist.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"workspaces",
										"1f0df51a-8658-4ee8-a2a1-d2567dfa09a9"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1631439621"
								},
								{
									"key": "X-RateLimit-RetryAfter",
									"value": "4",
									"description": ""
								},
								{
									"key": "RetryAfter",
									"value": "4",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			],
			"description": "The **Workspaces** endpoints enable you to manage your [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/)."
		},
		{
			"name": "DEPRECATED",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "v9",
							"item": [
								{
									"name": "API Version",
									"item": [
										{
											"name": "Get all API versions",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												},
												"description": "Gets information about an API's versions.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"name": "Content-Type",
															"description": {
																"content": "",
																"type": "text/plain"
															},
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"versions\": [\n        {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"name\": \"Draft\",\n            \"summary\": null,\n            \"createdBy\": \"20891195\",\n            \"updatedBy\": \"20891195\",\n            \"stage\": \"Planning\",\n            \"visibility\": \"public\",\n            \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n            \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n            \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n            \"repositoryIntegration\": null\n        }\n    ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Create an API version",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\",\n\t\t\"source\": {\n\t\t\t\"id\": \"{{apiVersionId}}\",\n\t\t\t\"schema\": {{boolean}},\n\t\t\t\"relations\": {\n\t\t\t\t\"monitor\": {{boolean}},\n\t\t\t\t\"mock\": {{boolean}},\n\t\t\t\t\"documentation\": {{boolean}},\n                \"test\": {{boolean}},\n                \"environment\": {{boolean}}\n\t\t\t}\n\t\t}\n\t}\n}"
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version. Include the following request body properties in the `version` object:\n\n- `name` — Required. A **string** that contains the API version's name.\n- `source` — An **object** that contains the following properties:\n    - `id` — A **string** that contains an API version's ID to copy to the created API version.\n    - `schema` — A **boolean** value. If true, copy the API definition to the new API version.\n    - `relations` — An **object** that contains the relation types to copy to the new API version. Each property is a **boolean** value that, if true, copies to the new API version. If you do **not** include any the following properties, the system does **not** copy them over (defaults to the `false` value):\n        - `monitor`\n        - `mock`\n        - `documentation`\n        - `test`\n        - `environment`"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"version\": {\n        \"id\": \"8421a1f3-3262-4d47-a597-7005bf4c1564\",\n        \"name\": \"v1\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1\",\n        \"source\": {\n            \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n            \"schema\": true,\n            \"relations\": {\n                \"documentation\": true,\n                \"environment\": true,\n                \"mock\": true,\n                \"monitor\": true\n            }\n        }\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get an API version",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "Gets information about an API version.\n\n**In Postman v9 and earlier:**\n\nWhen you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"name": "Content-Type",
															"description": {
																"content": "",
																"type": "text/plain"
															},
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"Draft\",\n        \"summary\": null,\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n        \"createdAt\": \"2023-02-14T14:26:05.000Z\",\n        \"updatedAt\": \"2023-02-14T14:26:05.000Z\",\n        \"repositoryIntegration\": null,\n        \"schema\": [\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n        ]\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Update an API version",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"version\": {\n\t\t\"name\": \"{{apiVersionName}}\"\n\t}\n}"
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version. Include the following request body properties in the `version` object:\n\n- `name` — A **string** that contains the API version's name."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"version\": {\n        \"createdAt\": \"2022-08-02T13:28:05.000Z\",\n        \"updatedAt\": \"2022-08-02T13:35:32.000Z\",\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"name\": \"v1.0\",\n        \"summary\": null,\n        \"stage\": \"Planning\",\n        \"visibility\": \"public\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"api\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"version\": {\n        \"name\": \"v1.0\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Delete an API version",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"version\": {\n        \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										}
									],
									"description": "The API version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/).\n\n### Important\n\n**API versions are deprecated as of Postman v10 and higher.**\n\nIn v9 and earlier, when you create an API, the system creates a single, default API version. You can use this version’s ID with any endpoints that require an API version ID.\n\nIn Postman v10, published versions are static representations of your API that consumers can reference (like releases in Postman v9). If you need to work on more than one major iteration of your API in Postman v10, create separate APIs.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Relations",
									"item": [
										{
											"name": "Get unclassified relations",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/unclassified",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"unclassified"
													]
												},
												"description": "**This endpoint is for Postman v10 and higher.**\n\nGets all of an API version's unclassified relations.\n\nUnclassified relations are used for documentation and testing. This is the default relation type."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"unclassified"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"unclassified\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"Test\",\n            \"updatedAt\": \"2023-01-19T14:50:05.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/unclassified",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"unclassified"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get monitor relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/monitor",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"monitor"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's monitor relations."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"monitor"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"monitor\": [\n        {\n            \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n            \"name\": \"Test Monitor\",\n            \"updatedAt\": \"2022-07-10T05:00:25.066Z\",\n            \"monitorId\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/monitor",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"monitor"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get  documentation relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/documentation",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"documentation"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's documentation relations."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"documentation"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"documentation\": [\n        {\n            \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n            \"name\": \"Test Collection\",\n            \"createdAt\": \"2022-07-08T20:29:35.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:06.000Z\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/documentation",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"documentation"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get integration test relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/integrationtest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"integrationtest"
													]
												},
												"description": "**This endpoint is deprecated.**"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"integrationtest"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"integrationtest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/integrationtest",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"integrationtest"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get test suite relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/testsuite",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"testsuite"
													]
												},
												"description": "**This endpoint is deprecated.**"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"testsuite"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"testsuite\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/testsuite",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"testsuite"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get all linked relations",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"relations"
													]
												},
												"description": "Gets all of an API version's relations.\n\n**Note:**\n\nIn Postman v10 and higher, this endpoint returns the following:\n\n- The `unclassified` relation is for documentation and testing. This is the default relation type.\n- The `apiDefinition` relation is the relation used for API definitions."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"name": "Content-Type",
															"description": {
																"content": "",
																"type": "text/plain"
															},
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"relations\": {\n        \"apiDefintion\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        },\n        \"unclassified\": {\n            \"b9bccf0f-e06a-433d-b556-a3cd158f0270\": {\n                \"id\": \"b9bccf0f-e06a-433d-b556-a3cd158f0270\",\n                \"name\": \"Test Collection\",\n                \"createdAt\": \"2023-01-30T17:41:50.000Z\",\n                \"updatedAt\": \"2023-01-19T14:50:05.000Z\"\n            }\n        },\n        \"schema\": {\n            \"16bb367e-fafb-4ef3-933b-ee3d971866fb\": {\n                \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\"\n            }\n        }\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get all test relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/test",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"test"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets all of an API version's test relations."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"test"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"test\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"updatedAt\": \"2022-07-08T18:32:23.000Z\",\n            \"collectionId\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/test",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"test"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": ""
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Sync API relations with definition",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/:relationType/:entityId/syncWithSchema",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														":relationType",
														":entityId",
														"syncWithSchema"
													],
													"variable": [
														{
															"key": "relationType",
															"value": "unclassified",
															"description": "The `unclassified` relation type. This relation is used for documentation and testing.\n\n**Note:**\n\nIn Postman v10 and earlier, this value is one of:\n* `documentation`\n* `test`\n* `mock`\n* `monitor`"
														},
														{
															"key": "entityId",
															"value": "{{entityId}}",
															"description": "The collection's UID value.\n\n**Note:**\n\nIn Postman v10 and earlier, the entity's ID value is one of the following, based on its relation type:\n* `documentation` and `test` — The collection UID value.\n* `environment` — The environment UID value.\n* `mock` — The mock ID value.\n* `monitor` — The monitor ID value."
														}
													]
												},
												"description": "Syncs an API version's relation with the API's definition."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
																"versions",
																"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
																":relationType",
																":entityId",
																"syncWithSchema"
															],
															"variable": [
																{
																	"key": "relationType",
																	"value": "unclassified"
																},
																{
																	"key": "entityId",
																	"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"success\": true\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
																"versions",
																"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
																":relationType",
																":entityId",
																"syncWithSchema"
															],
															"variable": [
																{
																	"key": "relationType",
																	"value": "unclassified"
																},
																{
																	"key": "entityId",
																	"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API version you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/4ebb45f8-7bb3-4a63-9c42-0b1602818293/versions/5e154147-b571-4ffe-a6ac-df2ab3b6e5ba/:relationType/:entityId/syncWithSchema",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"4ebb45f8-7bb3-4a63-9c42-0b1602818293",
																"versions",
																"5e154147-b571-4ffe-a6ac-df2ab3b6e5ba",
																":relationType",
																":entityId",
																"syncWithSchema"
															],
															"variable": [
																{
																	"key": "relationType",
																	"value": "unclassified"
																},
																{
																	"key": "entityId",
																	"value": "12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get environment relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/environment",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"environment"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets an API version's environment relations."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"environment"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"environment\": [\n        {\n            \"id\": \"12345678-5daabc50-8451-43f6-922d-96b403b4f28e\",\n            \"name\": \"Test Environment\",\n            \"createdAt\": \"2022-07-08T20:32:48.000Z\",\n            \"updatedAt\": \"2022-07-08T20:31:30.000Z\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/environment",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"environment"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get contract test relations",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/contracttest",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"contracttest"
													]
												},
												"description": "**This endpoint is deprecated.**"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"contracttest"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"contracttest\": [\n        {\n            \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n            \"name\": \"C test\",\n            \"updatedAt\": \"2019-08-29T10:18:11.000Z\",\n            \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\"\n        },\n        {\n            \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n            \"name\": \"C1\",\n            \"updatedAt\": \"2019-08-29T11:40:39.000Z\",\n            \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations/contracttest",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations",
																"contracttest"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Create relations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"{{relationType}}\": [\n        \"{{entityId}}\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"relations"
													]
												},
												"description": "Creates a new relation for an API version. Include the following in the request body:\n\n- `relationType` — An **array** that contains entity relations. The key value for this array must be the `unclassified` value.\n    \n\nYou must include the following properties in the `relationType` array:\n\n- `entityId` — The collection's UID value.\n    \n\n**Note:**\n\nThe following is **deprecated** in Postman API v10 and higher:\n\n| **`relationType`** | **`entityId`** |\n| --- | --- |\n| `documentation` and `test` | A collection UID value. |\n| `environment` | An environment UID value. |\n| `mock` | A mock ID value. |\n| `monitor` | A monitor ID value. |\n\nThe endpoint accepts multiple `relationType` arrays in a single call. For an example, see the example response documentation.\n\nThe `documentation` and `test` values returned in the response are the relation ID values, **not** the collection ID values."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"name": "Content-Type",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"unclassified\": [\n        \"2e006451-e819-443f-97bc-d1635e51007f\"\n    ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"unclassified\": [\n        \"12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91\"\n    ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/relations",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"relations"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										}
									],
									"description": "The Relations endpoints let you manage your API's relations. Relations are an API's connections to items such as documentation, tests, and API definitions.\n\n### Important\n\nIn Postman v10 and higher, we **only** support the following relation types:\n\n- `unclassified` — The relation for documentation and testing.\n- `apiDefinition` — The relation for API definitions."
								},
								{
									"name": "Schema",
									"item": [
										{
											"name": "Get a schema",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"schemas",
														"{{schemaId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API's definition."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"type\": \"openapi3\",\n        \"language\": \"json\",\n        \"createdAt\": \"2022-07-01T20:12:31.000Z\",\n        \"updatedAt\": \"2022-07-01T20:13:04.000Z\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Definition Mismatch",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"schemaApiVersionMismatchError\",\n        \"message\": \"The Schema ID provided does not belong to the API Version ID provided.\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Create a schema",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n\t\t\"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"schemas"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — A **string** value that contains the API definition's contents."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"schema\": {\n        \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n        \"language\": \"json\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceAlreadyExists\",\n        \"message\": \"A schema already exists for this API Version\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"json\",\n\t\t\"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Create a collection from a schema",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"{{collectionName}}\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"{{relationType}}\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"{{optionName}}\": \"{{optionValue}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}/collections",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"schemas",
														"{{schemaId}}",
														"collections"
													],
													"query": [
														{
															"key": "workspaceId",
															"value": "{{workspaceId}}",
															"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a collection and links it to an API as one or multiple relations.\n\nInclude the following properties in the request body:\n\n- `name` — A **string** that contains the name of the collection.\n    \n\nYou can also include the following additional properties in the request body:\n\n- `relations` — An **array** that contains a list of relations to create:\n    - `contracttest` — **Deprecated.**\n    - `integrationtest` — **Deprecated.**\n    - `testsuite` — **Deprecated.**\n    - `documentation`\n- `options` — An **object** that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
																	"disabled": true
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"name": "Content-Type",
															"description": "",
															"type": "text"
														}
													],
													"cookie": [],
													"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678ß-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
												},
												{
													"name": "Create a Collection with a Documentation Relation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
																	"disabled": true
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
												},
												{
													"name": "Create a Collection with Advanced Options",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t],\n    \"options\": {\n        \"requestParametersResolution\": \"Example\",\n        \"requestNameSource\": \"Fallback\",\n        \"validateMetadata\": true\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
																	"disabled": true
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
												},
												{
													"name": "Create a Collection from a Definition in a Workspace",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t}\t\n\t]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    },\n    \"relations\": [\n        {\n            \"type\": \"documentation\",\n            \"id\": \"d86b6c97-fdf9-4c37-825a-49b0223913c7\"\n        }\n    ]\n}"
												},
												{
													"name": "Invalid Parameter",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
																	"disabled": true
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"Test Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"mocks\"\n\t\t}\t\n\t]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/be50acd7-414e-4d65-9443-f919b847e29a/versions/56d5f9ac-69a7-4255-8343-cde8ea25ef8b/schemas/f087f7b9-018f-447f-ba64-74cb981957ce/collections",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"be50acd7-414e-4d65-9443-f919b847e29a",
																"versions",
																"56d5f9ac-69a7-4255-8343-cde8ea25ef8b",
																"schemas",
																"f087f7b9-018f-447f-ba64-74cb981957ce",
																"collections"
															],
															"query": [
																{
																	"key": "workspace",
																	"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"description": "Optional. The workspace ID in which to created the collection.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
																	"disabled": true
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Update a schema",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"{{apiDefinitionLanguage}}\",\n        \"schema\": \"{{apiDefinition}}\",\n\t\t\"type\": \"{{apiDefinitionType}}\"\n\t}\n}"
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/{{schemaId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"schemas",
														"{{schemaId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API definition. The request body must contain a `schema` object with the following properties:\n\n- `type` — A **string** value that contains the API definition's type. One of:\n    - `openapi3_1`\n    - `openapi3`\n    - `openapi2`\n    - `openapi1`\n    - `raml`\n    - `raml1`\n    - `wsdl1`\n    - `wsdl2`\n    - `graphql`\n    - `proto2`\n    - `graphql`\n    - `proto3`\n- `language` — A **string** value that contains the API definition's language. One of:\n    - OpenAPI and RAML — `json` or `yaml`\n    - GraphQL — `graphql`\n    - WSDL — `xml`\n    - Protobuf — `proto`\n- `schema` — Optional. A **string** value that contains the API definition's contents."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"schema\": {\n        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n        \"language\": \"yaml\",\n        \"apiVersion\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n        \"type\": \"openapi3\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n        \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"schema\": {\n\t\t\"language\": \"yaml\",\n\t\t\"schema\": \"openapi: 3.0.0\\ninfo:\\n  version: 1.0.0\\n  title: Test API\\nservers:\\n  - url: http://localhost:3000\\npaths:\\n  /user:\\n    get:\\n      summary: List all users\\n      operationId: listUser\\n      tags:\\n        - user\\n      parameters:\\n        - name: id\\n          in: query\\n          required: true\\n          description: The user's ID.\\n          example: 1234\\n          schema:\\n            type: integer\\n            format: int32\\n      responses:\\n        '200':\\n          description: Information about the user.\\n          headers:\\n            x-next:\\n              description: A link to the next page of responses.\\n              schema:\\n                type: string\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/User' \\ncomponents:\\n  schemas:\\n   User:\\n      type: object\\n      required:\\n        - id\\n        - name\\n      properties:\\n        id:\\n          type: integer\\n          format: int32\\n   Error:\\n      type: object\\n      required:\\n        - code\\n        - message\\n      properties:\\n        code:\\n          type: integer\\n          format: int32\\n        message:\\n          type: string\\n\",\n\t\t\"type\": \"openapi3\"\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/schemas/16bb367e-fafb-4ef3-933b-ee3d971866fb",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"schemas",
																"16bb367e-fafb-4ef3-933b-ee3d971866fb"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										}
									],
									"description": "The Schema endpoints let you manage your API's definitions.\n\n### Important\n\n**The schemas concept is deprecated as of Postman v10 and higher.**\n\nIn Postman v10 and higher, “schemas” are now known as “API definitions”. You may see that API responses may return both the `schemas` and `apiDefinition` properties. Use the `apiDefinition` property."
								},
								{
									"name": "Release",
									"item": [
										{
											"name": "Get an API release",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"releases",
														"{{apiReleaseId}}"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "{{apiId}}"
														},
														{
															"key": "apiVersionId",
															"value": "{{apiVersionId}}"
														},
														{
															"key": "releaseId",
															"value": "{{releaseId}}"
														}
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about an API version's release."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Get all API releases",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"releases"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "{{apiId}}"
														},
														{
															"key": "apiVersionId",
															"value": "{{apiVersionId}}"
														}
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nGets information about all of an API version's releases."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"releases\": [\n        {\n            \"id\": \"07d940bf-40fc-4acd-a11e-be6769894af0\",\n            \"name\": \"Release 2.0\",\n            \"description\": \"This is the second release of the Test API.\",\n            \"visibility\": \"private\"\n        },\n        {\n            \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n            \"name\": \"Release 1.0\",\n            \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n            \"visibility\": \"public\"\n        }\n    ]\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Create an API release",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"releases"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nCreates a new API version release. Include the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n\nYou can include the following optional properties:\n\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"apiRepositoryNotFoundError\",\n        \"message\": \"This API version is not linked to a repository\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\",\n        \"name\": \"Release 1.0\",\n        \"summary\": \"This is the first release.\",\n        \"description\": \"This is the first release of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"release\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Update an API release",
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"release\": {\n        \"name\": \"{{apiReleaseName}}\",\n        \"summary\": \"{{apiReleaseSummary}}\",\n        \"description\": \"{{apiReleaseDescription}}\",\n        \"visibility\": \"{{apiReleaseVisibility}}\",\n        \"gitTag\": \"{{apiReleaseGitTag}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"releases",
														"{{apiReleaseId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nUpdates an API version's release. Include at least one of the following properties in the `release` object:\n\n- `name` — A **string** value that contains the release name.\n- `visibility` — A **string** value that contains the release's visibility. One of:\n    - `private` — The release is private.\n    - `public` — The release is public.\n- `summary` — A **string** value that contains the release's summary.\n- `description` — A **string** value that contains the release's description.\n- `gitTag` — A **string** value that contains a valid [Git tag](https://docs.github.com/en/rest/git/tags) ID. The tag must exist in the API's connected Git repository."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"release\": {\n        \"id\": \"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2\",\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"release\": {\n        \"name\": \"Release 1.5\",\n        \"summary\": \"This is the first public release update.\",\n        \"description\": \"This is the first release update of the Test API. For more information, read the documentation.\",\n        \"visibility\": \"public\",\n        \"gitTag\": \"Test\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										},
										{
											"name": "Delete an API release",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{postman-API-key}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "X-API-KEY",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/{{apiId}}/versions/{{apiVersionId}}/releases/{{apiReleaseId}}",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"{{apiId}}",
														"versions",
														"{{apiVersionId}}",
														"releases",
														"{{apiReleaseId}}"
													]
												},
												"description": "**This endpoint is deprecated in Postman v10 and higher.**\n\nDeletes an API version's release."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"release\": {\n        \"id\": \"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2\"\n    }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\"\n    }\n}"
												},
												{
													"name": "Rate Limit Exceeded",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://api.getpostman.com/apis/387c2863-6ee3-4a56-8210-225f774edade/versions/a9879d02-74bf-425a-bbec-6d27aa135507/releases/3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2",
															"protocol": "https",
															"host": [
																"api",
																"getpostman",
																"com"
															],
															"path": [
																"apis",
																"387c2863-6ee3-4a56-8210-225f774edade",
																"versions",
																"a9879d02-74bf-425a-bbec-6d27aa135507",
																"releases",
																"3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": null,
													"cookie": [],
													"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
												}
											]
										}
									],
									"description": "The API release endpoints let you manage your API's releases.\n\n### Important\n\n**API releases are deprecated as of Postman v10 and higher.**\n\nYou can no longer create releases for collections in Postman v10, but API producers can [publish versions of an API](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/api-versions/)."
								},
								{
									"name": "Get all APIs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "{{workspaceId}}",
													"description": "Optional. Return only APIs that are inside the given workspace.",
													"disabled": true
												},
												{
													"key": "since",
													"value": "{{since}}",
													"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "until",
													"value": "{{until}}",
													"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
													"disabled": true
												},
												{
													"key": "createdBy",
													"value": "{{createdBy}}",
													"description": "Optional. Return only APIs created by the given user ID.",
													"disabled": true
												},
												{
													"key": "updatedBy",
													"value": "{{updatedBy}}",
													"description": "Optional. Return only APIs updated by the given user ID.",
													"disabled": true
												},
												{
													"key": "isPublic",
													"value": "{{isPublic}}",
													"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "summary",
													"value": "{{summary}}",
													"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
													"disabled": true
												},
												{
													"key": "sort",
													"value": "{{sort}}",
													"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
													"disabled": true
												},
												{
													"key": "direction",
													"value": "{{direction}}",
													"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
													"disabled": true
												}
											]
										},
										"description": "Gets information about all APIs."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "{{since}}",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "until",
															"value": "{{until}}",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "{{isPublic}}",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
															"disabled": true
														},
														{
															"key": "name",
															"value": "{{name}}",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "{{sort}}",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
															"disabled": true
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
										},
										{
											"name": "Get Public APIs",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis?isPublic=true",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "{{since}}",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "until",
															"value": "{{until}}",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "true",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs."
														},
														{
															"key": "name",
															"value": "{{name}}",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "{{sort}}",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
															"disabled": true
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"
										},
										{
											"name": "Get APIs in a Date Range",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis?since=2022-06-01T00:00:00.000Z&until=2022-06-15T00:00:00.000Z",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "2022-06-01T00:00:00.000Z",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format."
														},
														{
															"key": "until",
															"value": "2022-06-15T00:00:00.000Z",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format."
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "{{isPublic}}",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
															"disabled": true
														},
														{
															"key": "name",
															"value": "{{name}}",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "{{sort}}",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
															"disabled": true
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        }\n    ]\n}"
										},
										{
											"name": "Filter APIs by Name",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis?name=Public",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "{{since}}",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "until",
															"value": "{{until}}",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "{{isPublic}}",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
															"disabled": true
														},
														{
															"key": "name",
															"value": "Public",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive."
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "{{sort}}",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
															"disabled": true
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
										},
										{
											"name": "Sort by updatedAt",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis?sort=updatedAt",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "{{since}}",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "until",
															"value": "{{until}}",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "{{isPublic}}",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
															"disabled": true
														},
														{
															"key": "name",
															"value": "{{name}}",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "updatedAt",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter."
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"apis\": [\n        {\n            \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n            \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n            \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n            \"name\": \"Test API\",\n            \"summary\": \"Test API.\",\n            \"description\": \"This is a test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-22T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-22T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public API A\",\n            \"summary\": \"Public Test A.\",\n            \"description\": \"This is a public test API.\",\n            \"createdBy\": \"12345678\",\n            \"updatedBy\": \"12345678\",\n            \"isPublic\": true\n        },\n        {\n            \"createdAt\": \"2022-06-30T16:51:28.000Z\",\n            \"updatedAt\": \"2022-06-30T16:51:28.000Z\",\n            \"id\": \"69ce25ea-2914-426e-ae34-af558b6777e6\",\n            \"name\": \"Public Test API B\",\n            \"summary\": \"Public Test B\",\n            \"description\": \"This is another public test API.\",\n            \"createdBy\": \"87654321\",\n            \"updatedBy\": \"87654321\",\n            \"isPublic\": false\n        }\n    ]\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "{{workspaceId}}",
															"description": "Optional. Return only APIs that are inside the given workspace.",
															"disabled": true
														},
														{
															"key": "since",
															"value": "{{since}}",
															"description": "Optional. Return only APIs updated at and after this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "until",
															"value": "{{until}}",
															"description": "Optional. Return only APIs updated at and before this time, in ISO 8601 UTC format.",
															"disabled": true
														},
														{
															"key": "createdBy",
															"value": "{{createdBy}}",
															"description": "Optional. Return only APIs created by the given user ID.",
															"disabled": true
														},
														{
															"key": "updatedBy",
															"value": "{{updatedBy}}",
															"description": "Optional. Return only APIs updated by the given user ID.",
															"disabled": true
														},
														{
															"key": "isPublic",
															"value": "{{isPublic}}",
															"description": "Optional. If true, return only public APIs; if false, return only private APIs.",
															"disabled": true
														},
														{
															"key": "name",
															"value": "{{name}}",
															"description": "Optional. Return only APIs whose name includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "summary",
															"value": "{{summary}}",
															"description": "Optional. Return only APIs whose summary includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "description",
															"value": "{{description}}",
															"description": "Optional. Return only APIs whose description includes the given value. Matching is not case-sensitive.",
															"disabled": true
														},
														{
															"key": "sort",
															"value": "{{sort}}",
															"description": "Optional. Sort the results by the given value.\n\nIf you use this query parameter, you must also use the `direction` parameter.",
															"disabled": true
														},
														{
															"key": "direction",
															"value": "{{direction}}",
															"description": "Optional. Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.\n\nIf you use this query parameter, you must also use the \"sort\" parameter.",
															"disabled": true
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 16:39:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "120"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx"
												},
												{
													"key": "x-frame-options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "x-srv-trace",
													"value": "v=1;t=915b2bd230311a7e"
												},
												{
													"key": "x-srv-span",
													"value": "v=1;s=108d09101d76e02a"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "400"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "399"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "1657644009"
												},
												{
													"key": "ETag",
													"value": "W/\"78-WpLmxRlFkKKPPDh/y4B5Gn3NuSs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Create an API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"api\": {\n        \"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n        \"description\": \"{{apiDescription}}\"\n    }\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "workspaceId",
													"value": "{{workspaceId}}",
													"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
													"disabled": true
												}
											]
										},
										"description": "Creates an API. Include the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n    \n\nYou can include the following optional properties:\n\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
															"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
										},
										{
											"name": "Create API in a Workspace",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
															"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
															"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"summary\": \"Test API Schema\",\n        \"description\": \"This is a test API.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "workspace",
															"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
															"description": "Optional. The workspace ID in which to create the API.\n\nIf you do not use this parameter, the system creates the API in the \"My Workspace\" workspace.",
															"disabled": true
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Get an API",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Gets information about an API."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": {
														"content": "",
														"type": "text/plain"
													},
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-09T14:48:45.000Z\",\n        \"updatedAt\": \"2022-06-09T19:50:49.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API\",\n        \"summary\": \"Test API.\",\n        \"description\": \"This is a test API.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\",\n        \"team\": \"1234\",\n        \"isPublic\": true,\n        \"versions\": [\n            {\n                \"id\": \"a9879d02-74bf-425a-bbec-6d27aa135507\",\n                \"name\": \"Draft\",\n                \"summary\": null,\n                \"schemas\": [\n                    {\n                        \"id\": \"16bb367e-fafb-4ef3-933b-ee3d971866fb\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"json\",\n                        \"content\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": {\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"title\\\": \\\"Test API\\\"\\n  },\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://locahost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"List all users\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"required\\\": true,\\n            \\\"description\\\": \\\"The user's ID.\\\",\\n            \\\"example\\\": 1234,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Information about the user.\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses.\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"#/components/schemas/User\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n                    }\n                ],\n                \"relations\": [\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"apiDefinition\",\n                        \"type\": \"apiDefinition\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    },\n                    {\n                        \"id\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\",\n                        \"model\": \"schema\",\n                        \"type\": \"schema\",\n                        \"modelId\": \"66b88a55-9e52-41b0-8577-7b6798ff5bee\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Update an API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"api\": {\n\t\t\"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n\t\t\"description\": \"{{apiDescription}}\"\n\t}\n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Updates an API. Include at least one of the following properties in the `api` object:\n\n*   `name` — A **string** value that contains the API's name.\n*   `summary` — A **string** value that contains a summary of the API.\n*   `description` — A **string** value that contains the description of the API."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"api\": {\n        \"createdAt\": \"2022-06-29T20:46:58.000Z\",\n        \"updatedAt\": \"2022-06-29T20:46:58.000Z\",\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\",\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\",\n        \"createdBy\": \"12345678\",\n        \"updatedBy\": \"12345678\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"api\": {\n        \"name\": \"Test API A\",\n        \"summary\": \"Test API A Schema\",\n        \"description\": \"This is Test API A.\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								},
								{
									"name": "Delete an API",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/apis/{{apiId}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										},
										"description": "Deletes an API."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"api\": {\n        \"id\": \"5360b75f-447e-467c-9299-12fd6c92450d\"\n    }\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\"\n    }\n}"
										},
										{
											"name": "Rate Limit Exceeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d",
													"protocol": "https",
													"host": [
														"api",
														"getpostman",
														"com"
													],
													"path": [
														"apis",
														"5360b75f-447e-467c-9299-12fd6c92450d"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": {
														"content": "",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
										}
									]
								}
							]
						}
					],
					"description": "**These endpoints are deprecated.**"
				},
				{
					"name": "Import",
					"item": [
						{
							"name": "Import an exported Postman data dump file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "type",
											"value": "file",
											"description": "(Required) The `file` type value.",
											"type": "text"
										},
										{
											"key": "input",
											"description": "(Required) A file containing a valid user's export .zip file.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/import/exported",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"import",
										"exported"
									],
									"query": [
										{
											"key": "workspace",
											"value": "<string>",
											"description": "The workspace ID in which to import the exported Postman data dump file.\n\nIf you do not include this query parameter, the system defaults to the \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								},
								"description": "**This endpoint is deprecated.**\n\nImports exported Postman data. This endpoint only accepts [export data dump files](https://postman.postman.co/me/export).\n\nFor more information, read our [Exporting data dumps](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/#exporting-data-dumps) documentation."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "https://api.getpostman.com/import/exported?type=file&input",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"import",
												"exported"
											],
											"query": [
												{
													"key": "type",
													"value": "file"
												},
												{
													"key": "input",
													"value": null
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"collections\": [\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test API\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    ]\n}"
								},
								{
									"name": "Invalid Parameters",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/import/exported?type=file&input",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"import",
												"exported"
											],
											"query": [
												{
													"key": "type",
													"value": "file"
												},
												{
													"key": "input",
													"value": null
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
								},
								{
									"name": "Missing Parameter",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/import/exported?type=file&input",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"import",
												"exported"
											],
											"query": [
												{
													"key": "type",
													"value": "file"
												},
												{
													"key": "input",
													"value": null
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n        \"details\": {\n            \"param\": \"type\"\n        }\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/import/exported?type=file&input",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"import",
												"exported"
											],
											"query": [
												{
													"key": "type",
													"value": "file"
												},
												{
													"key": "input",
													"value": null
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						}
					],
					"description": "**These endpoints are deprecated.**"
				},
				{
					"name": "Collections",
					"item": [
						{
							"name": "Merge a fork",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strategy\": \"{{mergeStrategy}}\",\n    \"source\": \"{{sourceCollectionId}}\",\n    \"destination\": \"{{destinationCollectionUid}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"merge"
									]
								},
								"description": "**This endpoint is deprecated.**\n\nMerges a forked collection back into its parent collection. You must have the [Editor role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#collection-roles) for the collection to merge a fork.\n\nInclude the following required properties in the request body:\n\n- `source` — A **string** value that contains the source collection's unique ID.\n    \n- `destination` — A **string** value that contains the destination (parent) collection's unique ID.\n    \n\nYou can also include the following optional properties in the request body:\n\n- `strategy` — A **string** value that contains the fork's merge strategy. One of:\n    \n    - `deleteSource` — Merge the changes into the parent collection. After the merge process is complete, Postman deletes the fork. You must have Editor access to both the parent and forked collections.\n        \n    - `updateSourceWithDestination` — (Default) Merge the changes into the parent collection. Any differences in the parent collection are also made to the fork."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/merge",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"merge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/merge",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"merge"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/merge",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"merge"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
								},
								{
									"name": "Rate Limit Exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"strategy\": \"deleteSource\",\n    \"source\": \"12345678-09547fef-a9a5-4e00-998b-aa563e8db69a\",\n    \"destination\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/collections/merge",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"collections",
												"merge"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1631439621"
										},
										{
											"key": "X-RateLimit-RetryAfter",
											"value": "4",
											"description": ""
										},
										{
											"key": "RetryAfter",
											"value": "4",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
								}
							]
						}
					],
					"description": "**These endpoints are deprecated.**"
				}
			],
			"description": "**These endpoints are deprecated.** At a future time they will no longer be available."
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{postman-api-key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postman-api-key",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://api.getpostman.com"
		},
		{
			"key": "euUrl",
			"value": "https://api.eu.postman.com"
		},
		{
			"key": "SCIM-apiKey",
			"value": ""
		}
	]
}